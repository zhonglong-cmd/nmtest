2020-02-21 21:07:39,809 - [test_register.py-->line:53] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-21 21:07:39,958 - [test_register.py-->line:53] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-21 21:07:40,031 - [test_register.py-->line:53] - INFO: 用例：不输入手机号，执行未通过
2020-02-21 21:07:40,113 - [test_register.py-->line:53] - INFO: 用例：手机号长度10位，执行未通过
2020-02-21 21:07:40,190 - [test_register.py-->line:53] - INFO: 用例：手机号长度12位，执行未通过
2020-02-21 21:07:40,275 - [test_register.py-->line:53] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-21 21:07:40,418 - [test_register.py-->line:53] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-21 21:07:40,491 - [test_register.py-->line:53] - INFO: 用例：密码7位，执行未通过
2020-02-21 21:07:40,580 - [test_register.py-->line:53] - INFO: 用例：密码17位，执行未通过
2020-02-21 21:07:40,663 - [test_register.py-->line:53] - INFO: 用例：不输入密码，执行未通过
2020-02-21 21:07:40,749 - [test_register.py-->line:53] - INFO: 用例：注册名11位，执行未通过
2020-02-21 21:07:40,848 - [test_register.py-->line:53] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-21 21:07:40,989 - [test_register.py-->line:53] - INFO: 用例：不输入类型，执行未通过
2020-02-21 21:23:53,689 - [test_register.py-->line:88] - INFO: 用例：登录成功，执行未通过
2020-02-21 21:23:53,791 - [test_register.py-->line:83] - ERROR: 用例：手机号为空，执行未通过
2020-02-21 21:23:53,792 - [test_register.py-->line:84] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_api_test\testcases\test_register.py", line 79, in test_login
    self.assertEqual(expected["code"],res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-21 21:23:53,868 - [test_register.py-->line:83] - ERROR: 用例：密码为空，执行未通过
2020-02-21 21:23:53,870 - [test_register.py-->line:84] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_api_test\testcases\test_register.py", line 79, in test_login
    self.assertEqual(expected["code"],res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-21 21:23:53,951 - [test_register.py-->line:88] - INFO: 用例：手机号未注册，执行未通过
2020-02-21 21:23:54,031 - [test_register.py-->line:88] - INFO: 用例：密码错误，执行未通过
2020-02-21 21:23:54,140 - [test_register.py-->line:88] - INFO: 用例：手机号格式错误，执行未通过
2020-02-21 21:23:54,230 - [test_register.py-->line:48] - ERROR: 用例：注册成功-带注册名，执行未通过
2020-02-21 21:23:54,230 - [test_register.py-->line:49] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py26_api_test\testcases\test_register.py", line 44, in test_register
    self.assertEqual(expected["code"],res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-21 21:23:54,292 - [test_register.py-->line:48] - ERROR: 用例：成功-不带用户名，执行未通过
2020-02-21 21:23:54,293 - [test_register.py-->line:49] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py26_api_test\testcases\test_register.py", line 44, in test_register
    self.assertEqual(expected["code"],res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-21 21:23:54,385 - [test_register.py-->line:53] - INFO: 用例：不输入手机号，执行未通过
2020-02-21 21:23:54,455 - [test_register.py-->line:53] - INFO: 用例：手机号长度10位，执行未通过
2020-02-21 21:23:54,520 - [test_register.py-->line:53] - INFO: 用例：手机号长度12位，执行未通过
2020-02-21 21:23:54,588 - [test_register.py-->line:53] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-21 21:23:54,660 - [test_register.py-->line:53] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-21 21:23:54,749 - [test_register.py-->line:53] - INFO: 用例：密码7位，执行未通过
2020-02-21 21:23:54,818 - [test_register.py-->line:53] - INFO: 用例：密码17位，执行未通过
2020-02-21 21:23:54,906 - [test_register.py-->line:53] - INFO: 用例：不输入密码，执行未通过
2020-02-21 21:23:54,979 - [test_register.py-->line:53] - INFO: 用例：注册名11位，执行未通过
2020-02-21 21:23:55,053 - [test_register.py-->line:53] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-21 21:23:55,125 - [test_register.py-->line:48] - ERROR: 用例：不输入类型，执行未通过
2020-02-21 21:23:55,125 - [test_register.py-->line:49] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py26_api_test\testcases\test_register.py", line 44, in test_register
    self.assertEqual(expected["code"],res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-21 21:28:26,062 - [test_register.py-->line:88] - INFO: 用例：登录成功，执行未通过
2020-02-21 21:28:26,176 - [test_register.py-->line:83] - ERROR: 用例：手机号为空，执行未通过
2020-02-21 21:28:26,177 - [test_register.py-->line:84] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_api_test\testcases\test_register.py", line 79, in test_login
    self.assertEqual(expected["code"],res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-21 21:28:26,296 - [test_register.py-->line:83] - ERROR: 用例：密码为空，执行未通过
2020-02-21 21:28:26,296 - [test_register.py-->line:84] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_api_test\testcases\test_register.py", line 79, in test_login
    self.assertEqual(expected["code"],res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-21 21:28:26,496 - [test_register.py-->line:88] - INFO: 用例：手机号未注册，执行未通过
2020-02-21 21:28:26,757 - [test_register.py-->line:88] - INFO: 用例：密码错误，执行未通过
2020-02-21 21:28:26,930 - [test_register.py-->line:88] - INFO: 用例：手机号格式错误，执行未通过
2020-02-21 21:28:27,170 - [test_register.py-->line:48] - ERROR: 用例：注册成功-带注册名，执行未通过
2020-02-21 21:28:27,172 - [test_register.py-->line:49] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py26_api_test\testcases\test_register.py", line 44, in test_register
    self.assertEqual(expected["code"],res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-21 21:28:27,335 - [test_register.py-->line:48] - ERROR: 用例：成功-不带用户名，执行未通过
2020-02-21 21:28:27,337 - [test_register.py-->line:49] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py26_api_test\testcases\test_register.py", line 44, in test_register
    self.assertEqual(expected["code"],res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-21 21:28:27,490 - [test_register.py-->line:53] - INFO: 用例：不输入手机号，执行未通过
2020-02-21 21:28:27,627 - [test_register.py-->line:53] - INFO: 用例：手机号长度10位，执行未通过
2020-02-21 21:28:27,730 - [test_register.py-->line:53] - INFO: 用例：手机号长度12位，执行未通过
2020-02-21 21:28:27,844 - [test_register.py-->line:53] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-21 21:28:28,034 - [test_register.py-->line:53] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-21 21:28:28,146 - [test_register.py-->line:53] - INFO: 用例：密码7位，执行未通过
2020-02-21 21:28:28,247 - [test_register.py-->line:53] - INFO: 用例：密码17位，执行未通过
2020-02-21 21:28:28,362 - [test_register.py-->line:53] - INFO: 用例：不输入密码，执行未通过
2020-02-21 21:28:28,467 - [test_register.py-->line:53] - INFO: 用例：注册名11位，执行未通过
2020-02-21 21:28:28,612 - [test_register.py-->line:53] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-21 21:28:28,795 - [test_register.py-->line:48] - ERROR: 用例：不输入类型，执行未通过
2020-02-21 21:28:28,795 - [test_register.py-->line:49] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py26_api_test\testcases\test_register.py", line 44, in test_register
    self.assertEqual(expected["code"],res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-02-21 21:45:13,820 - [test_register.py-->line:96] - INFO: 用例：登录成功，执行未通过
2020-02-21 21:45:13,919 - [test_register.py-->line:91] - ERROR: 用例：手机号为空，执行未通过
2020-02-21 21:45:13,919 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-21 21:45:14,016 - [test_register.py-->line:91] - ERROR: 用例：密码为空，执行未通过
2020-02-21 21:45:14,016 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-21 21:45:14,189 - [test_register.py-->line:96] - INFO: 用例：手机号未注册，执行未通过
2020-02-21 21:45:14,354 - [test_register.py-->line:96] - INFO: 用例：密码错误，执行未通过
2020-02-21 21:45:14,460 - [test_register.py-->line:96] - INFO: 用例：手机号格式错误，执行未通过
2020-02-21 21:45:14,661 - [test_register.py-->line:57] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-21 21:45:14,829 - [test_register.py-->line:57] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-21 21:45:14,937 - [test_register.py-->line:57] - INFO: 用例：不输入手机号，执行未通过
2020-02-21 21:45:15,073 - [test_register.py-->line:57] - INFO: 用例：手机号长度10位，执行未通过
2020-02-21 21:45:15,171 - [test_register.py-->line:57] - INFO: 用例：手机号长度12位，执行未通过
2020-02-21 21:45:15,283 - [test_register.py-->line:57] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-21 21:45:15,445 - [test_register.py-->line:57] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-21 21:45:15,586 - [test_register.py-->line:57] - INFO: 用例：密码7位，执行未通过
2020-02-21 21:45:15,687 - [test_register.py-->line:57] - INFO: 用例：密码17位，执行未通过
2020-02-21 21:45:15,790 - [test_register.py-->line:57] - INFO: 用例：不输入密码，执行未通过
2020-02-21 21:45:15,895 - [test_register.py-->line:57] - INFO: 用例：注册名11位，执行未通过
2020-02-21 21:45:16,036 - [test_register.py-->line:57] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-21 21:45:16,211 - [test_register.py-->line:57] - INFO: 用例：不输入类型，执行未通过
2020-02-24 11:55:42,820 - [test_register.py-->line:96] - INFO: 用例：登录成功，执行未通过
2020-02-24 11:55:42,970 - [test_register.py-->line:96] - INFO: 用例：登录失败-手机号未注册，执行未通过
2020-02-24 11:55:43,052 - [test_register.py-->line:96] - INFO: 用例：登录失败-手机号格式错误，执行未通过
2020-02-24 11:55:43,137 - [test_register.py-->line:91] - ERROR: 用例：登录失败-手机号为空，执行未通过
2020-02-24 11:55:43,137 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 11:55:43,332 - [test_register.py-->line:96] - INFO: 用例：登录失败-密码错误，执行未通过
2020-02-24 11:55:43,412 - [test_register.py-->line:91] - ERROR: 用例：登录失败-密码为空，执行未通过
2020-02-24 11:55:43,413 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 11:55:43,581 - [test_register.py-->line:57] - INFO: 用例：注册失败-重复注册，执行未通过
2020-02-24 11:55:43,660 - [test_register.py-->line:57] - INFO: 用例：注册失败-手机号为空，执行未通过
2020-02-24 11:55:43,734 - [test_register.py-->line:57] - INFO: 用例：注册失败-手机号码为12位，执行未通过
2020-02-24 11:55:43,809 - [test_register.py-->line:57] - INFO: 用例：注册失败-手机号码不全为数字，执行未通过
2020-02-24 11:55:43,887 - [test_register.py-->line:57] - INFO: 用例：注册失败-密码为空，执行未通过
2020-02-24 11:55:43,968 - [test_register.py-->line:57] - INFO: 用例：注册失败-密码等于7位，执行未通过
2020-02-24 11:55:44,054 - [test_register.py-->line:57] - INFO: 用例：注册失败-密码等于17位，执行未通过
2020-02-24 11:58:16,134 - [test_register.py-->line:96] - INFO: 用例：登录成功，执行未通过
2020-02-24 11:58:16,295 - [test_register.py-->line:96] - INFO: 用例：登录失败-手机号未注册，执行未通过
2020-02-24 11:58:16,371 - [test_register.py-->line:96] - INFO: 用例：登录失败-手机号格式错误，执行未通过
2020-02-24 11:58:16,448 - [test_register.py-->line:91] - ERROR: 用例：登录失败-手机号为空，执行未通过
2020-02-24 11:58:16,448 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 11:58:16,599 - [test_register.py-->line:96] - INFO: 用例：登录失败-密码错误，执行未通过
2020-02-24 11:58:16,677 - [test_register.py-->line:91] - ERROR: 用例：登录失败-密码为空，执行未通过
2020-02-24 11:58:16,677 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 11:58:16,842 - [test_register.py-->line:57] - INFO: 用例：注册失败-重复注册，执行未通过
2020-02-24 11:58:16,922 - [test_register.py-->line:57] - INFO: 用例：注册失败-手机号为空，执行未通过
2020-02-24 11:58:17,017 - [test_register.py-->line:57] - INFO: 用例：注册失败-手机号码为12位，执行未通过
2020-02-24 11:58:17,097 - [test_register.py-->line:57] - INFO: 用例：注册失败-手机号码不全为数字，执行未通过
2020-02-24 11:58:17,175 - [test_register.py-->line:57] - INFO: 用例：注册失败-密码为空，执行未通过
2020-02-24 11:58:17,256 - [test_register.py-->line:57] - INFO: 用例：注册失败-密码等于7位，执行未通过
2020-02-24 11:58:17,332 - [test_register.py-->line:57] - INFO: 用例：注册失败-密码等于17位，执行未通过
2020-02-24 11:59:02,880 - [test_register.py-->line:96] - INFO: 用例：登录成功，执行未通过
2020-02-24 11:59:03,038 - [test_register.py-->line:96] - INFO: 用例：登录失败-手机号未注册，执行未通过
2020-02-24 11:59:03,109 - [test_register.py-->line:96] - INFO: 用例：登录失败-手机号格式错误，执行未通过
2020-02-24 11:59:03,198 - [test_register.py-->line:91] - ERROR: 用例：登录失败-手机号为空，执行未通过
2020-02-24 11:59:03,198 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 11:59:03,338 - [test_register.py-->line:96] - INFO: 用例：登录失败-密码错误，执行未通过
2020-02-24 11:59:03,411 - [test_register.py-->line:91] - ERROR: 用例：登录失败-密码为空，执行未通过
2020-02-24 11:59:03,411 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 11:59:03,596 - [test_register.py-->line:57] - INFO: 用例：注册失败-重复注册，执行未通过
2020-02-24 11:59:03,698 - [test_register.py-->line:57] - INFO: 用例：注册失败-手机号为空，执行未通过
2020-02-24 11:59:03,791 - [test_register.py-->line:57] - INFO: 用例：注册失败-手机号码为12位，执行未通过
2020-02-24 11:59:03,876 - [test_register.py-->line:57] - INFO: 用例：注册失败-手机号码不全为数字，执行未通过
2020-02-24 11:59:03,957 - [test_register.py-->line:57] - INFO: 用例：注册失败-密码为空，执行未通过
2020-02-24 11:59:04,033 - [test_register.py-->line:57] - INFO: 用例：注册失败-密码等于7位，执行未通过
2020-02-24 11:59:04,117 - [test_register.py-->line:57] - INFO: 用例：注册失败-密码等于17位，执行未通过
2020-02-24 11:59:30,897 - [test_register.py-->line:96] - INFO: 用例：登录成功，执行未通过
2020-02-24 11:59:31,035 - [test_register.py-->line:96] - INFO: 用例：登录失败-手机号未注册，执行未通过
2020-02-24 11:59:31,112 - [test_register.py-->line:96] - INFO: 用例：登录失败-手机号格式错误，执行未通过
2020-02-24 11:59:31,187 - [test_register.py-->line:91] - ERROR: 用例：登录失败-手机号为空，执行未通过
2020-02-24 11:59:31,187 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 11:59:31,335 - [test_register.py-->line:96] - INFO: 用例：登录失败-密码错误，执行未通过
2020-02-24 11:59:31,424 - [test_register.py-->line:91] - ERROR: 用例：登录失败-密码为空，执行未通过
2020-02-24 11:59:31,424 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 11:59:31,590 - [test_register.py-->line:57] - INFO: 用例：注册失败-重复注册，执行未通过
2020-02-24 11:59:31,686 - [test_register.py-->line:57] - INFO: 用例：注册失败-手机号为空，执行未通过
2020-02-24 11:59:31,765 - [test_register.py-->line:57] - INFO: 用例：注册失败-手机号码为12位，执行未通过
2020-02-24 11:59:31,844 - [test_register.py-->line:57] - INFO: 用例：注册失败-手机号码不全为数字，执行未通过
2020-02-24 11:59:31,925 - [test_register.py-->line:57] - INFO: 用例：注册失败-密码为空，执行未通过
2020-02-24 11:59:32,003 - [test_register.py-->line:57] - INFO: 用例：注册失败-密码等于7位，执行未通过
2020-02-24 11:59:32,078 - [test_register.py-->line:57] - INFO: 用例：注册失败-密码等于17位，执行未通过
2020-02-24 12:00:16,909 - [test_register.py-->line:96] - INFO: 用例：登录成功，执行未通过
2020-02-24 12:00:16,982 - [test_register.py-->line:96] - INFO: 用例：登录失败-手机号未注册，执行未通过
2020-02-24 12:00:17,053 - [test_register.py-->line:96] - INFO: 用例：登录失败-手机号格式错误，执行未通过
2020-02-24 12:00:17,123 - [test_register.py-->line:91] - ERROR: 用例：登录失败-手机号为空，执行未通过
2020-02-24 12:00:17,123 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 12:00:17,196 - [test_register.py-->line:96] - INFO: 用例：登录失败-密码错误，执行未通过
2020-02-24 12:00:17,266 - [test_register.py-->line:91] - ERROR: 用例：登录失败-密码为空，执行未通过
2020-02-24 12:00:17,266 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 12:00:17,379 - [test_register.py-->line:57] - INFO: 用例：注册失败-重复注册，执行未通过
2020-02-24 12:00:17,483 - [test_register.py-->line:57] - INFO: 用例：注册失败-手机号为空，执行未通过
2020-02-24 12:00:17,588 - [test_register.py-->line:57] - INFO: 用例：注册失败-手机号码为12位，执行未通过
2020-02-24 12:00:17,690 - [test_register.py-->line:57] - INFO: 用例：注册失败-手机号码不全为数字，执行未通过
2020-02-24 12:00:17,769 - [test_register.py-->line:57] - INFO: 用例：注册失败-密码为空，执行未通过
2020-02-24 12:00:17,852 - [test_register.py-->line:57] - INFO: 用例：注册失败-密码等于7位，执行未通过
2020-02-24 12:00:17,948 - [test_register.py-->line:57] - INFO: 用例：注册失败-密码等于17位，执行未通过
2020-02-24 15:09:22,597 - [test_register.py-->line:96] - INFO: 用例：登录成功，执行未通过
2020-02-24 15:09:22,733 - [test_register.py-->line:96] - INFO: 用例：登录失败-手机号未注册，执行未通过
2020-02-24 15:09:22,811 - [test_register.py-->line:96] - INFO: 用例：登录失败-手机号格式错误，执行未通过
2020-02-24 15:09:22,885 - [test_register.py-->line:91] - ERROR: 用例：登录失败-手机号为空，执行未通过
2020-02-24 15:09:22,885 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 15:09:23,043 - [test_register.py-->line:96] - INFO: 用例：登录失败-密码错误，执行未通过
2020-02-24 15:09:23,114 - [test_register.py-->line:91] - ERROR: 用例：登录失败-密码为空，执行未通过
2020-02-24 15:09:23,114 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 15:09:23,284 - [test_register.py-->line:57] - INFO: 用例：注册失败-重复注册，执行未通过
2020-02-24 15:09:23,386 - [test_register.py-->line:57] - INFO: 用例：注册失败-手机号为空，执行未通过
2020-02-24 15:09:23,474 - [test_register.py-->line:57] - INFO: 用例：注册失败-手机号码为12位，执行未通过
2020-02-24 15:09:23,553 - [test_register.py-->line:57] - INFO: 用例：注册失败-手机号码不全为数字，执行未通过
2020-02-24 15:09:23,628 - [test_register.py-->line:57] - INFO: 用例：注册失败-密码为空，执行未通过
2020-02-24 15:09:23,718 - [test_register.py-->line:57] - INFO: 用例：注册失败-密码等于7位，执行未通过
2020-02-24 15:09:23,804 - [test_register.py-->line:57] - INFO: 用例：注册失败-密码等于17位，执行未通过
2020-02-24 15:10:00,894 - [test_register.py-->line:96] - INFO: 用例：登录成功，执行未通过
2020-02-24 15:10:00,982 - [test_register.py-->line:91] - ERROR: 用例：手机号为空，执行未通过
2020-02-24 15:10:00,982 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 15:10:01,070 - [test_register.py-->line:91] - ERROR: 用例：密码为空，执行未通过
2020-02-24 15:10:01,071 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 15:10:01,217 - [test_register.py-->line:96] - INFO: 用例：手机号未注册，执行未通过
2020-02-24 15:10:01,360 - [test_register.py-->line:96] - INFO: 用例：密码错误，执行未通过
2020-02-24 15:10:01,448 - [test_register.py-->line:96] - INFO: 用例：手机号格式错误，执行未通过
2020-02-24 15:10:01,605 - [test_register.py-->line:57] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-24 15:10:01,736 - [test_register.py-->line:57] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-24 15:10:01,811 - [test_register.py-->line:57] - INFO: 用例：不输入手机号，执行未通过
2020-02-24 15:10:01,886 - [test_register.py-->line:57] - INFO: 用例：手机号长度10位，执行未通过
2020-02-24 15:10:01,961 - [test_register.py-->line:57] - INFO: 用例：手机号长度12位，执行未通过
2020-02-24 15:10:02,048 - [test_register.py-->line:57] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-24 15:10:02,189 - [test_register.py-->line:57] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-24 15:10:02,269 - [test_register.py-->line:57] - INFO: 用例：密码7位，执行未通过
2020-02-24 15:10:02,343 - [test_register.py-->line:57] - INFO: 用例：密码17位，执行未通过
2020-02-24 15:10:02,419 - [test_register.py-->line:57] - INFO: 用例：不输入密码，执行未通过
2020-02-24 15:10:02,517 - [test_register.py-->line:57] - INFO: 用例：注册名11位，执行未通过
2020-02-24 15:10:02,591 - [test_register.py-->line:57] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-24 15:10:02,758 - [test_register.py-->line:57] - INFO: 用例：不输入类型，执行未通过
2020-02-24 20:24:45,602 - [test_register.py-->line:96] - INFO: 用例：登录成功，执行未通过
2020-02-24 20:24:45,980 - [test_register.py-->line:91] - ERROR: 用例：手机号为空，执行未通过
2020-02-24 20:24:45,980 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 20:24:46,378 - [test_register.py-->line:91] - ERROR: 用例：密码为空，执行未通过
2020-02-24 20:24:46,379 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 20:24:46,803 - [test_register.py-->line:96] - INFO: 用例：手机号未注册，执行未通过
2020-02-24 20:24:47,194 - [test_register.py-->line:96] - INFO: 用例：密码错误，执行未通过
2020-02-24 20:24:47,552 - [test_register.py-->line:96] - INFO: 用例：手机号格式错误，执行未通过
2020-02-24 20:24:48,063 - [test_register.py-->line:57] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-24 20:24:48,489 - [test_register.py-->line:57] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-24 20:24:48,621 - [test_register.py-->line:57] - INFO: 用例：不输入手机号，执行未通过
2020-02-24 20:24:48,792 - [test_register.py-->line:57] - INFO: 用例：手机号长度10位，执行未通过
2020-02-24 20:24:48,946 - [test_register.py-->line:57] - INFO: 用例：手机号长度12位，执行未通过
2020-02-24 20:24:49,104 - [test_register.py-->line:57] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-24 20:24:49,321 - [test_register.py-->line:57] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-24 20:24:49,491 - [test_register.py-->line:57] - INFO: 用例：密码7位，执行未通过
2020-02-24 20:24:49,687 - [test_register.py-->line:57] - INFO: 用例：密码17位，执行未通过
2020-02-24 20:24:49,830 - [test_register.py-->line:57] - INFO: 用例：不输入密码，执行未通过
2020-02-24 20:24:49,973 - [test_register.py-->line:57] - INFO: 用例：注册名11位，执行未通过
2020-02-24 20:24:50,116 - [test_register.py-->line:57] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-24 20:24:50,349 - [test_register.py-->line:57] - INFO: 用例：不输入类型，执行未通过
2020-02-24 20:27:45,653 - [test_register.py-->line:96] - INFO: 用例：登录成功，执行未通过
2020-02-24 20:27:45,789 - [test_register.py-->line:91] - ERROR: 用例：手机号为空，执行未通过
2020-02-24 20:27:45,789 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 20:27:45,986 - [test_register.py-->line:91] - ERROR: 用例：密码为空，执行未通过
2020-02-24 20:27:45,986 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 20:27:46,231 - [test_register.py-->line:96] - INFO: 用例：手机号未注册，执行未通过
2020-02-24 20:27:46,434 - [test_register.py-->line:96] - INFO: 用例：密码错误，执行未通过
2020-02-24 20:27:46,589 - [test_register.py-->line:96] - INFO: 用例：手机号格式错误，执行未通过
2020-02-24 20:27:46,858 - [test_register.py-->line:57] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-24 20:27:47,088 - [test_register.py-->line:57] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-24 20:27:47,230 - [test_register.py-->line:57] - INFO: 用例：不输入手机号，执行未通过
2020-02-24 20:27:47,362 - [test_register.py-->line:57] - INFO: 用例：手机号长度10位，执行未通过
2020-02-24 20:27:47,533 - [test_register.py-->line:57] - INFO: 用例：手机号长度12位，执行未通过
2020-02-24 20:27:47,715 - [test_register.py-->line:57] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-24 20:27:47,929 - [test_register.py-->line:57] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-24 20:27:48,056 - [test_register.py-->line:57] - INFO: 用例：密码7位，执行未通过
2020-02-24 20:27:48,178 - [test_register.py-->line:57] - INFO: 用例：密码17位，执行未通过
2020-02-24 20:27:48,304 - [test_register.py-->line:57] - INFO: 用例：不输入密码，执行未通过
2020-02-24 20:27:48,455 - [test_register.py-->line:57] - INFO: 用例：注册名11位，执行未通过
2020-02-24 20:27:48,584 - [test_register.py-->line:57] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-24 20:27:48,800 - [test_register.py-->line:57] - INFO: 用例：不输入类型，执行未通过
2020-02-24 20:28:38,663 - [test_rechage.py-->line:78] - INFO: 用例：充值成功-整数，执行未通过
2020-02-24 20:28:38,826 - [test_rechage.py-->line:78] - INFO: 用例：充值成功-1位小数，执行未通过
2020-02-24 20:28:38,964 - [test_rechage.py-->line:78] - INFO: 用例：充值成功-2位小数，执行未通过
2020-02-24 20:28:39,158 - [test_rechage.py-->line:78] - INFO: 用例：充值成功-50万，执行未通过
2020-02-24 20:28:39,285 - [test_rechage.py-->line:78] - INFO: 用例：会员id为空，执行未通过
2020-02-24 20:28:39,412 - [test_rechage.py-->line:78] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-02-24 20:28:39,558 - [test_rechage.py-->line:73] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-24 20:28:39,558 - [test_rechage.py-->line:74] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-24 20:28:39,700 - [test_rechage.py-->line:78] - INFO: 用例：会员id为小数，执行未通过
2020-02-24 20:28:39,852 - [test_rechage.py-->line:73] - ERROR: 用例：充值金额为0，执行未通过
2020-02-24 20:28:39,852 - [test_rechage.py-->line:74] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-24 20:28:40,050 - [test_rechage.py-->line:78] - INFO: 用例：充值金额为负数，执行未通过
2020-02-24 20:28:40,193 - [test_rechage.py-->line:73] - ERROR: 用例：充值金额为空，执行未通过
2020-02-24 20:28:40,193 - [test_rechage.py-->line:74] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 69, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 20:28:40,387 - [test_rechage.py-->line:78] - INFO: 用例：充值金额-3位小数，执行未通过
2020-02-24 20:28:40,525 - [test_rechage.py-->line:78] - INFO: 用例：充值金额-大于50万，执行未通过
2020-02-24 20:28:40,683 - [test_rechage.py-->line:78] - INFO: 用例：充值金额-非数字，执行未通过
2020-02-24 20:28:40,917 - [test_register.py-->line:96] - INFO: 用例：登录成功，执行未通过
2020-02-24 20:28:41,068 - [test_register.py-->line:91] - ERROR: 用例：手机号为空，执行未通过
2020-02-24 20:28:41,068 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 20:28:41,266 - [test_register.py-->line:91] - ERROR: 用例：密码为空，执行未通过
2020-02-24 20:28:41,266 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 20:28:41,459 - [test_register.py-->line:96] - INFO: 用例：手机号未注册，执行未通过
2020-02-24 20:28:41,682 - [test_register.py-->line:96] - INFO: 用例：密码错误，执行未通过
2020-02-24 20:28:41,861 - [test_register.py-->line:96] - INFO: 用例：手机号格式错误，执行未通过
2020-02-24 20:28:42,101 - [test_register.py-->line:57] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-24 20:28:42,294 - [test_register.py-->line:57] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-24 20:28:42,430 - [test_register.py-->line:57] - INFO: 用例：不输入手机号，执行未通过
2020-02-24 20:28:42,579 - [test_register.py-->line:57] - INFO: 用例：手机号长度10位，执行未通过
2020-02-24 20:28:42,745 - [test_register.py-->line:57] - INFO: 用例：手机号长度12位，执行未通过
2020-02-24 20:28:42,881 - [test_register.py-->line:57] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-24 20:28:43,092 - [test_register.py-->line:57] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-24 20:28:43,225 - [test_register.py-->line:57] - INFO: 用例：密码7位，执行未通过
2020-02-24 20:28:43,391 - [test_register.py-->line:57] - INFO: 用例：密码17位，执行未通过
2020-02-24 20:28:43,515 - [test_register.py-->line:57] - INFO: 用例：不输入密码，执行未通过
2020-02-24 20:28:43,654 - [test_register.py-->line:57] - INFO: 用例：注册名11位，执行未通过
2020-02-24 20:28:43,780 - [test_register.py-->line:57] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-24 20:28:43,988 - [test_register.py-->line:57] - INFO: 用例：不输入类型，执行未通过
2020-02-24 21:51:57,500 - [test_rechage.py-->line:91] - ERROR: 用例：充值成功-整数，执行未通过
2020-02-24 21:51:57,500 - [test_rechage.py-->line:92] - ERROR: Decimal('0.00') != 600
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 88, in test_recharge
    self.assertEqual(end_money - start_money, data["amount"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('0.00') != 600
2020-02-24 21:51:57,852 - [test_rechage.py-->line:91] - ERROR: 用例：充值成功-1位小数，执行未通过
2020-02-24 21:51:57,852 - [test_rechage.py-->line:92] - ERROR: Decimal('0.00') != 600.1
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 88, in test_recharge
    self.assertEqual(end_money - start_money, data["amount"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('0.00') != 600.1
2020-02-24 21:51:58,295 - [test_rechage.py-->line:91] - ERROR: 用例：充值成功-2位小数，执行未通过
2020-02-24 21:51:58,295 - [test_rechage.py-->line:92] - ERROR: Decimal('0.00') != 600.22
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 88, in test_recharge
    self.assertEqual(end_money - start_money, data["amount"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('0.00') != 600.22
2020-02-24 21:51:58,661 - [test_rechage.py-->line:91] - ERROR: 用例：充值成功-50万，执行未通过
2020-02-24 21:51:58,661 - [test_rechage.py-->line:92] - ERROR: Decimal('0.00') != 500000
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 88, in test_recharge
    self.assertEqual(end_money - start_money, data["amount"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('0.00') != 500000
2020-02-24 21:51:58,847 - [test_rechage.py-->line:96] - INFO: 用例：会员id为空，执行未通过
2020-02-24 21:51:59,059 - [test_rechage.py-->line:96] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-02-24 21:51:59,246 - [test_rechage.py-->line:91] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-24 21:51:59,246 - [test_rechage.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-24 21:51:59,448 - [test_rechage.py-->line:96] - INFO: 用例：会员id为小数，执行未通过
2020-02-24 21:51:59,611 - [test_rechage.py-->line:91] - ERROR: 用例：充值金额为0，执行未通过
2020-02-24 21:51:59,612 - [test_rechage.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-24 21:51:59,835 - [test_rechage.py-->line:91] - ERROR: 用例：充值金额为负数，执行未通过
2020-02-24 21:51:59,835 - [test_rechage.py-->line:92] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-24 21:52:00,136 - [test_rechage.py-->line:91] - ERROR: 用例：充值金额为空，执行未通过
2020-02-24 21:52:00,136 - [test_rechage.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 21:52:00,356 - [test_rechage.py-->line:96] - INFO: 用例：充值金额-3位小数，执行未通过
2020-02-24 21:52:00,558 - [test_rechage.py-->line:91] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-02-24 21:52:00,558 - [test_rechage.py-->line:92] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-24 21:52:00,728 - [test_rechage.py-->line:96] - INFO: 用例：充值金额-非数字，执行未通过
2020-02-24 21:52:01,009 - [test_register.py-->line:96] - INFO: 用例：登录成功，执行未通过
2020-02-24 21:52:01,170 - [test_register.py-->line:91] - ERROR: 用例：手机号为空，执行未通过
2020-02-24 21:52:01,171 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 21:52:01,379 - [test_register.py-->line:91] - ERROR: 用例：密码为空，执行未通过
2020-02-24 21:52:01,379 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 21:52:01,626 - [test_register.py-->line:96] - INFO: 用例：手机号未注册，执行未通过
2020-02-24 21:52:01,868 - [test_register.py-->line:96] - INFO: 用例：密码错误，执行未通过
2020-02-24 21:52:02,053 - [test_register.py-->line:96] - INFO: 用例：手机号格式错误，执行未通过
2020-02-24 21:52:02,354 - [test_register.py-->line:57] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-24 21:52:02,614 - [test_register.py-->line:57] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-24 21:52:02,785 - [test_register.py-->line:57] - INFO: 用例：不输入手机号，执行未通过
2020-02-24 21:52:02,969 - [test_register.py-->line:57] - INFO: 用例：手机号长度10位，执行未通过
2020-02-24 21:52:03,130 - [test_register.py-->line:57] - INFO: 用例：手机号长度12位，执行未通过
2020-02-24 21:52:03,310 - [test_register.py-->line:57] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-24 21:52:03,555 - [test_register.py-->line:57] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-24 21:52:03,745 - [test_register.py-->line:57] - INFO: 用例：密码7位，执行未通过
2020-02-24 21:52:03,926 - [test_register.py-->line:57] - INFO: 用例：密码17位，执行未通过
2020-02-24 21:52:04,110 - [test_register.py-->line:57] - INFO: 用例：不输入密码，执行未通过
2020-02-24 21:52:04,292 - [test_register.py-->line:57] - INFO: 用例：注册名11位，执行未通过
2020-02-24 21:52:04,466 - [test_register.py-->line:57] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-24 21:52:04,718 - [test_register.py-->line:57] - INFO: 用例：不输入类型，执行未通过
2020-02-24 21:59:43,662 - [test_rechage.py-->line:96] - INFO: 用例：充值成功-整数，执行未通过
2020-02-24 21:59:43,993 - [test_rechage.py-->line:91] - ERROR: 用例：充值成功-1位小数，执行未通过
2020-02-24 21:59:43,993 - [test_rechage.py-->line:92] - ERROR: Decimal('600.10') != 600.1
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 88, in test_recharge
    self.assertEqual(end_money - start_money, data["amount"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.10') != 600.1
2020-02-24 21:59:44,381 - [test_rechage.py-->line:91] - ERROR: 用例：充值成功-2位小数，执行未通过
2020-02-24 21:59:44,381 - [test_rechage.py-->line:92] - ERROR: Decimal('600.22') != 600.22
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 88, in test_recharge
    self.assertEqual(end_money - start_money, data["amount"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.22') != 600.22
2020-02-24 21:59:44,745 - [test_rechage.py-->line:96] - INFO: 用例：充值成功-50万，执行未通过
2020-02-24 21:59:44,868 - [test_rechage.py-->line:96] - INFO: 用例：会员id为空，执行未通过
2020-02-24 21:59:44,998 - [test_rechage.py-->line:96] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-02-24 21:59:45,146 - [test_rechage.py-->line:91] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-24 21:59:45,147 - [test_rechage.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-24 21:59:45,290 - [test_rechage.py-->line:96] - INFO: 用例：会员id为小数，执行未通过
2020-02-24 21:59:45,427 - [test_rechage.py-->line:91] - ERROR: 用例：充值金额为0，执行未通过
2020-02-24 21:59:45,428 - [test_rechage.py-->line:92] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-24 21:59:45,582 - [test_rechage.py-->line:91] - ERROR: 用例：充值金额为负数，执行未通过
2020-02-24 21:59:45,582 - [test_rechage.py-->line:92] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-24 21:59:45,731 - [test_rechage.py-->line:91] - ERROR: 用例：充值金额为空，执行未通过
2020-02-24 21:59:45,732 - [test_rechage.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 21:59:45,862 - [test_rechage.py-->line:96] - INFO: 用例：充值金额-3位小数，执行未通过
2020-02-24 21:59:45,995 - [test_rechage.py-->line:91] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-02-24 21:59:45,996 - [test_rechage.py-->line:92] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-24 21:59:46,145 - [test_rechage.py-->line:96] - INFO: 用例：充值金额-非数字，执行未通过
2020-02-24 21:59:46,353 - [test_register.py-->line:96] - INFO: 用例：登录成功，执行未通过
2020-02-24 21:59:46,479 - [test_register.py-->line:91] - ERROR: 用例：手机号为空，执行未通过
2020-02-24 21:59:46,479 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 21:59:46,666 - [test_register.py-->line:91] - ERROR: 用例：密码为空，执行未通过
2020-02-24 21:59:46,666 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 21:59:46,857 - [test_register.py-->line:96] - INFO: 用例：手机号未注册，执行未通过
2020-02-24 21:59:47,055 - [test_register.py-->line:96] - INFO: 用例：密码错误，执行未通过
2020-02-24 21:59:47,184 - [test_register.py-->line:96] - INFO: 用例：手机号格式错误，执行未通过
2020-02-24 21:59:47,419 - [test_register.py-->line:57] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-24 21:59:47,611 - [test_register.py-->line:57] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-24 21:59:47,766 - [test_register.py-->line:57] - INFO: 用例：不输入手机号，执行未通过
2020-02-24 21:59:47,898 - [test_register.py-->line:57] - INFO: 用例：手机号长度10位，执行未通过
2020-02-24 21:59:48,049 - [test_register.py-->line:57] - INFO: 用例：手机号长度12位，执行未通过
2020-02-24 21:59:48,180 - [test_register.py-->line:57] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-24 21:59:48,388 - [test_register.py-->line:57] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-24 21:59:48,519 - [test_register.py-->line:57] - INFO: 用例：密码7位，执行未通过
2020-02-24 21:59:48,679 - [test_register.py-->line:57] - INFO: 用例：密码17位，执行未通过
2020-02-24 21:59:48,811 - [test_register.py-->line:57] - INFO: 用例：不输入密码，执行未通过
2020-02-24 21:59:49,014 - [test_register.py-->line:57] - INFO: 用例：注册名11位，执行未通过
2020-02-24 21:59:49,167 - [test_register.py-->line:57] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-24 21:59:49,375 - [test_register.py-->line:57] - INFO: 用例：不输入类型，执行未通过
2020-02-24 22:03:36,732 - [test_rechage.py-->line:97] - INFO: 用例：充值成功-整数，执行未通过
2020-02-24 22:03:37,040 - [test_rechage.py-->line:97] - INFO: 用例：充值成功-1位小数，执行未通过
2020-02-24 22:03:37,376 - [test_rechage.py-->line:97] - INFO: 用例：充值成功-2位小数，执行未通过
2020-02-24 22:03:37,704 - [test_rechage.py-->line:97] - INFO: 用例：充值成功-50万，执行未通过
2020-02-24 22:03:37,852 - [test_rechage.py-->line:97] - INFO: 用例：会员id为空，执行未通过
2020-02-24 22:03:37,981 - [test_rechage.py-->line:97] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-02-24 22:03:38,113 - [test_rechage.py-->line:92] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-24 22:03:38,114 - [test_rechage.py-->line:93] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-24 22:03:38,263 - [test_rechage.py-->line:97] - INFO: 用例：会员id为小数，执行未通过
2020-02-24 22:03:38,402 - [test_rechage.py-->line:92] - ERROR: 用例：充值金额为0，执行未通过
2020-02-24 22:03:38,402 - [test_rechage.py-->line:93] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-24 22:03:38,591 - [test_rechage.py-->line:92] - ERROR: 用例：充值金额为负数，执行未通过
2020-02-24 22:03:38,591 - [test_rechage.py-->line:93] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-24 22:03:38,736 - [test_rechage.py-->line:92] - ERROR: 用例：充值金额为空，执行未通过
2020-02-24 22:03:38,736 - [test_rechage.py-->line:93] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 22:03:38,914 - [test_rechage.py-->line:97] - INFO: 用例：充值金额-3位小数，执行未通过
2020-02-24 22:03:39,054 - [test_rechage.py-->line:92] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-02-24 22:03:39,054 - [test_rechage.py-->line:93] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-24 22:03:39,204 - [test_rechage.py-->line:97] - INFO: 用例：充值金额-非数字，执行未通过
2020-02-24 22:03:39,427 - [test_register.py-->line:96] - INFO: 用例：登录成功，执行未通过
2020-02-24 22:03:39,547 - [test_register.py-->line:91] - ERROR: 用例：手机号为空，执行未通过
2020-02-24 22:03:39,547 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 22:03:39,693 - [test_register.py-->line:91] - ERROR: 用例：密码为空，执行未通过
2020-02-24 22:03:39,693 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 22:03:39,883 - [test_register.py-->line:96] - INFO: 用例：手机号未注册，执行未通过
2020-02-24 22:03:40,096 - [test_register.py-->line:96] - INFO: 用例：密码错误，执行未通过
2020-02-24 22:03:40,213 - [test_register.py-->line:96] - INFO: 用例：手机号格式错误，执行未通过
2020-02-24 22:03:40,434 - [test_register.py-->line:57] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-24 22:03:40,635 - [test_register.py-->line:57] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-24 22:03:40,771 - [test_register.py-->line:57] - INFO: 用例：不输入手机号，执行未通过
2020-02-24 22:03:40,900 - [test_register.py-->line:57] - INFO: 用例：手机号长度10位，执行未通过
2020-02-24 22:03:41,023 - [test_register.py-->line:57] - INFO: 用例：手机号长度12位，执行未通过
2020-02-24 22:03:41,160 - [test_register.py-->line:57] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-24 22:03:41,354 - [test_register.py-->line:57] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-24 22:03:41,490 - [test_register.py-->line:57] - INFO: 用例：密码7位，执行未通过
2020-02-24 22:03:41,660 - [test_register.py-->line:57] - INFO: 用例：密码17位，执行未通过
2020-02-24 22:03:41,813 - [test_register.py-->line:57] - INFO: 用例：不输入密码，执行未通过
2020-02-24 22:03:41,990 - [test_register.py-->line:57] - INFO: 用例：注册名11位，执行未通过
2020-02-24 22:03:42,123 - [test_register.py-->line:57] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-24 22:03:42,332 - [test_register.py-->line:57] - INFO: 用例：不输入类型，执行未通过
2020-02-24 22:06:00,593 - [test_rechage.py-->line:99] - INFO: 用例：充值成功-整数，执行未通过
2020-02-24 22:06:00,934 - [test_rechage.py-->line:99] - INFO: 用例：充值成功-1位小数，执行未通过
2020-02-24 22:06:01,315 - [test_rechage.py-->line:99] - INFO: 用例：充值成功-2位小数，执行未通过
2020-02-24 22:06:01,677 - [test_rechage.py-->line:99] - INFO: 用例：充值成功-50万，执行未通过
2020-02-24 22:06:01,806 - [test_rechage.py-->line:99] - INFO: 用例：会员id为空，执行未通过
2020-02-24 22:06:01,960 - [test_rechage.py-->line:99] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-02-24 22:06:02,123 - [test_rechage.py-->line:94] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-24 22:06:02,123 - [test_rechage.py-->line:95] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-24 22:06:02,270 - [test_rechage.py-->line:99] - INFO: 用例：会员id为小数，执行未通过
2020-02-24 22:06:02,406 - [test_rechage.py-->line:94] - ERROR: 用例：充值金额为0，执行未通过
2020-02-24 22:06:02,406 - [test_rechage.py-->line:95] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-24 22:06:02,565 - [test_rechage.py-->line:94] - ERROR: 用例：充值金额为负数，执行未通过
2020-02-24 22:06:02,565 - [test_rechage.py-->line:95] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-24 22:06:02,770 - [test_rechage.py-->line:94] - ERROR: 用例：充值金额为空，执行未通过
2020-02-24 22:06:02,770 - [test_rechage.py-->line:95] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 22:06:02,961 - [test_rechage.py-->line:99] - INFO: 用例：充值金额-3位小数，执行未通过
2020-02-24 22:06:03,096 - [test_rechage.py-->line:94] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-02-24 22:06:03,096 - [test_rechage.py-->line:95] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-24 22:06:03,285 - [test_rechage.py-->line:99] - INFO: 用例：充值金额-非数字，执行未通过
2020-02-24 22:06:03,526 - [test_register.py-->line:96] - INFO: 用例：登录成功，执行未通过
2020-02-24 22:06:03,655 - [test_register.py-->line:91] - ERROR: 用例：手机号为空，执行未通过
2020-02-24 22:06:03,655 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 22:06:03,820 - [test_register.py-->line:91] - ERROR: 用例：密码为空，执行未通过
2020-02-24 22:06:03,821 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-24 22:06:04,083 - [test_register.py-->line:96] - INFO: 用例：手机号未注册，执行未通过
2020-02-24 22:06:04,311 - [test_register.py-->line:96] - INFO: 用例：密码错误，执行未通过
2020-02-24 22:06:04,458 - [test_register.py-->line:96] - INFO: 用例：手机号格式错误，执行未通过
2020-02-24 22:06:04,698 - [test_register.py-->line:57] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-24 22:06:04,956 - [test_register.py-->line:57] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-24 22:06:05,156 - [test_register.py-->line:57] - INFO: 用例：不输入手机号，执行未通过
2020-02-24 22:06:05,357 - [test_register.py-->line:57] - INFO: 用例：手机号长度10位，执行未通过
2020-02-24 22:06:05,544 - [test_register.py-->line:57] - INFO: 用例：手机号长度12位，执行未通过
2020-02-24 22:06:05,691 - [test_register.py-->line:57] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-24 22:06:05,906 - [test_register.py-->line:57] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-24 22:06:06,067 - [test_register.py-->line:57] - INFO: 用例：密码7位，执行未通过
2020-02-24 22:06:06,238 - [test_register.py-->line:57] - INFO: 用例：密码17位，执行未通过
2020-02-24 22:06:06,407 - [test_register.py-->line:57] - INFO: 用例：不输入密码，执行未通过
2020-02-24 22:06:06,579 - [test_register.py-->line:57] - INFO: 用例：注册名11位，执行未通过
2020-02-24 22:06:06,744 - [test_register.py-->line:57] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-24 22:06:06,976 - [test_register.py-->line:57] - INFO: 用例：不输入类型，执行未通过
2020-02-26 10:09:24,602 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-整数，执行未通过
2020-02-26 10:09:24,864 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-1位小数，执行未通过
2020-02-26 10:09:25,150 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-2位小数，执行未通过
2020-02-26 10:09:25,401 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-50万，执行未通过
2020-02-26 10:09:25,491 - [test_rechage.py-->line:98] - INFO: 用例：会员id为空，执行未通过
2020-02-26 10:09:25,574 - [test_rechage.py-->line:98] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-02-26 10:09:25,685 - [test_rechage.py-->line:93] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-26 10:09:25,686 - [test_rechage.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 10:09:25,774 - [test_rechage.py-->line:98] - INFO: 用例：会员id为小数，执行未通过
2020-02-26 10:09:25,879 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为0，执行未通过
2020-02-26 10:09:25,879 - [test_rechage.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 10:09:25,966 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为负数，执行未通过
2020-02-26 10:09:25,966 - [test_rechage.py-->line:94] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 10:09:26,063 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为空，执行未通过
2020-02-26 10:09:26,063 - [test_rechage.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 10:09:26,155 - [test_rechage.py-->line:98] - INFO: 用例：充值金额-3位小数，执行未通过
2020-02-26 10:09:26,240 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-02-26 10:09:26,240 - [test_rechage.py-->line:94] - ERROR: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '充值金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 充值金额必须大于0并且小于或者等于500000
? ^^^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 10:09:26,321 - [test_rechage.py-->line:98] - INFO: 用例：充值金额-非数字，执行未通过
2020-02-26 10:09:26,491 - [test_register.py-->line:96] - INFO: 用例：登录成功，执行未通过
2020-02-26 10:09:26,565 - [test_register.py-->line:91] - ERROR: 用例：手机号为空，执行未通过
2020-02-26 10:09:26,565 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 10:09:26,648 - [test_register.py-->line:91] - ERROR: 用例：密码为空，执行未通过
2020-02-26 10:09:26,649 - [test_register.py-->line:92] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 87, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 10:09:26,797 - [test_register.py-->line:96] - INFO: 用例：手机号未注册，执行未通过
2020-02-26 10:09:26,947 - [test_register.py-->line:96] - INFO: 用例：密码错误，执行未通过
2020-02-26 10:09:27,023 - [test_register.py-->line:96] - INFO: 用例：手机号格式错误，执行未通过
2020-02-26 10:09:27,212 - [test_register.py-->line:57] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-26 10:09:27,378 - [test_register.py-->line:57] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-26 10:09:27,461 - [test_register.py-->line:57] - INFO: 用例：不输入手机号，执行未通过
2020-02-26 10:09:27,543 - [test_register.py-->line:57] - INFO: 用例：手机号长度10位，执行未通过
2020-02-26 10:09:27,634 - [test_register.py-->line:57] - INFO: 用例：手机号长度12位，执行未通过
2020-02-26 10:09:27,717 - [test_register.py-->line:57] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-26 10:09:27,864 - [test_register.py-->line:57] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-26 10:09:27,946 - [test_register.py-->line:57] - INFO: 用例：密码7位，执行未通过
2020-02-26 10:09:28,034 - [test_register.py-->line:57] - INFO: 用例：密码17位，执行未通过
2020-02-26 10:09:28,117 - [test_register.py-->line:57] - INFO: 用例：不输入密码，执行未通过
2020-02-26 10:09:28,200 - [test_register.py-->line:57] - INFO: 用例：注册名11位，执行未通过
2020-02-26 10:09:28,281 - [test_register.py-->line:57] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-26 10:09:28,435 - [test_register.py-->line:57] - INFO: 用例：不输入类型，执行未通过
2020-02-26 20:11:23,874 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-整数，执行未通过
2020-02-26 20:11:24,179 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-1位小数，执行未通过
2020-02-26 20:11:24,501 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-2位小数，执行未通过
2020-02-26 20:11:24,794 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-50万，执行未通过
2020-02-26 20:11:24,920 - [test_rechage.py-->line:98] - INFO: 用例：会员id为空，执行未通过
2020-02-26 20:11:25,043 - [test_rechage.py-->line:98] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-02-26 20:11:25,183 - [test_rechage.py-->line:93] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-26 20:11:25,183 - [test_rechage.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:11:25,362 - [test_rechage.py-->line:98] - INFO: 用例：会员id为小数，执行未通过
2020-02-26 20:11:25,497 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为0，执行未通过
2020-02-26 20:11:25,498 - [test_rechage.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:11:25,643 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为负数，执行未通过
2020-02-26 20:11:25,643 - [test_rechage.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 20:11:25,787 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为空，执行未通过
2020-02-26 20:11:25,787 - [test_rechage.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:11:25,954 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-02-26 20:11:25,954 - [test_rechage.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-02-26 20:11:26,102 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-02-26 20:11:26,102 - [test_rechage.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 20:11:26,298 - [test_rechage.py-->line:98] - INFO: 用例：充值金额-非数字，执行未通过
2020-02-26 20:11:26,552 - [test_register.py-->line:102] - INFO: 用例：登录成功，执行未通过
2020-02-26 20:11:26,685 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-02-26 20:11:26,685 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:11:26,875 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-02-26 20:11:26,875 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:11:27,103 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-02-26 20:11:27,324 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-02-26 20:11:27,473 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-02-26 20:11:27,832 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-26 20:11:28,151 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-26 20:11:28,306 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-02-26 20:11:28,472 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-02-26 20:11:28,608 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-02-26 20:11:28,730 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-26 20:11:28,938 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-26 20:11:29,064 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-02-26 20:11:29,185 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-02-26 20:11:29,354 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-02-26 20:11:29,501 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-02-26 20:11:29,626 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-26 20:11:29,937 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-02-26 20:36:31,974 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-整数，执行未通过
2020-02-26 20:36:32,515 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-1位小数，执行未通过
2020-02-26 20:36:33,035 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-2位小数，执行未通过
2020-02-26 20:36:33,553 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-50万，执行未通过
2020-02-26 20:36:33,876 - [test_rechage.py-->line:98] - INFO: 用例：会员id为空，执行未通过
2020-02-26 20:36:33,999 - [test_rechage.py-->line:98] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-02-26 20:36:34,143 - [test_rechage.py-->line:93] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-26 20:36:34,143 - [test_rechage.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:36:34,288 - [test_rechage.py-->line:98] - INFO: 用例：会员id为小数，执行未通过
2020-02-26 20:36:34,471 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为0，执行未通过
2020-02-26 20:36:34,471 - [test_rechage.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:36:34,599 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为负数，执行未通过
2020-02-26 20:36:34,599 - [test_rechage.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 20:36:34,732 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为空，执行未通过
2020-02-26 20:36:34,732 - [test_rechage.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:36:34,863 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-02-26 20:36:34,863 - [test_rechage.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-02-26 20:36:34,998 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-02-26 20:36:34,998 - [test_rechage.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 20:36:35,129 - [test_rechage.py-->line:98] - INFO: 用例：充值金额-非数字，执行未通过
2020-02-26 20:36:35,375 - [test_register.py-->line:102] - INFO: 用例：登录成功，执行未通过
2020-02-26 20:36:35,541 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-02-26 20:36:35,541 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:36:35,701 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-02-26 20:36:35,701 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:36:35,921 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-02-26 20:36:36,120 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-02-26 20:36:36,263 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-02-26 20:36:36,658 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-26 20:36:37,019 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-26 20:36:37,141 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-02-26 20:36:37,290 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-02-26 20:36:37,420 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-02-26 20:36:37,557 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-26 20:36:37,766 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-26 20:36:37,895 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-02-26 20:36:38,033 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-02-26 20:36:38,164 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-02-26 20:36:38,333 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-02-26 20:36:38,461 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-26 20:36:38,792 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-02-26 20:39:54,720 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-整数，执行未通过
2020-02-26 20:39:55,093 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-1位小数，执行未通过
2020-02-26 20:39:55,433 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-2位小数，执行未通过
2020-02-26 20:39:55,770 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-50万，执行未通过
2020-02-26 20:39:55,897 - [test_rechage.py-->line:98] - INFO: 用例：会员id为空，执行未通过
2020-02-26 20:39:56,042 - [test_rechage.py-->line:98] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-02-26 20:39:56,176 - [test_rechage.py-->line:93] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-26 20:39:56,176 - [test_rechage.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:39:56,356 - [test_rechage.py-->line:98] - INFO: 用例：会员id为小数，执行未通过
2020-02-26 20:39:56,508 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为0，执行未通过
2020-02-26 20:39:56,508 - [test_rechage.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:39:56,724 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为负数，执行未通过
2020-02-26 20:39:56,724 - [test_rechage.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 20:39:56,872 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为空，执行未通过
2020-02-26 20:39:56,873 - [test_rechage.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:39:57,047 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-02-26 20:39:57,049 - [test_rechage.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-02-26 20:39:57,216 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-02-26 20:39:57,217 - [test_rechage.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 20:39:57,381 - [test_rechage.py-->line:98] - INFO: 用例：充值金额-非数字，执行未通过
2020-02-26 20:39:57,626 - [test_register.py-->line:102] - INFO: 用例：登录成功，执行未通过
2020-02-26 20:39:57,751 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-02-26 20:39:57,751 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:39:57,875 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-02-26 20:39:57,876 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:39:58,075 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-02-26 20:39:58,281 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-02-26 20:39:58,409 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-02-26 20:39:58,972 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-26 20:39:59,288 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-26 20:39:59,419 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-02-26 20:39:59,554 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-02-26 20:39:59,675 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-02-26 20:39:59,817 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-26 20:40:00,026 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-26 20:40:00,155 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-02-26 20:40:00,297 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-02-26 20:40:00,430 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-02-26 20:40:00,560 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-02-26 20:40:00,691 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-26 20:40:01,032 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-02-26 20:40:01,270 - [test_wothdraw.py-->line:73] - INFO: 用例：登录成功，执行未通过
2020-02-26 20:41:08,101 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-整数，执行未通过
2020-02-26 20:41:08,420 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-1位小数，执行未通过
2020-02-26 20:41:08,709 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-2位小数，执行未通过
2020-02-26 20:41:09,253 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-50万，执行未通过
2020-02-26 20:41:09,388 - [test_rechage.py-->line:98] - INFO: 用例：会员id为空，执行未通过
2020-02-26 20:41:09,553 - [test_rechage.py-->line:98] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-02-26 20:41:09,743 - [test_rechage.py-->line:93] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-26 20:41:09,743 - [test_rechage.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:41:09,910 - [test_rechage.py-->line:98] - INFO: 用例：会员id为小数，执行未通过
2020-02-26 20:41:10,042 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为0，执行未通过
2020-02-26 20:41:10,042 - [test_rechage.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:41:10,191 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为负数，执行未通过
2020-02-26 20:41:10,191 - [test_rechage.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 20:41:10,353 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为空，执行未通过
2020-02-26 20:41:10,354 - [test_rechage.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:41:10,522 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-02-26 20:41:10,523 - [test_rechage.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-02-26 20:41:10,657 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-02-26 20:41:10,658 - [test_rechage.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 20:41:10,859 - [test_rechage.py-->line:98] - INFO: 用例：充值金额-非数字，执行未通过
2020-02-26 20:41:11,083 - [test_register.py-->line:102] - INFO: 用例：登录成功，执行未通过
2020-02-26 20:41:11,211 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-02-26 20:41:11,211 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:41:11,353 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-02-26 20:41:11,354 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:41:11,547 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-02-26 20:41:11,741 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-02-26 20:41:11,856 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-02-26 20:41:12,225 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-26 20:41:12,551 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-26 20:41:12,670 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-02-26 20:41:12,792 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-02-26 20:41:12,920 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-02-26 20:41:13,056 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-26 20:41:13,258 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-26 20:41:13,388 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-02-26 20:41:13,516 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-02-26 20:41:13,637 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-02-26 20:41:13,763 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-02-26 20:41:13,898 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-26 20:41:14,230 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-02-26 20:41:14,526 - [test_wothdraw.py-->line:73] - INFO: 用例：登录成功，执行未通过
2020-02-26 20:41:14,660 - [test_wothdraw.py-->line:73] - INFO: 用例：提现成功-整数，执行未通过
2020-02-26 20:41:14,798 - [test_wothdraw.py-->line:73] - INFO: 用例：提现成功-1位小数，执行未通过
2020-02-26 20:41:14,936 - [test_wothdraw.py-->line:73] - INFO: 用例：提现成功-2位小数，执行未通过
2020-02-26 20:41:15,078 - [test_wothdraw.py-->line:73] - INFO: 用例：提现成功-50万，执行未通过
2020-02-26 20:41:15,196 - [test_wothdraw.py-->line:73] - INFO: 用例：会员id为空，执行未通过
2020-02-26 20:41:15,321 - [test_wothdraw.py-->line:73] - INFO: 用例：会员id不存在，执行未通过
2020-02-26 20:41:15,455 - [test_wothdraw.py-->line:68] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-26 20:41:15,456 - [test_wothdraw.py-->line:69] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 62, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:41:15,606 - [test_wothdraw.py-->line:73] - INFO: 用例：会员id为小数，执行未通过
2020-02-26 20:41:15,753 - [test_wothdraw.py-->line:68] - ERROR: 用例：提现金额为0，执行未通过
2020-02-26 20:41:15,753 - [test_wothdraw.py-->line:69] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 62, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:41:15,918 - [test_wothdraw.py-->line:68] - ERROR: 用例：提现金额为负数，执行未通过
2020-02-26 20:41:15,918 - [test_wothdraw.py-->line:69] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-26 20:41:16,061 - [test_wothdraw.py-->line:68] - ERROR: 用例：提现金额为空，执行未通过
2020-02-26 20:41:16,061 - [test_wothdraw.py-->line:69] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-02-26 20:41:16,254 - [test_wothdraw.py-->line:68] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-02-26 20:41:16,254 - [test_wothdraw.py-->line:69] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-02-26 20:41:16,404 - [test_wothdraw.py-->line:68] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-02-26 20:41:16,405 - [test_wothdraw.py-->line:69] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-26 20:41:16,554 - [test_wothdraw.py-->line:73] - INFO: 用例：提现金额-非数字，执行未通过
2020-02-26 20:51:31,320 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-整数，执行未通过
2020-02-26 20:51:31,673 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-1位小数，执行未通过
2020-02-26 20:51:32,016 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-2位小数，执行未通过
2020-02-26 20:51:32,335 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-50万，执行未通过
2020-02-26 20:51:32,464 - [test_rechage.py-->line:98] - INFO: 用例：会员id为空，执行未通过
2020-02-26 20:51:32,596 - [test_rechage.py-->line:98] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-02-26 20:51:32,733 - [test_rechage.py-->line:93] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-26 20:51:32,733 - [test_rechage.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:51:32,887 - [test_rechage.py-->line:98] - INFO: 用例：会员id为小数，执行未通过
2020-02-26 20:51:33,033 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为0，执行未通过
2020-02-26 20:51:33,033 - [test_rechage.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:51:33,234 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为负数，执行未通过
2020-02-26 20:51:33,234 - [test_rechage.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 20:51:33,362 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为空，执行未通过
2020-02-26 20:51:33,362 - [test_rechage.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:51:33,528 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-02-26 20:51:33,528 - [test_rechage.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-02-26 20:51:33,663 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-02-26 20:51:33,663 - [test_rechage.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 20:51:33,810 - [test_rechage.py-->line:98] - INFO: 用例：充值金额-非数字，执行未通过
2020-02-26 20:51:33,997 - [test_register.py-->line:102] - INFO: 用例：登录成功，执行未通过
2020-02-26 20:51:34,145 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-02-26 20:51:34,145 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:51:34,276 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-02-26 20:51:34,276 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:51:34,508 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-02-26 20:51:34,706 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-02-26 20:51:34,843 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-02-26 20:51:35,197 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-26 20:51:35,529 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-26 20:51:35,646 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-02-26 20:51:35,774 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-02-26 20:51:35,907 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-02-26 20:51:36,040 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-26 20:51:36,240 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-26 20:51:36,376 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-02-26 20:51:36,509 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-02-26 20:51:36,642 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-02-26 20:51:36,775 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-02-26 20:51:36,908 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-26 20:51:37,229 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-02-26 20:51:37,476 - [test_wothdraw.py-->line:80] - INFO: 用例：登录成功，执行未通过
2020-02-26 20:51:37,660 - [test_wothdraw.py-->line:80] - INFO: 用例：会员id为空，执行未通过
2020-02-26 20:51:37,811 - [test_wothdraw.py-->line:80] - INFO: 用例：会员id不存在，执行未通过
2020-02-26 20:51:37,950 - [test_wothdraw.py-->line:75] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-26 20:51:37,951 - [test_wothdraw.py-->line:76] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:51:38,109 - [test_wothdraw.py-->line:80] - INFO: 用例：会员id为小数，执行未通过
2020-02-26 20:51:38,240 - [test_wothdraw.py-->line:75] - ERROR: 用例：提现金额为0，执行未通过
2020-02-26 20:51:38,240 - [test_wothdraw.py-->line:76] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:51:38,398 - [test_wothdraw.py-->line:75] - ERROR: 用例：提现金额为负数，执行未通过
2020-02-26 20:51:38,398 - [test_wothdraw.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-26 20:51:38,532 - [test_wothdraw.py-->line:75] - ERROR: 用例：提现金额为空，执行未通过
2020-02-26 20:51:38,532 - [test_wothdraw.py-->line:76] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-02-26 20:51:38,678 - [test_wothdraw.py-->line:75] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-02-26 20:51:38,678 - [test_wothdraw.py-->line:76] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-02-26 20:51:38,819 - [test_wothdraw.py-->line:75] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-02-26 20:51:38,819 - [test_wothdraw.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-26 20:51:39,010 - [test_wothdraw.py-->line:80] - INFO: 用例：提现金额-非数字，执行未通过
2020-02-26 20:53:51,865 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-整数，执行未通过
2020-02-26 20:53:52,270 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-1位小数，执行未通过
2020-02-26 20:53:52,644 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-2位小数，执行未通过
2020-02-26 20:53:53,040 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-50万，执行未通过
2020-02-26 20:53:53,200 - [test_rechage.py-->line:98] - INFO: 用例：会员id为空，执行未通过
2020-02-26 20:53:53,355 - [test_rechage.py-->line:98] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-02-26 20:53:53,522 - [test_rechage.py-->line:93] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-26 20:53:53,523 - [test_rechage.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:53:53,687 - [test_rechage.py-->line:98] - INFO: 用例：会员id为小数，执行未通过
2020-02-26 20:53:53,838 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为0，执行未通过
2020-02-26 20:53:53,838 - [test_rechage.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:53:54,007 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为负数，执行未通过
2020-02-26 20:53:54,007 - [test_rechage.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 20:53:54,157 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为空，执行未通过
2020-02-26 20:53:54,157 - [test_rechage.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:53:54,325 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-02-26 20:53:54,325 - [test_rechage.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-02-26 20:53:54,554 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-02-26 20:53:54,557 - [test_rechage.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 20:53:54,751 - [test_rechage.py-->line:98] - INFO: 用例：充值金额-非数字，执行未通过
2020-02-26 20:53:54,995 - [test_register.py-->line:102] - INFO: 用例：登录成功，执行未通过
2020-02-26 20:53:55,144 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-02-26 20:53:55,144 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:53:55,282 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-02-26 20:53:55,283 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:53:55,484 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-02-26 20:53:55,694 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-02-26 20:53:55,865 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-02-26 20:53:56,276 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-26 20:53:56,623 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-26 20:53:56,776 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-02-26 20:53:56,921 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-02-26 20:53:57,078 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-02-26 20:53:57,222 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-26 20:53:57,423 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-26 20:53:57,558 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-02-26 20:53:57,691 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-02-26 20:53:57,823 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-02-26 20:53:57,991 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-02-26 20:53:58,113 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-26 20:53:58,471 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-02-26 20:53:58,730 - [test_wothdraw.py-->line:80] - INFO: 用例：登录成功，执行未通过
2020-02-26 20:53:58,963 - [test_wothdraw.py-->line:80] - INFO: 用例：会员id为空，执行未通过
2020-02-26 20:53:59,102 - [test_wothdraw.py-->line:80] - INFO: 用例：会员id不存在，执行未通过
2020-02-26 20:53:59,236 - [test_wothdraw.py-->line:75] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-26 20:53:59,236 - [test_wothdraw.py-->line:76] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:53:59,368 - [test_wothdraw.py-->line:80] - INFO: 用例：会员id为小数，执行未通过
2020-02-26 20:53:59,497 - [test_wothdraw.py-->line:75] - ERROR: 用例：提现金额为0，执行未通过
2020-02-26 20:53:59,497 - [test_wothdraw.py-->line:76] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:53:59,619 - [test_wothdraw.py-->line:75] - ERROR: 用例：提现金额为负数，执行未通过
2020-02-26 20:53:59,620 - [test_wothdraw.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-26 20:53:59,794 - [test_wothdraw.py-->line:75] - ERROR: 用例：提现金额为空，执行未通过
2020-02-26 20:53:59,794 - [test_wothdraw.py-->line:76] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-02-26 20:53:59,960 - [test_wothdraw.py-->line:75] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-02-26 20:53:59,961 - [test_wothdraw.py-->line:76] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-02-26 20:54:00,130 - [test_wothdraw.py-->line:75] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-02-26 20:54:00,130 - [test_wothdraw.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-26 20:54:00,287 - [test_wothdraw.py-->line:80] - INFO: 用例：提现金额-非数字，执行未通过
2020-02-26 20:54:14,818 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-整数，执行未通过
2020-02-26 20:54:15,147 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-1位小数，执行未通过
2020-02-26 20:54:15,492 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-2位小数，执行未通过
2020-02-26 20:54:15,822 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-50万，执行未通过
2020-02-26 20:54:15,960 - [test_rechage.py-->line:98] - INFO: 用例：会员id为空，执行未通过
2020-02-26 20:54:16,096 - [test_rechage.py-->line:98] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-02-26 20:54:16,247 - [test_rechage.py-->line:93] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-26 20:54:16,248 - [test_rechage.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:54:16,405 - [test_rechage.py-->line:98] - INFO: 用例：会员id为小数，执行未通过
2020-02-26 20:54:16,571 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为0，执行未通过
2020-02-26 20:54:16,572 - [test_rechage.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:54:16,751 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为负数，执行未通过
2020-02-26 20:54:16,752 - [test_rechage.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 20:54:16,907 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为空，执行未通过
2020-02-26 20:54:16,907 - [test_rechage.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:54:17,072 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-02-26 20:54:17,072 - [test_rechage.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-02-26 20:54:17,229 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-02-26 20:54:17,230 - [test_rechage.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 20:54:17,390 - [test_rechage.py-->line:98] - INFO: 用例：充值金额-非数字，执行未通过
2020-02-26 20:54:17,618 - [test_register.py-->line:102] - INFO: 用例：登录成功，执行未通过
2020-02-26 20:54:17,764 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-02-26 20:54:17,764 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:54:17,925 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-02-26 20:54:17,925 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:54:18,112 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-02-26 20:54:18,311 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-02-26 20:54:18,433 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-02-26 20:54:18,798 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-26 20:54:19,122 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-26 20:54:19,301 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-02-26 20:54:19,488 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-02-26 20:54:19,678 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-02-26 20:54:19,838 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-26 20:54:20,037 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-26 20:54:20,191 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-02-26 20:54:20,341 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-02-26 20:54:20,476 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-02-26 20:54:20,625 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-02-26 20:54:20,807 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-26 20:54:21,143 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-02-26 20:54:21,503 - [test_wothdraw.py-->line:80] - INFO: 用例：登录成功，执行未通过
2020-02-26 20:54:22,587 - [test_wothdraw.py-->line:80] - INFO: 用例：会员id为空，执行未通过
2020-02-26 20:54:22,719 - [test_wothdraw.py-->line:80] - INFO: 用例：会员id不存在，执行未通过
2020-02-26 20:54:22,853 - [test_wothdraw.py-->line:75] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-26 20:54:22,853 - [test_wothdraw.py-->line:76] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:54:23,002 - [test_wothdraw.py-->line:80] - INFO: 用例：会员id为小数，执行未通过
2020-02-26 20:54:23,143 - [test_wothdraw.py-->line:75] - ERROR: 用例：提现金额为0，执行未通过
2020-02-26 20:54:23,144 - [test_wothdraw.py-->line:76] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:54:23,296 - [test_wothdraw.py-->line:75] - ERROR: 用例：提现金额为负数，执行未通过
2020-02-26 20:54:23,296 - [test_wothdraw.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-26 20:54:23,429 - [test_wothdraw.py-->line:75] - ERROR: 用例：提现金额为空，执行未通过
2020-02-26 20:54:23,430 - [test_wothdraw.py-->line:76] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-02-26 20:54:23,568 - [test_wothdraw.py-->line:75] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-02-26 20:54:23,568 - [test_wothdraw.py-->line:76] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-02-26 20:54:23,705 - [test_wothdraw.py-->line:75] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-02-26 20:54:23,705 - [test_wothdraw.py-->line:76] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-26 20:54:23,844 - [test_wothdraw.py-->line:80] - INFO: 用例：提现金额-非数字，执行未通过
2020-02-26 20:56:36,338 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-整数，执行未通过
2020-02-26 20:56:36,691 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-1位小数，执行未通过
2020-02-26 20:56:37,035 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-2位小数，执行未通过
2020-02-26 20:56:37,370 - [test_rechage.py-->line:98] - INFO: 用例：充值成功-50万，执行未通过
2020-02-26 20:56:37,494 - [test_rechage.py-->line:98] - INFO: 用例：会员id为空，执行未通过
2020-02-26 20:56:37,628 - [test_rechage.py-->line:98] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-02-26 20:56:37,764 - [test_rechage.py-->line:93] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-26 20:56:37,764 - [test_rechage.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:56:37,901 - [test_rechage.py-->line:98] - INFO: 用例：会员id为小数，执行未通过
2020-02-26 20:56:38,051 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为0，执行未通过
2020-02-26 20:56:38,052 - [test_rechage.py-->line:94] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:56:38,199 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为负数，执行未通过
2020-02-26 20:56:38,200 - [test_rechage.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 20:56:38,337 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额为空，执行未通过
2020-02-26 20:56:38,338 - [test_rechage.py-->line:94] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 84, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:56:38,520 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-02-26 20:56:38,520 - [test_rechage.py-->line:94] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-02-26 20:56:38,661 - [test_rechage.py-->line:93] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-02-26 20:56:38,661 - [test_rechage.py-->line:94] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 85, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-26 20:56:38,824 - [test_rechage.py-->line:98] - INFO: 用例：充值金额-非数字，执行未通过
2020-02-26 20:56:39,076 - [test_register.py-->line:102] - INFO: 用例：登录成功，执行未通过
2020-02-26 20:56:39,235 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-02-26 20:56:39,235 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:56:39,387 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-02-26 20:56:39,387 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-26 20:56:39,567 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-02-26 20:56:39,773 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-02-26 20:56:39,898 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-02-26 20:56:40,254 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-26 20:56:40,573 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-26 20:56:40,705 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-02-26 20:56:40,839 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-02-26 20:56:40,962 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-02-26 20:56:41,115 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-26 20:56:41,317 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-26 20:56:41,473 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-02-26 20:56:41,603 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-02-26 20:56:41,754 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-02-26 20:56:41,894 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-02-26 20:56:42,025 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-26 20:56:42,393 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-02-26 20:56:42,644 - [test_wothdraw.py-->line:79] - INFO: 用例：登录成功，执行未通过
2020-02-26 20:56:43,063 - [test_wothdraw.py-->line:79] - INFO: 用例：提现成功-整数，执行未通过
2020-02-26 20:56:43,402 - [test_wothdraw.py-->line:79] - INFO: 用例：提现成功-1位小数，执行未通过
2020-02-26 20:56:43,740 - [test_wothdraw.py-->line:79] - INFO: 用例：提现成功-2位小数，执行未通过
2020-02-26 20:56:44,078 - [test_wothdraw.py-->line:79] - INFO: 用例：提现成功-50万，执行未通过
2020-02-26 20:56:44,207 - [test_wothdraw.py-->line:79] - INFO: 用例：会员id为空，执行未通过
2020-02-26 20:56:44,338 - [test_wothdraw.py-->line:79] - INFO: 用例：会员id不存在，执行未通过
2020-02-26 20:56:44,481 - [test_wothdraw.py-->line:74] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-26 20:56:44,482 - [test_wothdraw.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:56:44,631 - [test_wothdraw.py-->line:79] - INFO: 用例：会员id为小数，执行未通过
2020-02-26 20:56:44,780 - [test_wothdraw.py-->line:74] - ERROR: 用例：提现金额为0，执行未通过
2020-02-26 20:56:44,781 - [test_wothdraw.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-26 20:56:44,957 - [test_wothdraw.py-->line:74] - ERROR: 用例：提现金额为负数，执行未通过
2020-02-26 20:56:44,957 - [test_wothdraw.py-->line:75] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-26 20:56:45,101 - [test_wothdraw.py-->line:74] - ERROR: 用例：提现金额为空，执行未通过
2020-02-26 20:56:45,101 - [test_wothdraw.py-->line:75] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-02-26 20:56:45,263 - [test_wothdraw.py-->line:74] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-02-26 20:56:45,263 - [test_wothdraw.py-->line:75] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-02-26 20:56:45,386 - [test_wothdraw.py-->line:74] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-02-26 20:56:45,387 - [test_wothdraw.py-->line:75] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-26 20:56:45,569 - [test_wothdraw.py-->line:79] - INFO: 用例：提现金额-非数字，执行未通过
2020-02-28 20:58:04,522 - [test_rechage.py-->line:100] - INFO: 用例：会员id为空，执行未通过
2020-02-28 20:58:04,866 - [test_rechage.py-->line:100] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-02-28 20:58:05,348 - [test_register.py-->line:102] - INFO: 用例：登录成功，执行未通过
2020-02-28 20:58:05,701 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-02-28 20:58:05,701 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 20:58:05,870 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-02-28 20:58:05,870 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 20:58:06,107 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-02-28 20:58:06,333 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-02-28 20:58:06,480 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-02-28 20:58:06,868 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-28 20:58:07,218 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-28 20:58:07,367 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-02-28 20:58:07,511 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-02-28 20:58:07,669 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-02-28 20:58:07,833 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-28 20:58:08,084 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-28 20:58:08,219 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-02-28 20:58:08,365 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-02-28 20:58:08,514 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-02-28 20:58:08,681 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-02-28 20:58:08,841 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-28 20:58:09,169 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-02-28 20:58:09,634 - [test_wothdraw.py-->line:79] - INFO: 用例：登录成功，执行未通过
2020-02-28 20:58:10,219 - [test_wothdraw.py-->line:79] - INFO: 用例：提现成功-整数，执行未通过
2020-02-28 20:58:10,832 - [test_wothdraw.py-->line:79] - INFO: 用例：提现成功-1位小数，执行未通过
2020-02-28 20:58:11,207 - [test_wothdraw.py-->line:79] - INFO: 用例：提现成功-2位小数，执行未通过
2020-02-28 20:58:11,580 - [test_wothdraw.py-->line:79] - INFO: 用例：提现成功-50万，执行未通过
2020-02-28 20:58:11,735 - [test_wothdraw.py-->line:79] - INFO: 用例：会员id为空，执行未通过
2020-02-28 20:58:11,961 - [test_wothdraw.py-->line:79] - INFO: 用例：会员id不存在，执行未通过
2020-02-28 20:58:12,134 - [test_wothdraw.py-->line:74] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-28 20:58:12,134 - [test_wothdraw.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 20:58:12,314 - [test_wothdraw.py-->line:79] - INFO: 用例：会员id为小数，执行未通过
2020-02-28 20:58:12,465 - [test_wothdraw.py-->line:74] - ERROR: 用例：提现金额为0，执行未通过
2020-02-28 20:58:12,465 - [test_wothdraw.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 20:58:12,636 - [test_wothdraw.py-->line:74] - ERROR: 用例：提现金额为负数，执行未通过
2020-02-28 20:58:12,636 - [test_wothdraw.py-->line:75] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 20:58:12,810 - [test_wothdraw.py-->line:74] - ERROR: 用例：提现金额为空，执行未通过
2020-02-28 20:58:12,811 - [test_wothdraw.py-->line:75] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-02-28 20:58:12,982 - [test_wothdraw.py-->line:74] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-02-28 20:58:12,982 - [test_wothdraw.py-->line:75] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-02-28 20:58:13,130 - [test_wothdraw.py-->line:74] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-02-28 20:58:13,130 - [test_wothdraw.py-->line:75] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 20:58:13,301 - [test_wothdraw.py-->line:79] - INFO: 用例：提现金额-非数字，执行未通过
2020-02-28 20:59:47,794 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-整数，执行未通过
2020-02-28 20:59:48,152 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-1位小数，执行未通过
2020-02-28 20:59:48,508 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-2位小数，执行未通过
2020-02-28 20:59:48,879 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-50万，执行未通过
2020-02-28 20:59:49,027 - [test_rechage.py-->line:100] - INFO: 用例：会员id为空，执行未通过
2020-02-28 20:59:49,179 - [test_rechage.py-->line:100] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-02-28 20:59:49,344 - [test_rechage.py-->line:95] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-28 20:59:49,344 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 20:59:49,546 - [test_rechage.py-->line:100] - INFO: 用例：会员id为小数，执行未通过
2020-02-28 20:59:49,742 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为0，执行未通过
2020-02-28 20:59:49,742 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 20:59:49,936 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为负数，执行未通过
2020-02-28 20:59:49,937 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 20:59:50,087 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为空，执行未通过
2020-02-28 20:59:50,087 - [test_rechage.py-->line:96] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 20:59:50,282 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-02-28 20:59:50,282 - [test_rechage.py-->line:96] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-02-28 20:59:50,440 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-02-28 20:59:50,441 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-02-28 20:59:50,647 - [test_rechage.py-->line:100] - INFO: 用例：充值金额-非数字，执行未通过
2020-02-28 20:59:50,906 - [test_register.py-->line:102] - INFO: 用例：登录成功，执行未通过
2020-02-28 20:59:51,047 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-02-28 20:59:51,047 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 20:59:51,235 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-02-28 20:59:51,235 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-02-28 20:59:51,452 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-02-28 20:59:51,684 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-02-28 20:59:51,840 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-02-28 20:59:52,222 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-02-28 20:59:52,573 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-02-28 20:59:52,742 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-02-28 20:59:52,916 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-02-28 20:59:53,075 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-02-28 20:59:53,250 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-02-28 20:59:53,414 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-02-28 20:59:53,628 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-02-28 20:59:53,781 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-02-28 20:59:53,948 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-02-28 20:59:54,104 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-02-28 20:59:54,265 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-02-28 20:59:54,614 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-02-28 20:59:54,882 - [test_wothdraw.py-->line:79] - INFO: 用例：登录成功，执行未通过
2020-02-28 20:59:55,210 - [test_wothdraw.py-->line:79] - INFO: 用例：提现成功-整数，执行未通过
2020-02-28 20:59:55,539 - [test_wothdraw.py-->line:79] - INFO: 用例：提现成功-1位小数，执行未通过
2020-02-28 20:59:55,873 - [test_wothdraw.py-->line:79] - INFO: 用例：提现成功-2位小数，执行未通过
2020-02-28 20:59:56,197 - [test_wothdraw.py-->line:79] - INFO: 用例：提现成功-50万，执行未通过
2020-02-28 20:59:56,344 - [test_wothdraw.py-->line:79] - INFO: 用例：会员id为空，执行未通过
2020-02-28 20:59:56,507 - [test_wothdraw.py-->line:79] - INFO: 用例：会员id不存在，执行未通过
2020-02-28 20:59:56,670 - [test_wothdraw.py-->line:74] - ERROR: 用例：会员id为字符串，执行未通过
2020-02-28 20:59:56,670 - [test_wothdraw.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 20:59:56,841 - [test_wothdraw.py-->line:79] - INFO: 用例：会员id为小数，执行未通过
2020-02-28 20:59:56,987 - [test_wothdraw.py-->line:74] - ERROR: 用例：提现金额为0，执行未通过
2020-02-28 20:59:56,987 - [test_wothdraw.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 63, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-02-28 20:59:57,178 - [test_wothdraw.py-->line:74] - ERROR: 用例：提现金额为负数，执行未通过
2020-02-28 20:59:57,178 - [test_wothdraw.py-->line:75] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 20:59:57,322 - [test_wothdraw.py-->line:74] - ERROR: 用例：提现金额为空，执行未通过
2020-02-28 20:59:57,323 - [test_wothdraw.py-->line:75] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-02-28 20:59:57,527 - [test_wothdraw.py-->line:74] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-02-28 20:59:57,527 - [test_wothdraw.py-->line:75] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-02-28 20:59:57,703 - [test_wothdraw.py-->line:74] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-02-28 20:59:57,703 - [test_wothdraw.py-->line:75] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_wothdraw.py", line 64, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-02-28 20:59:57,900 - [test_wothdraw.py-->line:79] - INFO: 用例：提现金额-非数字，执行未通过
2020-03-02 19:53:36,845 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-03-02 19:53:37,179 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-整数，执行未通过
2020-03-02 19:53:37,419 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-1位小数，执行未通过
2020-03-02 19:53:37,673 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-2位小数，执行未通过
2020-03-02 19:53:37,957 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-50万，执行未通过
2020-03-02 19:53:38,078 - [test_rechage.py-->line:100] - INFO: 用例：会员id为空，执行未通过
2020-03-02 19:53:38,213 - [test_rechage.py-->line:100] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-03-02 19:53:38,369 - [test_rechage.py-->line:95] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-02 19:53:38,369 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 19:53:38,518 - [test_rechage.py-->line:100] - INFO: 用例：会员id为小数，执行未通过
2020-03-02 19:53:38,669 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为0，执行未通过
2020-03-02 19:53:38,669 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 19:53:38,812 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为负数，执行未通过
2020-03-02 19:53:38,812 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 19:53:38,940 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为空，执行未通过
2020-03-02 19:53:38,940 - [test_rechage.py-->line:96] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 19:53:39,082 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-03-02 19:53:39,083 - [test_rechage.py-->line:96] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-02 19:53:39,208 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-03-02 19:53:39,208 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 19:53:39,331 - [test_rechage.py-->line:100] - INFO: 用例：充值金额-非数字，执行未通过
2020-03-02 19:53:39,490 - [test_register.py-->line:97] - ERROR: 用例：登录成功，执行未通过
2020-03-02 19:53:39,490 - [test_register.py-->line:98] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 19:53:39,612 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-03-02 19:53:39,612 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 19:53:39,731 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-03-02 19:53:39,731 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 19:53:39,892 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-03-02 19:53:40,020 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-03-02 19:53:40,152 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-03-02 19:53:40,403 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-03-02 19:53:40,635 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-03-02 19:53:40,751 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-03-02 19:53:40,895 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-03-02 19:53:41,018 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-03-02 19:53:41,145 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-03-02 19:53:41,285 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-03-02 19:53:41,423 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-03-02 19:53:41,554 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-03-02 19:53:41,674 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-03-02 19:53:41,815 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-03-02 19:53:41,951 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-03-02 19:53:42,181 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-03-02 19:53:42,360 - [test_withdraw.py-->line:138] - INFO: 用例：登录成功，执行未通过
2020-03-02 19:53:42,599 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-整数，执行未通过
2020-03-02 19:53:42,862 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-1位小数，执行未通过
2020-03-02 19:53:43,096 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-2位小数，执行未通过
2020-03-02 19:53:43,338 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-50万，执行未通过
2020-03-02 19:53:43,454 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为空，执行未通过
2020-03-02 19:53:43,601 - [test_withdraw.py-->line:138] - INFO: 用例：会员id不存在，执行未通过
2020-03-02 19:53:43,728 - [test_withdraw.py-->line:133] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-02 19:53:43,728 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 19:53:43,848 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为小数，执行未通过
2020-03-02 19:53:44,018 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为0，执行未通过
2020-03-02 19:53:44,018 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 19:53:44,146 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为负数，执行未通过
2020-03-02 19:53:44,146 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 19:53:44,282 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为空，执行未通过
2020-03-02 19:53:44,282 - [test_withdraw.py-->line:134] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-03-02 19:53:44,424 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-03-02 19:53:44,424 - [test_withdraw.py-->line:134] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-02 19:53:44,563 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-03-02 19:53:44,563 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 19:53:44,702 - [test_withdraw.py-->line:138] - INFO: 用例：提现金额-非数字，执行未通过
2020-03-02 20:30:37,207 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-03-02 20:30:37,900 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-整数，执行未通过
2020-03-02 20:30:38,242 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-1位小数，执行未通过
2020-03-02 20:30:38,593 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-2位小数，执行未通过
2020-03-02 20:30:38,922 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-50万，执行未通过
2020-03-02 20:30:39,109 - [test_rechage.py-->line:100] - INFO: 用例：会员id为空，执行未通过
2020-03-02 20:30:39,292 - [test_rechage.py-->line:100] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-03-02 20:30:39,463 - [test_rechage.py-->line:95] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-02 20:30:39,463 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:30:39,672 - [test_rechage.py-->line:100] - INFO: 用例：会员id为小数，执行未通过
2020-03-02 20:30:39,968 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为0，执行未通过
2020-03-02 20:30:39,968 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:30:40,235 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为负数，执行未通过
2020-03-02 20:30:40,235 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:30:40,469 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为空，执行未通过
2020-03-02 20:30:40,470 - [test_rechage.py-->line:96] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:30:40,692 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-03-02 20:30:40,692 - [test_rechage.py-->line:96] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-02 20:30:40,880 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-03-02 20:30:40,881 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:30:41,092 - [test_rechage.py-->line:100] - INFO: 用例：充值金额-非数字，执行未通过
2020-03-02 20:30:41,302 - [test_register.py-->line:97] - ERROR: 用例：登录成功，执行未通过
2020-03-02 20:30:41,302 - [test_register.py-->line:98] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 20:30:41,595 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-03-02 20:30:41,595 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:30:41,784 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-03-02 20:30:41,785 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:30:41,984 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-03-02 20:30:42,262 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-03-02 20:30:42,443 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-03-02 20:30:42,763 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-03-02 20:30:43,053 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-03-02 20:30:43,241 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-03-02 20:30:43,408 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-03-02 20:30:43,597 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-03-02 20:30:43,778 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-03-02 20:30:43,957 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-03-02 20:30:44,125 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-03-02 20:30:44,300 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-03-02 20:30:44,477 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-03-02 20:30:44,644 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-03-02 20:30:44,847 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-03-02 20:30:45,094 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-03-02 20:30:45,330 - [test_withdraw.py-->line:138] - INFO: 用例：登录成功，执行未通过
2020-03-02 20:30:45,662 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-整数，执行未通过
2020-03-02 20:30:45,994 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-1位小数，执行未通过
2020-03-02 20:30:46,309 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-2位小数，执行未通过
2020-03-02 20:30:46,606 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-50万，执行未通过
2020-03-02 20:30:46,801 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为空，执行未通过
2020-03-02 20:30:46,969 - [test_withdraw.py-->line:138] - INFO: 用例：会员id不存在，执行未通过
2020-03-02 20:30:47,250 - [test_withdraw.py-->line:133] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-02 20:30:47,250 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:30:47,431 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为小数，执行未通过
2020-03-02 20:30:47,698 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为0，执行未通过
2020-03-02 20:30:47,698 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:30:47,971 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为负数，执行未通过
2020-03-02 20:30:47,971 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:30:48,159 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为空，执行未通过
2020-03-02 20:30:48,160 - [test_withdraw.py-->line:134] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-03-02 20:30:48,371 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-03-02 20:30:48,372 - [test_withdraw.py-->line:134] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-02 20:30:48,557 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-03-02 20:30:48,557 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:30:48,774 - [test_withdraw.py-->line:138] - INFO: 用例：提现金额-非数字，执行未通过
2020-03-02 20:34:08,393 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-03-02 20:34:08,734 - [test_adiut.py-->line:101] - ERROR: 用例：审核通过，执行未通过
2020-03-02 20:34:08,734 - [test_adiut.py-->line:102] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_adiut.py", line 97, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 20:34:09,037 - [test_adiut.py-->line:101] - ERROR: 用例：审核不通过，执行未通过
2020-03-02 20:34:09,038 - [test_adiut.py-->line:102] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_adiut.py", line 97, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 20:34:09,412 - [test_adiut.py-->line:106] - INFO: 用例：参数approved_or_not为空，执行未通过
2020-03-02 20:34:09,678 - [test_adiut.py-->line:106] - INFO: 用例：项目id为空，执行未通过
2020-03-02 20:34:09,909 - [test_adiut.py-->line:106] - INFO: 用例：项目id不存在，执行未通过
2020-03-02 20:34:10,400 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-整数，执行未通过
2020-03-02 20:34:10,718 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-1位小数，执行未通过
2020-03-02 20:34:11,041 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-2位小数，执行未通过
2020-03-02 20:34:11,356 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-50万，执行未通过
2020-03-02 20:34:11,540 - [test_rechage.py-->line:100] - INFO: 用例：会员id为空，执行未通过
2020-03-02 20:34:11,726 - [test_rechage.py-->line:100] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-03-02 20:34:11,910 - [test_rechage.py-->line:95] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-02 20:34:11,911 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:34:12,143 - [test_rechage.py-->line:100] - INFO: 用例：会员id为小数，执行未通过
2020-03-02 20:34:12,331 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为0，执行未通过
2020-03-02 20:34:12,331 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:34:12,583 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为负数，执行未通过
2020-03-02 20:34:12,585 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:34:12,765 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为空，执行未通过
2020-03-02 20:34:12,765 - [test_rechage.py-->line:96] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:34:12,987 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-03-02 20:34:12,988 - [test_rechage.py-->line:96] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-02 20:34:13,210 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-03-02 20:34:13,210 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:34:13,408 - [test_rechage.py-->line:100] - INFO: 用例：充值金额-非数字，执行未通过
2020-03-02 20:34:13,660 - [test_register.py-->line:97] - ERROR: 用例：登录成功，执行未通过
2020-03-02 20:34:13,660 - [test_register.py-->line:98] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 20:34:13,824 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-03-02 20:34:13,825 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:34:14,065 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-03-02 20:34:14,065 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:34:14,246 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-03-02 20:34:14,469 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-03-02 20:34:14,645 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-03-02 20:34:15,213 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-03-02 20:34:15,663 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-03-02 20:34:16,030 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-03-02 20:34:16,388 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-03-02 20:34:16,754 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-03-02 20:34:17,281 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-03-02 20:34:17,740 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-03-02 20:34:17,913 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-03-02 20:34:18,132 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-03-02 20:34:18,302 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-03-02 20:34:18,475 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-03-02 20:34:18,637 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-03-02 20:34:18,903 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-03-02 20:34:19,118 - [test_withdraw.py-->line:138] - INFO: 用例：登录成功，执行未通过
2020-03-02 20:34:19,589 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-整数，执行未通过
2020-03-02 20:34:19,927 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-1位小数，执行未通过
2020-03-02 20:34:20,256 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-2位小数，执行未通过
2020-03-02 20:34:20,614 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-50万，执行未通过
2020-03-02 20:34:20,791 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为空，执行未通过
2020-03-02 20:34:20,975 - [test_withdraw.py-->line:138] - INFO: 用例：会员id不存在，执行未通过
2020-03-02 20:34:21,165 - [test_withdraw.py-->line:133] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-02 20:34:21,165 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:34:21,396 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为小数，执行未通过
2020-03-02 20:34:21,592 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为0，执行未通过
2020-03-02 20:34:21,593 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:34:21,810 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为负数，执行未通过
2020-03-02 20:34:21,810 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:34:21,972 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为空，执行未通过
2020-03-02 20:34:21,972 - [test_withdraw.py-->line:134] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-03-02 20:34:22,244 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-03-02 20:34:22,244 - [test_withdraw.py-->line:134] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-02 20:34:22,433 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-03-02 20:34:22,434 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:34:22,728 - [test_withdraw.py-->line:138] - INFO: 用例：提现金额-非数字，执行未通过
2020-03-02 20:37:49,874 - [test_add.py-->line:76] - INFO: 用例：加标成功，执行未通过
2020-03-02 20:37:50,043 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-03-02 20:37:50,205 - [test_add.py-->line:76] - INFO: 用例：加标失败—标题为空，执行未通过
2020-03-02 20:37:50,376 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为空，执行未通过
2020-03-02 20:37:50,539 - [test_add.py-->line:76] - INFO: 用例：加标失败—年利率为空，执行未通过
2020-03-02 20:37:50,718 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限为空，执行未通过
2020-03-02 20:37:50,890 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限类型为空，执行未通过
2020-03-02 20:37:51,071 - [test_add.py-->line:76] - INFO: 用例：加标失败—竞标天数为空，执行未通过
2020-03-02 20:37:51,252 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id不是当前登录用户，执行未通过
2020-03-02 20:37:51,436 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为负数，执行未通过
2020-03-02 20:37:51,620 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为小数，执行未通过
2020-03-02 20:37:52,006 - [test_adiut.py-->line:103] - ERROR: 用例：审核通过，执行未通过
2020-03-02 20:37:52,006 - [test_adiut.py-->line:104] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_adiut.py", line 97, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 20:37:52,268 - [test_adiut.py-->line:103] - ERROR: 用例：审核不通过，执行未通过
2020-03-02 20:37:52,269 - [test_adiut.py-->line:104] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_adiut.py", line 97, in test_audit
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-02 20:37:52,605 - [test_adiut.py-->line:108] - INFO: 用例：参数approved_or_not为空，执行未通过
2020-03-02 20:37:52,850 - [test_adiut.py-->line:108] - INFO: 用例：项目id为空，执行未通过
2020-03-02 20:37:53,068 - [test_adiut.py-->line:108] - INFO: 用例：项目id不存在，执行未通过
2020-03-02 20:37:53,444 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-整数，执行未通过
2020-03-02 20:37:53,790 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-1位小数，执行未通过
2020-03-02 20:37:54,094 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-2位小数，执行未通过
2020-03-02 20:37:54,420 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-50万，执行未通过
2020-03-02 20:37:54,605 - [test_rechage.py-->line:100] - INFO: 用例：会员id为空，执行未通过
2020-03-02 20:37:54,797 - [test_rechage.py-->line:100] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-03-02 20:37:55,047 - [test_rechage.py-->line:95] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-02 20:37:55,048 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:37:55,235 - [test_rechage.py-->line:100] - INFO: 用例：会员id为小数，执行未通过
2020-03-02 20:37:55,495 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为0，执行未通过
2020-03-02 20:37:55,496 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:37:55,674 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为负数，执行未通过
2020-03-02 20:37:55,674 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:37:55,857 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为空，执行未通过
2020-03-02 20:37:55,857 - [test_rechage.py-->line:96] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:37:56,042 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-03-02 20:37:56,042 - [test_rechage.py-->line:96] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-02 20:37:56,243 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-03-02 20:37:56,244 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:37:56,441 - [test_rechage.py-->line:100] - INFO: 用例：充值金额-非数字，执行未通过
2020-03-02 20:37:56,658 - [test_register.py-->line:97] - ERROR: 用例：登录成功，执行未通过
2020-03-02 20:37:56,658 - [test_register.py-->line:98] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 20:37:56,855 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-03-02 20:37:56,855 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:37:57,042 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-03-02 20:37:57,042 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:37:57,237 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-03-02 20:37:57,434 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-03-02 20:37:57,609 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-03-02 20:37:57,931 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-03-02 20:37:58,187 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-03-02 20:37:58,373 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-03-02 20:37:58,596 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-03-02 20:37:58,775 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-03-02 20:37:58,965 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-03-02 20:37:59,137 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-03-02 20:37:59,371 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-03-02 20:37:59,619 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-03-02 20:37:59,842 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-03-02 20:38:00,031 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-03-02 20:38:00,216 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-03-02 20:38:00,563 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-03-02 20:38:00,896 - [test_withdraw.py-->line:138] - INFO: 用例：登录成功，执行未通过
2020-03-02 20:38:01,257 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-整数，执行未通过
2020-03-02 20:38:01,572 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-1位小数，执行未通过
2020-03-02 20:38:01,904 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-2位小数，执行未通过
2020-03-02 20:38:02,231 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-50万，执行未通过
2020-03-02 20:38:02,405 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为空，执行未通过
2020-03-02 20:38:02,597 - [test_withdraw.py-->line:138] - INFO: 用例：会员id不存在，执行未通过
2020-03-02 20:38:02,809 - [test_withdraw.py-->line:133] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-02 20:38:02,810 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:38:03,032 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为小数，执行未通过
2020-03-02 20:38:03,313 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为0，执行未通过
2020-03-02 20:38:03,314 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:38:03,545 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为负数，执行未通过
2020-03-02 20:38:03,545 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:38:03,805 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为空，执行未通过
2020-03-02 20:38:03,805 - [test_withdraw.py-->line:134] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-03-02 20:38:04,241 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-03-02 20:38:04,241 - [test_withdraw.py-->line:134] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-02 20:38:04,463 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-03-02 20:38:04,463 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:38:04,663 - [test_withdraw.py-->line:138] - INFO: 用例：提现金额-非数字，执行未通过
2020-03-02 20:45:44,871 - [test_add.py-->line:76] - INFO: 用例：加标成功，执行未通过
2020-03-02 20:45:45,041 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-03-02 20:45:45,205 - [test_add.py-->line:76] - INFO: 用例：加标失败—标题为空，执行未通过
2020-03-02 20:45:45,386 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为空，执行未通过
2020-03-02 20:45:45,560 - [test_add.py-->line:76] - INFO: 用例：加标失败—年利率为空，执行未通过
2020-03-02 20:45:45,788 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限为空，执行未通过
2020-03-02 20:45:45,961 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限类型为空，执行未通过
2020-03-02 20:45:46,137 - [test_add.py-->line:76] - INFO: 用例：加标失败—竞标天数为空，执行未通过
2020-03-02 20:45:46,359 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id不是当前登录用户，执行未通过
2020-03-02 20:45:46,572 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为负数，执行未通过
2020-03-02 20:45:46,771 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为小数，执行未通过
2020-03-02 20:45:47,064 - [test_adiut.py-->line:112] - INFO: 用例：审核通过，执行未通过
2020-03-02 20:45:47,286 - [test_adiut.py-->line:112] - INFO: 用例：审核不通过，执行未通过
2020-03-02 20:45:47,606 - [test_adiut.py-->line:112] - INFO: 用例：参数approved_or_not为空，执行未通过
2020-03-02 20:45:47,867 - [test_adiut.py-->line:112] - INFO: 用例：项目id为空，执行未通过
2020-03-02 20:45:48,126 - [test_adiut.py-->line:112] - INFO: 用例：项目id不存在，执行未通过
2020-03-02 20:45:48,484 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-整数，执行未通过
2020-03-02 20:45:48,807 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-1位小数，执行未通过
2020-03-02 20:45:49,133 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-2位小数，执行未通过
2020-03-02 20:45:49,564 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-50万，执行未通过
2020-03-02 20:45:49,763 - [test_rechage.py-->line:100] - INFO: 用例：会员id为空，执行未通过
2020-03-02 20:45:49,963 - [test_rechage.py-->line:100] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-03-02 20:45:50,163 - [test_rechage.py-->line:95] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-02 20:45:50,163 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:45:50,373 - [test_rechage.py-->line:100] - INFO: 用例：会员id为小数，执行未通过
2020-03-02 20:45:50,558 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为0，执行未通过
2020-03-02 20:45:50,558 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:45:50,774 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为负数，执行未通过
2020-03-02 20:45:50,774 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:45:50,994 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为空，执行未通过
2020-03-02 20:45:50,994 - [test_rechage.py-->line:96] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:45:51,186 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-03-02 20:45:51,186 - [test_rechage.py-->line:96] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-02 20:45:51,398 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-03-02 20:45:51,399 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:45:51,599 - [test_rechage.py-->line:100] - INFO: 用例：充值金额-非数字，执行未通过
2020-03-02 20:45:51,838 - [test_register.py-->line:97] - ERROR: 用例：登录成功，执行未通过
2020-03-02 20:45:51,838 - [test_register.py-->line:98] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 20:45:52,011 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-03-02 20:45:52,011 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:45:52,224 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-03-02 20:45:52,224 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:45:52,424 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-03-02 20:45:52,697 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-03-02 20:45:52,908 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-03-02 20:45:53,231 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-03-02 20:45:53,468 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-03-02 20:45:53,634 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-03-02 20:45:53,827 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-03-02 20:45:54,008 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-03-02 20:45:54,277 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-03-02 20:45:54,501 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-03-02 20:45:54,693 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-03-02 20:45:54,884 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-03-02 20:45:55,056 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-03-02 20:45:55,269 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-03-02 20:45:55,457 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-03-02 20:45:55,712 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-03-02 20:45:55,987 - [test_withdraw.py-->line:138] - INFO: 用例：登录成功，执行未通过
2020-03-02 20:45:56,298 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-整数，执行未通过
2020-03-02 20:45:56,640 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-1位小数，执行未通过
2020-03-02 20:45:57,007 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-2位小数，执行未通过
2020-03-02 20:45:57,315 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-50万，执行未通过
2020-03-02 20:45:57,494 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为空，执行未通过
2020-03-02 20:45:57,667 - [test_withdraw.py-->line:138] - INFO: 用例：会员id不存在，执行未通过
2020-03-02 20:45:57,905 - [test_withdraw.py-->line:133] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-02 20:45:57,905 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:45:58,141 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为小数，执行未通过
2020-03-02 20:45:58,341 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为0，执行未通过
2020-03-02 20:45:58,341 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:45:58,526 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为负数，执行未通过
2020-03-02 20:45:58,526 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:45:58,762 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为空，执行未通过
2020-03-02 20:45:58,762 - [test_withdraw.py-->line:134] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-03-02 20:45:58,933 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-03-02 20:45:58,933 - [test_withdraw.py-->line:134] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-02 20:45:59,225 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-03-02 20:45:59,225 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:45:59,395 - [test_withdraw.py-->line:138] - INFO: 用例：提现金额-非数字，执行未通过
2020-03-02 20:48:03,524 - [test_add.py-->line:76] - INFO: 用例：加标成功，执行未通过
2020-03-02 20:48:03,699 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-03-02 20:48:03,869 - [test_add.py-->line:76] - INFO: 用例：加标失败—标题为空，执行未通过
2020-03-02 20:48:04,043 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为空，执行未通过
2020-03-02 20:48:04,260 - [test_add.py-->line:76] - INFO: 用例：加标失败—年利率为空，执行未通过
2020-03-02 20:48:04,459 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限为空，执行未通过
2020-03-02 20:48:04,632 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限类型为空，执行未通过
2020-03-02 20:48:04,797 - [test_add.py-->line:76] - INFO: 用例：加标失败—竞标天数为空，执行未通过
2020-03-02 20:48:04,972 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id不是当前登录用户，执行未通过
2020-03-02 20:48:05,130 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为负数，执行未通过
2020-03-02 20:48:05,299 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为小数，执行未通过
2020-03-02 20:48:05,593 - [test_adiut.py-->line:112] - INFO: 用例：审核通过，执行未通过
2020-03-02 20:48:05,809 - [test_adiut.py-->line:112] - INFO: 用例：审核不通过，执行未通过
2020-03-02 20:48:06,040 - [test_adiut.py-->line:112] - INFO: 用例：项目不待审核状态，执行未通过
2020-03-02 20:48:06,257 - [test_adiut.py-->line:112] - INFO: 用例：参数approved_or_not为空，执行未通过
2020-03-02 20:48:06,476 - [test_adiut.py-->line:112] - INFO: 用例：项目id为空，执行未通过
2020-03-02 20:48:06,690 - [test_adiut.py-->line:112] - INFO: 用例：项目id不存在，执行未通过
2020-03-02 20:48:07,044 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-整数，执行未通过
2020-03-02 20:48:07,329 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-1位小数，执行未通过
2020-03-02 20:48:07,676 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-2位小数，执行未通过
2020-03-02 20:48:07,961 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-50万，执行未通过
2020-03-02 20:48:08,121 - [test_rechage.py-->line:100] - INFO: 用例：会员id为空，执行未通过
2020-03-02 20:48:08,306 - [test_rechage.py-->line:100] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-03-02 20:48:08,511 - [test_rechage.py-->line:95] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-02 20:48:08,512 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:48:08,693 - [test_rechage.py-->line:100] - INFO: 用例：会员id为小数，执行未通过
2020-03-02 20:48:08,896 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为0，执行未通过
2020-03-02 20:48:08,896 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:48:09,086 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为负数，执行未通过
2020-03-02 20:48:09,086 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:48:09,319 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为空，执行未通过
2020-03-02 20:48:09,320 - [test_rechage.py-->line:96] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:48:09,492 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-03-02 20:48:09,493 - [test_rechage.py-->line:96] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-02 20:48:09,694 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-03-02 20:48:09,694 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 20:48:09,919 - [test_rechage.py-->line:100] - INFO: 用例：充值金额-非数字，执行未通过
2020-03-02 20:48:10,130 - [test_register.py-->line:97] - ERROR: 用例：登录成功，执行未通过
2020-03-02 20:48:10,130 - [test_register.py-->line:98] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 20:48:10,297 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-03-02 20:48:10,298 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:48:10,494 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-03-02 20:48:10,494 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 20:48:10,674 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-03-02 20:48:10,874 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-03-02 20:48:11,034 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-03-02 20:48:11,324 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-03-02 20:48:11,571 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-03-02 20:48:11,738 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-03-02 20:48:11,903 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-03-02 20:48:12,107 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-03-02 20:48:12,270 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-03-02 20:48:12,459 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-03-02 20:48:12,630 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-03-02 20:48:12,805 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-03-02 20:48:12,961 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-03-02 20:48:13,135 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-03-02 20:48:13,327 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-03-02 20:48:13,593 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-03-02 20:48:13,817 - [test_withdraw.py-->line:138] - INFO: 用例：登录成功，执行未通过
2020-03-02 20:48:14,121 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-整数，执行未通过
2020-03-02 20:48:14,437 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-1位小数，执行未通过
2020-03-02 20:48:14,739 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-2位小数，执行未通过
2020-03-02 20:48:15,053 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-50万，执行未通过
2020-03-02 20:48:15,210 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为空，执行未通过
2020-03-02 20:48:15,398 - [test_withdraw.py-->line:138] - INFO: 用例：会员id不存在，执行未通过
2020-03-02 20:48:15,576 - [test_withdraw.py-->line:133] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-02 20:48:15,576 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:48:15,785 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为小数，执行未通过
2020-03-02 20:48:15,965 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为0，执行未通过
2020-03-02 20:48:15,965 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 20:48:16,170 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为负数，执行未通过
2020-03-02 20:48:16,170 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:48:16,347 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为空，执行未通过
2020-03-02 20:48:16,347 - [test_withdraw.py-->line:134] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-03-02 20:48:16,566 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-03-02 20:48:16,566 - [test_withdraw.py-->line:134] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-02 20:48:16,801 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-03-02 20:48:16,801 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 20:48:16,979 - [test_withdraw.py-->line:138] - INFO: 用例：提现金额-非数字，执行未通过
2020-03-02 21:06:47,825 - [test_add.py-->line:76] - INFO: 用例：加标成功，执行未通过
2020-03-02 21:06:47,995 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-03-02 21:06:48,178 - [test_add.py-->line:76] - INFO: 用例：加标失败—标题为空，执行未通过
2020-03-02 21:06:48,363 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为空，执行未通过
2020-03-02 21:06:48,534 - [test_add.py-->line:76] - INFO: 用例：加标失败—年利率为空，执行未通过
2020-03-02 21:06:48,734 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限为空，执行未通过
2020-03-02 21:06:48,912 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限类型为空，执行未通过
2020-03-02 21:06:49,108 - [test_add.py-->line:76] - INFO: 用例：加标失败—竞标天数为空，执行未通过
2020-03-02 21:06:49,281 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id不是当前登录用户，执行未通过
2020-03-02 21:06:49,501 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为负数，执行未通过
2020-03-02 21:06:49,673 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为小数，执行未通过
2020-03-02 21:06:50,033 - [test_adiut.py-->line:120] - INFO: 用例：审核通过，执行未通过
2020-03-02 21:06:50,322 - [test_adiut.py-->line:120] - INFO: 用例：审核不通过，执行未通过
2020-03-02 21:06:50,561 - [test_adiut.py-->line:120] - INFO: 用例：项目不待审核状态，执行未通过
2020-03-02 21:06:50,835 - [test_adiut.py-->line:120] - INFO: 用例：参数approved_or_not为空，执行未通过
2020-03-02 21:06:51,055 - [test_adiut.py-->line:120] - INFO: 用例：项目id为空，执行未通过
2020-03-02 21:06:51,297 - [test_adiut.py-->line:120] - INFO: 用例：项目id不存在，执行未通过
2020-03-02 21:06:51,638 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-整数，执行未通过
2020-03-02 21:06:51,902 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-1位小数，执行未通过
2020-03-02 21:06:52,255 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-2位小数，执行未通过
2020-03-02 21:06:52,544 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-50万，执行未通过
2020-03-02 21:06:52,726 - [test_rechage.py-->line:100] - INFO: 用例：会员id为空，执行未通过
2020-03-02 21:06:52,924 - [test_rechage.py-->line:100] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-03-02 21:06:53,097 - [test_rechage.py-->line:95] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-02 21:06:53,097 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:06:53,300 - [test_rechage.py-->line:100] - INFO: 用例：会员id为小数，执行未通过
2020-03-02 21:06:53,487 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为0，执行未通过
2020-03-02 21:06:53,488 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:06:53,693 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为负数，执行未通过
2020-03-02 21:06:53,693 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 21:06:53,862 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为空，执行未通过
2020-03-02 21:06:53,862 - [test_rechage.py-->line:96] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 21:06:54,067 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-03-02 21:06:54,067 - [test_rechage.py-->line:96] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-02 21:06:54,260 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-03-02 21:06:54,260 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 21:06:54,459 - [test_rechage.py-->line:100] - INFO: 用例：充值金额-非数字，执行未通过
2020-03-02 21:06:54,662 - [test_register.py-->line:97] - ERROR: 用例：登录成功，执行未通过
2020-03-02 21:06:54,662 - [test_register.py-->line:98] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 21:06:54,832 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-03-02 21:06:54,832 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 21:06:55,033 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-03-02 21:06:55,033 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 21:06:55,206 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-03-02 21:06:55,434 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-03-02 21:06:55,610 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-03-02 21:06:55,875 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-03-02 21:06:56,125 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-03-02 21:06:56,296 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-03-02 21:06:56,493 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-03-02 21:06:56,730 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-03-02 21:06:56,924 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-03-02 21:06:57,132 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-03-02 21:06:57,316 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-03-02 21:06:57,528 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-03-02 21:06:57,727 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-03-02 21:06:57,922 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-03-02 21:06:58,111 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-03-02 21:06:58,362 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-03-02 21:06:58,633 - [test_withdraw.py-->line:138] - INFO: 用例：登录成功，执行未通过
2020-03-02 21:06:59,042 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-整数，执行未通过
2020-03-02 21:06:59,431 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-1位小数，执行未通过
2020-03-02 21:06:59,763 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-2位小数，执行未通过
2020-03-02 21:07:00,132 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-50万，执行未通过
2020-03-02 21:07:00,287 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为空，执行未通过
2020-03-02 21:07:00,480 - [test_withdraw.py-->line:138] - INFO: 用例：会员id不存在，执行未通过
2020-03-02 21:07:00,706 - [test_withdraw.py-->line:133] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-02 21:07:00,706 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:07:00,867 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为小数，执行未通过
2020-03-02 21:07:01,079 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为0，执行未通过
2020-03-02 21:07:01,079 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:07:01,267 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为负数，执行未通过
2020-03-02 21:07:01,267 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 21:07:01,466 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为空，执行未通过
2020-03-02 21:07:01,467 - [test_withdraw.py-->line:134] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-03-02 21:07:01,698 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-03-02 21:07:01,699 - [test_withdraw.py-->line:134] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-02 21:07:01,890 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-03-02 21:07:01,891 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 21:07:02,077 - [test_withdraw.py-->line:138] - INFO: 用例：提现金额-非数字，执行未通过
2020-03-02 21:42:37,226 - [test_add.py-->line:76] - INFO: 用例：加标成功，执行未通过
2020-03-02 21:42:37,387 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-03-02 21:42:37,568 - [test_add.py-->line:76] - INFO: 用例：加标失败—标题为空，执行未通过
2020-03-02 21:42:37,739 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为空，执行未通过
2020-03-02 21:42:37,899 - [test_add.py-->line:76] - INFO: 用例：加标失败—年利率为空，执行未通过
2020-03-02 21:42:38,100 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限为空，执行未通过
2020-03-02 21:42:38,276 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限类型为空，执行未通过
2020-03-02 21:42:38,442 - [test_add.py-->line:76] - INFO: 用例：加标失败—竞标天数为空，执行未通过
2020-03-02 21:42:38,600 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id不是当前登录用户，执行未通过
2020-03-02 21:42:38,775 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为负数，执行未通过
2020-03-02 21:42:38,948 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为小数，执行未通过
2020-03-02 21:42:39,273 - [test_adiut.py-->line:120] - INFO: 用例：审核通过，执行未通过
2020-03-02 21:42:39,535 - [test_adiut.py-->line:120] - INFO: 用例：审核不通过，执行未通过
2020-03-02 21:42:39,733 - [test_adiut.py-->line:120] - INFO: 用例：项目不待审核状态，执行未通过
2020-03-02 21:42:39,940 - [test_adiut.py-->line:120] - INFO: 用例：参数approved_or_not为空，执行未通过
2020-03-02 21:42:40,126 - [test_adiut.py-->line:120] - INFO: 用例：项目id为空，执行未通过
2020-03-02 21:42:40,339 - [test_adiut.py-->line:120] - INFO: 用例：项目id不存在，执行未通过
2020-03-02 21:42:40,533 - [test_invest.py-->line:84] - INFO: 用例：管理员正常登录，执行未通过
2020-03-02 21:42:40,755 - [test_invest.py-->line:84] - INFO: 用例：管理员加标，执行未通过
2020-03-02 21:42:40,925 - [test_invest.py-->line:84] - INFO: 用例：管理员审核，执行未通过
2020-03-02 21:42:41,111 - [test_invest.py-->line:84] - INFO: 用例：投资人正常登录，执行未通过
2020-03-02 21:42:41,294 - [test_invest.py-->line:84] - INFO: 用例：投资人正常投资，执行未通过
2020-03-02 21:42:41,468 - [test_invest.py-->line:84] - INFO: 用例：投资人id为空，执行未通过
2020-03-02 21:42:41,640 - [test_invest.py-->line:84] - INFO: 用例：标id为空，执行未通过
2020-03-02 21:42:41,821 - [test_invest.py-->line:84] - INFO: 用例：投资金额为空，执行未通过
2020-03-02 21:42:42,201 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-整数，执行未通过
2020-03-02 21:42:42,512 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-1位小数，执行未通过
2020-03-02 21:42:42,826 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-2位小数，执行未通过
2020-03-02 21:42:43,153 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-50万，执行未通过
2020-03-02 21:42:43,327 - [test_rechage.py-->line:100] - INFO: 用例：会员id为空，执行未通过
2020-03-02 21:42:43,507 - [test_rechage.py-->line:100] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-03-02 21:42:43,689 - [test_rechage.py-->line:95] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-02 21:42:43,689 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:42:43,912 - [test_rechage.py-->line:100] - INFO: 用例：会员id为小数，执行未通过
2020-03-02 21:42:44,123 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为0，执行未通过
2020-03-02 21:42:44,123 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:42:44,300 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为负数，执行未通过
2020-03-02 21:42:44,300 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 21:42:44,504 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为空，执行未通过
2020-03-02 21:42:44,504 - [test_rechage.py-->line:96] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 21:42:44,664 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-03-02 21:42:44,664 - [test_rechage.py-->line:96] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-02 21:42:44,894 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-03-02 21:42:44,894 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 21:42:45,079 - [test_rechage.py-->line:100] - INFO: 用例：充值金额-非数字，执行未通过
2020-03-02 21:42:45,392 - [test_register.py-->line:97] - ERROR: 用例：登录成功，执行未通过
2020-03-02 21:42:45,393 - [test_register.py-->line:98] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 21:42:45,567 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-03-02 21:42:45,567 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 21:42:45,757 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-03-02 21:42:45,757 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 21:42:45,997 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-03-02 21:42:46,182 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-03-02 21:42:46,346 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-03-02 21:42:46,639 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-03-02 21:42:46,933 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-03-02 21:42:47,104 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-03-02 21:42:47,307 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-03-02 21:42:47,471 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-03-02 21:42:47,693 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-03-02 21:42:47,879 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-03-02 21:42:48,078 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-03-02 21:42:48,271 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-03-02 21:42:48,464 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-03-02 21:42:48,612 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-03-02 21:42:48,798 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-03-02 21:42:49,065 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-03-02 21:42:49,261 - [test_withdraw.py-->line:138] - INFO: 用例：登录成功，执行未通过
2020-03-02 21:42:49,564 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-整数，执行未通过
2020-03-02 21:42:49,904 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-1位小数，执行未通过
2020-03-02 21:42:50,288 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-2位小数，执行未通过
2020-03-02 21:42:50,606 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-50万，执行未通过
2020-03-02 21:42:50,775 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为空，执行未通过
2020-03-02 21:42:50,974 - [test_withdraw.py-->line:138] - INFO: 用例：会员id不存在，执行未通过
2020-03-02 21:42:51,168 - [test_withdraw.py-->line:133] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-02 21:42:51,168 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:42:51,344 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为小数，执行未通过
2020-03-02 21:42:51,525 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为0，执行未通过
2020-03-02 21:42:51,525 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:42:51,707 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为负数，执行未通过
2020-03-02 21:42:51,707 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 21:42:51,880 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为空，执行未通过
2020-03-02 21:42:51,881 - [test_withdraw.py-->line:134] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-03-02 21:42:52,075 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-03-02 21:42:52,075 - [test_withdraw.py-->line:134] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-02 21:42:52,282 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-03-02 21:42:52,283 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 21:42:52,508 - [test_withdraw.py-->line:138] - INFO: 用例：提现金额-非数字，执行未通过
2020-03-02 21:44:16,348 - [test_add.py-->line:76] - INFO: 用例：加标成功，执行未通过
2020-03-02 21:44:16,540 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-03-02 21:44:16,739 - [test_add.py-->line:76] - INFO: 用例：加标失败—标题为空，执行未通过
2020-03-02 21:44:16,924 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为空，执行未通过
2020-03-02 21:44:17,121 - [test_add.py-->line:76] - INFO: 用例：加标失败—年利率为空，执行未通过
2020-03-02 21:44:17,294 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限为空，执行未通过
2020-03-02 21:44:17,470 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限类型为空，执行未通过
2020-03-02 21:44:17,638 - [test_add.py-->line:76] - INFO: 用例：加标失败—竞标天数为空，执行未通过
2020-03-02 21:44:17,833 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id不是当前登录用户，执行未通过
2020-03-02 21:44:17,999 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为负数，执行未通过
2020-03-02 21:44:18,167 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为小数，执行未通过
2020-03-02 21:44:18,528 - [test_adiut.py-->line:120] - INFO: 用例：审核通过，执行未通过
2020-03-02 21:44:18,802 - [test_adiut.py-->line:120] - INFO: 用例：审核不通过，执行未通过
2020-03-02 21:44:19,031 - [test_adiut.py-->line:120] - INFO: 用例：项目不待审核状态，执行未通过
2020-03-02 21:44:19,341 - [test_adiut.py-->line:120] - INFO: 用例：参数approved_or_not为空，执行未通过
2020-03-02 21:44:19,633 - [test_adiut.py-->line:120] - INFO: 用例：项目id为空，执行未通过
2020-03-02 21:44:19,922 - [test_adiut.py-->line:120] - INFO: 用例：项目id不存在，执行未通过
2020-03-02 21:44:20,138 - [test_invest.py-->line:84] - INFO: 用例：管理员正常登录，执行未通过
2020-03-02 21:44:20,429 - [test_invest.py-->line:84] - INFO: 用例：管理员加标，执行未通过
2020-03-02 21:44:20,608 - [test_invest.py-->line:84] - INFO: 用例：管理员审核，执行未通过
2020-03-02 21:44:20,834 - [test_invest.py-->line:84] - INFO: 用例：投资人正常登录，执行未通过
2020-03-02 21:44:21,067 - [test_invest.py-->line:84] - INFO: 用例：投资人正常投资，执行未通过
2020-03-02 21:44:21,272 - [test_invest.py-->line:84] - INFO: 用例：投资人id为空，执行未通过
2020-03-02 21:44:21,467 - [test_invest.py-->line:84] - INFO: 用例：标id为空，执行未通过
2020-03-02 21:44:21,663 - [test_invest.py-->line:84] - INFO: 用例：投资金额为空，执行未通过
2020-03-02 21:44:21,889 - [test_invest.py-->line:79] - ERROR: 用例：投资金额大于项目可投金额，执行未通过
2020-03-02 21:44:21,889 - [test_invest.py-->line:80] - ERROR: '该标可投金额不足' != '该标可投金额不足,可投金额：3700.0'
- 该标可投金额不足
+ 该标可投金额不足,可投金额：3700.0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_invest.py", line 76, in test_login
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '该标可投金额不足' != '该标可投金额不足,可投金额：3700.0'
- 该标可投金额不足
+ 该标可投金额不足,可投金额：3700.0

2020-03-02 21:44:22,376 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-整数，执行未通过
2020-03-02 21:44:22,745 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-1位小数，执行未通过
2020-03-02 21:44:23,078 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-2位小数，执行未通过
2020-03-02 21:44:23,404 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-50万，执行未通过
2020-03-02 21:44:23,569 - [test_rechage.py-->line:100] - INFO: 用例：会员id为空，执行未通过
2020-03-02 21:44:23,757 - [test_rechage.py-->line:100] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-03-02 21:44:23,997 - [test_rechage.py-->line:95] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-02 21:44:23,997 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:44:24,176 - [test_rechage.py-->line:100] - INFO: 用例：会员id为小数，执行未通过
2020-03-02 21:44:24,401 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为0，执行未通过
2020-03-02 21:44:24,402 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:44:24,577 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为负数，执行未通过
2020-03-02 21:44:24,578 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 21:44:24,797 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为空，执行未通过
2020-03-02 21:44:24,798 - [test_rechage.py-->line:96] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 21:44:25,011 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-03-02 21:44:25,012 - [test_rechage.py-->line:96] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-02 21:44:25,212 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-03-02 21:44:25,212 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 21:44:25,489 - [test_rechage.py-->line:100] - INFO: 用例：充值金额-非数字，执行未通过
2020-03-02 21:44:25,722 - [test_register.py-->line:97] - ERROR: 用例：登录成功，执行未通过
2020-03-02 21:44:25,723 - [test_register.py-->line:98] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 21:44:25,927 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-03-02 21:44:25,927 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 21:44:26,140 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-03-02 21:44:26,140 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 21:44:26,342 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-03-02 21:44:26,574 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-03-02 21:44:26,809 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-03-02 21:44:27,104 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-03-02 21:44:27,428 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-03-02 21:44:27,606 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-03-02 21:44:27,801 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-03-02 21:44:27,975 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-03-02 21:44:28,157 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-03-02 21:44:28,374 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-03-02 21:44:28,636 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-03-02 21:44:28,828 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-03-02 21:44:29,014 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-03-02 21:44:29,193 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-03-02 21:44:29,374 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-03-02 21:44:29,622 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-03-02 21:44:29,821 - [test_withdraw.py-->line:138] - INFO: 用例：登录成功，执行未通过
2020-03-02 21:44:30,134 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-整数，执行未通过
2020-03-02 21:44:30,633 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-1位小数，执行未通过
2020-03-02 21:44:31,033 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-2位小数，执行未通过
2020-03-02 21:44:31,380 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-50万，执行未通过
2020-03-02 21:44:31,560 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为空，执行未通过
2020-03-02 21:44:31,769 - [test_withdraw.py-->line:138] - INFO: 用例：会员id不存在，执行未通过
2020-03-02 21:44:31,960 - [test_withdraw.py-->line:133] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-02 21:44:31,960 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:44:32,168 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为小数，执行未通过
2020-03-02 21:44:32,352 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为0，执行未通过
2020-03-02 21:44:32,352 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:44:32,563 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为负数，执行未通过
2020-03-02 21:44:32,564 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 21:44:32,747 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为空，执行未通过
2020-03-02 21:44:32,748 - [test_withdraw.py-->line:134] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-03-02 21:44:32,964 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-03-02 21:44:32,964 - [test_withdraw.py-->line:134] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-02 21:44:33,161 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-03-02 21:44:33,161 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 21:44:33,376 - [test_withdraw.py-->line:138] - INFO: 用例：提现金额-非数字，执行未通过
2020-03-02 21:47:49,352 - [test_add.py-->line:76] - INFO: 用例：加标成功，执行未通过
2020-03-02 21:47:49,526 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-03-02 21:47:49,684 - [test_add.py-->line:76] - INFO: 用例：加标失败—标题为空，执行未通过
2020-03-02 21:47:49,859 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为空，执行未通过
2020-03-02 21:47:50,058 - [test_add.py-->line:76] - INFO: 用例：加标失败—年利率为空，执行未通过
2020-03-02 21:47:50,227 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限为空，执行未通过
2020-03-02 21:47:50,404 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限类型为空，执行未通过
2020-03-02 21:47:50,588 - [test_add.py-->line:76] - INFO: 用例：加标失败—竞标天数为空，执行未通过
2020-03-02 21:47:50,753 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id不是当前登录用户，执行未通过
2020-03-02 21:47:50,952 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为负数，执行未通过
2020-03-02 21:47:51,111 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为小数，执行未通过
2020-03-02 21:47:51,439 - [test_adiut.py-->line:120] - INFO: 用例：审核通过，执行未通过
2020-03-02 21:47:51,716 - [test_adiut.py-->line:120] - INFO: 用例：审核不通过，执行未通过
2020-03-02 21:47:51,958 - [test_adiut.py-->line:120] - INFO: 用例：项目不待审核状态，执行未通过
2020-03-02 21:47:52,177 - [test_adiut.py-->line:120] - INFO: 用例：参数approved_or_not为空，执行未通过
2020-03-02 21:47:52,397 - [test_adiut.py-->line:120] - INFO: 用例：项目id为空，执行未通过
2020-03-02 21:47:53,070 - [test_adiut.py-->line:120] - INFO: 用例：项目id不存在，执行未通过
2020-03-02 21:47:53,254 - [test_invest.py-->line:85] - INFO: 用例：管理员正常登录，执行未通过
2020-03-02 21:47:53,519 - [test_invest.py-->line:85] - INFO: 用例：管理员加标，执行未通过
2020-03-02 21:47:53,736 - [test_invest.py-->line:85] - INFO: 用例：管理员审核，执行未通过
2020-03-02 21:47:53,908 - [test_invest.py-->line:85] - INFO: 用例：投资人正常登录，执行未通过
2020-03-02 21:47:54,327 - [test_invest.py-->line:85] - INFO: 用例：投资人正常投资，执行未通过
2020-03-02 21:47:54,497 - [test_invest.py-->line:85] - INFO: 用例：投资人id为空，执行未通过
2020-03-02 21:47:54,676 - [test_invest.py-->line:85] - INFO: 用例：标id为空，执行未通过
2020-03-02 21:47:54,844 - [test_invest.py-->line:85] - INFO: 用例：投资金额为空，执行未通过
2020-03-02 21:47:55,037 - [test_invest.py-->line:85] - INFO: 用例：投资金额大于项目可投金额，执行未通过
2020-03-02 21:47:55,587 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-整数，执行未通过
2020-03-02 21:47:55,870 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-1位小数，执行未通过
2020-03-02 21:47:56,159 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-2位小数，执行未通过
2020-03-02 21:47:56,432 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-50万，执行未通过
2020-03-02 21:47:56,605 - [test_rechage.py-->line:100] - INFO: 用例：会员id为空，执行未通过
2020-03-02 21:47:56,788 - [test_rechage.py-->line:100] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-03-02 21:47:56,953 - [test_rechage.py-->line:95] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-02 21:47:56,953 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:47:57,168 - [test_rechage.py-->line:100] - INFO: 用例：会员id为小数，执行未通过
2020-03-02 21:47:57,338 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为0，执行未通过
2020-03-02 21:47:57,338 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:47:57,555 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为负数，执行未通过
2020-03-02 21:47:57,555 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 21:47:57,719 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为空，执行未通过
2020-03-02 21:47:57,720 - [test_rechage.py-->line:96] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 21:47:57,956 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-03-02 21:47:57,956 - [test_rechage.py-->line:96] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-02 21:47:58,155 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-03-02 21:47:58,155 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-02 21:47:58,458 - [test_rechage.py-->line:100] - INFO: 用例：充值金额-非数字，执行未通过
2020-03-02 21:47:58,673 - [test_register.py-->line:97] - ERROR: 用例：登录成功，执行未通过
2020-03-02 21:47:58,673 - [test_register.py-->line:98] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-02 21:47:58,864 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-03-02 21:47:58,864 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 21:47:59,077 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-03-02 21:47:59,077 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-02 21:47:59,280 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-03-02 21:47:59,513 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-03-02 21:47:59,712 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-03-02 21:47:59,979 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-03-02 21:48:00,271 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-03-02 21:48:00,441 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-03-02 21:48:00,638 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-03-02 21:48:00,802 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-03-02 21:48:00,994 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-03-02 21:48:01,173 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-03-02 21:48:01,361 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-03-02 21:48:01,537 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-03-02 21:48:01,735 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-03-02 21:48:01,919 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-03-02 21:48:02,096 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-03-02 21:48:02,325 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-03-02 21:48:02,523 - [test_withdraw.py-->line:138] - INFO: 用例：登录成功，执行未通过
2020-03-02 21:48:02,787 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-整数，执行未通过
2020-03-02 21:48:03,142 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-1位小数，执行未通过
2020-03-02 21:48:03,422 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-2位小数，执行未通过
2020-03-02 21:48:03,686 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-50万，执行未通过
2020-03-02 21:48:03,853 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为空，执行未通过
2020-03-02 21:48:04,043 - [test_withdraw.py-->line:138] - INFO: 用例：会员id不存在，执行未通过
2020-03-02 21:48:04,222 - [test_withdraw.py-->line:133] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-02 21:48:04,222 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:48:04,460 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为小数，执行未通过
2020-03-02 21:48:04,729 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为0，执行未通过
2020-03-02 21:48:04,729 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-02 21:48:04,945 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为负数，执行未通过
2020-03-02 21:48:04,945 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 21:48:05,115 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为空，执行未通过
2020-03-02 21:48:05,115 - [test_withdraw.py-->line:134] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-03-02 21:48:05,338 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-03-02 21:48:05,338 - [test_withdraw.py-->line:134] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-02 21:48:05,498 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-03-02 21:48:05,498 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-02 21:48:05,738 - [test_withdraw.py-->line:138] - INFO: 用例：提现金额-非数字，执行未通过
2020-03-03 17:06:09,949 - [test_add.py-->line:76] - INFO: 用例：加标成功，执行未通过
2020-03-03 17:06:10,085 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-03-03 17:06:10,224 - [test_add.py-->line:76] - INFO: 用例：加标失败—标题为空，执行未通过
2020-03-03 17:06:10,368 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为空，执行未通过
2020-03-03 17:06:10,507 - [test_add.py-->line:76] - INFO: 用例：加标失败—年利率为空，执行未通过
2020-03-03 17:06:10,650 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限为空，执行未通过
2020-03-03 17:06:10,792 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限类型为空，执行未通过
2020-03-03 17:06:10,929 - [test_add.py-->line:76] - INFO: 用例：加标失败—竞标天数为空，执行未通过
2020-03-03 17:06:11,077 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id不是当前登录用户，执行未通过
2020-03-03 17:06:11,215 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为负数，执行未通过
2020-03-03 17:06:11,375 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为小数，执行未通过
2020-03-03 17:06:11,658 - [test_adiut.py-->line:120] - INFO: 用例：审核通过，执行未通过
2020-03-03 17:06:11,895 - [test_adiut.py-->line:120] - INFO: 用例：审核不通过，执行未通过
2020-03-03 17:06:12,115 - [test_adiut.py-->line:120] - INFO: 用例：项目不待审核状态，执行未通过
2020-03-03 17:06:12,300 - [test_adiut.py-->line:120] - INFO: 用例：参数approved_or_not为空，执行未通过
2020-03-03 17:06:12,489 - [test_adiut.py-->line:120] - INFO: 用例：项目id为空，执行未通过
2020-03-03 17:06:12,663 - [test_adiut.py-->line:120] - INFO: 用例：项目id不存在，执行未通过
2020-03-03 17:06:12,891 - [test_invest.py-->line:89] - INFO: 用例：管理员正常登录，执行未通过
2020-03-03 17:06:13,029 - [test_invest.py-->line:89] - INFO: 用例：管理员加标，执行未通过
2020-03-03 17:06:13,164 - [test_invest.py-->line:89] - INFO: 用例：管理员审核，执行未通过
2020-03-03 17:06:13,301 - [test_invest.py-->line:89] - INFO: 用例：投资人正常登录，执行未通过
2020-03-03 17:06:13,452 - [test_invest.py-->line:89] - INFO: 用例：投资人正常投资，执行未通过
2020-03-03 17:06:13,583 - [test_invest.py-->line:89] - INFO: 用例：投资人id为空，执行未通过
2020-03-03 17:06:13,713 - [test_invest.py-->line:89] - INFO: 用例：标id为空，执行未通过
2020-03-03 17:06:13,847 - [test_invest.py-->line:89] - INFO: 用例：投资金额为空，执行未通过
2020-03-03 17:06:13,976 - [test_invest.py-->line:89] - INFO: 用例：投资金额大于项目可投金额，执行未通过
2020-03-03 17:06:14,132 - [test_invest.py-->line:89] - INFO: 用例：投资金额等于项目可投金额，执行未通过
2020-03-03 17:06:14,349 - [test_loans.py-->line:52] - ERROR: 用例：获取成功:不填参数，执行未通过
2020-03-03 17:06:14,349 - [test_loans.py-->line:53] - ERROR: 1 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_loans.py", line 46, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-03-03 17:06:14,505 - [test_loans.py-->line:52] - ERROR: 用例：获取成功:只填页面参数，执行未通过
2020-03-03 17:06:14,505 - [test_loans.py-->line:53] - ERROR: 1 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_loans.py", line 46, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-03-03 17:06:14,656 - [test_loans.py-->line:52] - ERROR: 用例：获取成功:只填页面内容数，执行未通过
2020-03-03 17:06:14,657 - [test_loans.py-->line:53] - ERROR: 1 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_loans.py", line 46, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-03-03 17:06:14,793 - [test_loans.py-->line:52] - ERROR: 用例：获取成功:都填参数，执行未通过
2020-03-03 17:06:14,793 - [test_loans.py-->line:53] - ERROR: 1 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_loans.py", line 46, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
2020-03-03 17:06:15,135 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-整数，执行未通过
2020-03-03 17:06:15,408 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-1位小数，执行未通过
2020-03-03 17:06:15,680 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-2位小数，执行未通过
2020-03-03 17:06:15,949 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-50万，执行未通过
2020-03-03 17:06:16,106 - [test_rechage.py-->line:100] - INFO: 用例：会员id为空，执行未通过
2020-03-03 17:06:16,246 - [test_rechage.py-->line:100] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-03-03 17:06:16,393 - [test_rechage.py-->line:95] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-03 17:06:16,394 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:06:16,538 - [test_rechage.py-->line:100] - INFO: 用例：会员id为小数，执行未通过
2020-03-03 17:06:16,690 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为0，执行未通过
2020-03-03 17:06:16,690 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:06:16,852 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为负数，执行未通过
2020-03-03 17:06:16,852 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 17:06:17,008 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为空，执行未通过
2020-03-03 17:06:17,009 - [test_rechage.py-->line:96] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 17:06:17,160 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-03-03 17:06:17,160 - [test_rechage.py-->line:96] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-03 17:06:17,329 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-03-03 17:06:17,329 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 17:06:17,494 - [test_rechage.py-->line:100] - INFO: 用例：充值金额-非数字，执行未通过
2020-03-03 17:06:17,662 - [test_register.py-->line:97] - ERROR: 用例：登录成功，执行未通过
2020-03-03 17:06:17,662 - [test_register.py-->line:98] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-03 17:06:17,820 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-03-03 17:06:17,820 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 17:06:17,956 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-03-03 17:06:17,957 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 17:06:18,121 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-03-03 17:06:18,268 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-03-03 17:06:18,416 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-03-03 17:06:18,663 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-03-03 17:06:18,887 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-03-03 17:06:19,022 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-03-03 17:06:19,180 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-03-03 17:06:19,309 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-03-03 17:06:19,459 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-03-03 17:06:19,629 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-03-03 17:06:19,769 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-03-03 17:06:19,901 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-03-03 17:06:20,073 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-03-03 17:06:20,224 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-03-03 17:06:20,365 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-03-03 17:06:20,605 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-03-03 17:06:20,840 - [test_withdraw.py-->line:138] - INFO: 用例：登录成功，执行未通过
2020-03-03 17:06:21,112 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-整数，执行未通过
2020-03-03 17:06:21,394 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-1位小数，执行未通过
2020-03-03 17:06:21,676 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-2位小数，执行未通过
2020-03-03 17:06:21,950 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-50万，执行未通过
2020-03-03 17:06:22,087 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为空，执行未通过
2020-03-03 17:06:22,243 - [test_withdraw.py-->line:138] - INFO: 用例：会员id不存在，执行未通过
2020-03-03 17:06:22,386 - [test_withdraw.py-->line:133] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-03 17:06:22,387 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:06:22,571 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为小数，执行未通过
2020-03-03 17:06:22,715 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为0，执行未通过
2020-03-03 17:06:22,715 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:06:22,872 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为负数，执行未通过
2020-03-03 17:06:22,873 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 17:06:23,021 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为空，执行未通过
2020-03-03 17:06:23,021 - [test_withdraw.py-->line:134] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-03-03 17:06:23,175 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-03-03 17:06:23,175 - [test_withdraw.py-->line:134] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-03 17:06:23,342 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-03-03 17:06:23,343 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 17:06:23,502 - [test_withdraw.py-->line:138] - INFO: 用例：提现金额-非数字，执行未通过
2020-03-03 17:09:22,218 - [test_add.py-->line:76] - INFO: 用例：加标成功，执行未通过
2020-03-03 17:09:22,354 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-03-03 17:09:22,496 - [test_add.py-->line:76] - INFO: 用例：加标失败—标题为空，执行未通过
2020-03-03 17:09:22,638 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为空，执行未通过
2020-03-03 17:09:22,778 - [test_add.py-->line:76] - INFO: 用例：加标失败—年利率为空，执行未通过
2020-03-03 17:09:22,913 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限为空，执行未通过
2020-03-03 17:09:23,050 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限类型为空，执行未通过
2020-03-03 17:09:23,196 - [test_add.py-->line:76] - INFO: 用例：加标失败—竞标天数为空，执行未通过
2020-03-03 17:09:23,344 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id不是当前登录用户，执行未通过
2020-03-03 17:09:23,481 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为负数，执行未通过
2020-03-03 17:09:23,644 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为小数，执行未通过
2020-03-03 17:09:23,940 - [test_adiut.py-->line:120] - INFO: 用例：审核通过，执行未通过
2020-03-03 17:09:24,164 - [test_adiut.py-->line:120] - INFO: 用例：审核不通过，执行未通过
2020-03-03 17:09:24,337 - [test_adiut.py-->line:120] - INFO: 用例：项目不待审核状态，执行未通过
2020-03-03 17:09:24,510 - [test_adiut.py-->line:120] - INFO: 用例：参数approved_or_not为空，执行未通过
2020-03-03 17:09:24,678 - [test_adiut.py-->line:120] - INFO: 用例：项目id为空，执行未通过
2020-03-03 17:09:24,861 - [test_adiut.py-->line:120] - INFO: 用例：项目id不存在，执行未通过
2020-03-03 17:09:25,035 - [test_info.py-->line:79] - INFO: 用例：正常获取用户信息，执行未通过
2020-03-03 17:09:25,165 - [test_info.py-->line:79] - INFO: 用例：不存在的用户id，执行未通过
2020-03-03 17:09:25,345 - [test_invest.py-->line:89] - INFO: 用例：管理员正常登录，执行未通过
2020-03-03 17:09:25,481 - [test_invest.py-->line:89] - INFO: 用例：管理员加标，执行未通过
2020-03-03 17:09:25,616 - [test_invest.py-->line:89] - INFO: 用例：管理员审核，执行未通过
2020-03-03 17:09:25,755 - [test_invest.py-->line:89] - INFO: 用例：投资人正常登录，执行未通过
2020-03-03 17:09:25,901 - [test_invest.py-->line:89] - INFO: 用例：投资人正常投资，执行未通过
2020-03-03 17:09:26,046 - [test_invest.py-->line:89] - INFO: 用例：投资人id为空，执行未通过
2020-03-03 17:09:26,171 - [test_invest.py-->line:89] - INFO: 用例：标id为空，执行未通过
2020-03-03 17:09:26,301 - [test_invest.py-->line:89] - INFO: 用例：投资金额为空，执行未通过
2020-03-03 17:09:26,462 - [test_invest.py-->line:89] - INFO: 用例：投资金额大于项目可投金额，执行未通过
2020-03-03 17:09:26,646 - [test_invest.py-->line:89] - INFO: 用例：投资金额等于项目可投金额，执行未通过
2020-03-03 17:09:26,799 - [test_loans.py-->line:57] - INFO: 用例：获取成功:不填参数，执行未通过
2020-03-03 17:09:26,960 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面参数，执行未通过
2020-03-03 17:09:27,089 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面内容数，执行未通过
2020-03-03 17:09:27,222 - [test_loans.py-->line:57] - INFO: 用例：获取成功:都填参数，执行未通过
2020-03-03 17:09:27,536 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-整数，执行未通过
2020-03-03 17:09:27,815 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-1位小数，执行未通过
2020-03-03 17:09:28,074 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-2位小数，执行未通过
2020-03-03 17:09:28,340 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-50万，执行未通过
2020-03-03 17:09:28,475 - [test_rechage.py-->line:100] - INFO: 用例：会员id为空，执行未通过
2020-03-03 17:09:28,618 - [test_rechage.py-->line:100] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-03-03 17:09:28,769 - [test_rechage.py-->line:95] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-03 17:09:28,769 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:09:28,904 - [test_rechage.py-->line:100] - INFO: 用例：会员id为小数，执行未通过
2020-03-03 17:09:29,047 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为0，执行未通过
2020-03-03 17:09:29,047 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:09:29,184 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为负数，执行未通过
2020-03-03 17:09:29,184 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 17:09:29,340 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为空，执行未通过
2020-03-03 17:09:29,340 - [test_rechage.py-->line:96] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 17:09:29,477 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-03-03 17:09:29,478 - [test_rechage.py-->line:96] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-03 17:09:29,606 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-03-03 17:09:29,606 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 17:09:29,737 - [test_rechage.py-->line:100] - INFO: 用例：充值金额-非数字，执行未通过
2020-03-03 17:09:29,896 - [test_register.py-->line:97] - ERROR: 用例：登录成功，执行未通过
2020-03-03 17:09:29,896 - [test_register.py-->line:98] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-03 17:09:30,035 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-03-03 17:09:30,035 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 17:09:30,163 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-03-03 17:09:30,163 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 17:09:30,336 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-03-03 17:09:30,486 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-03-03 17:09:30,620 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-03-03 17:09:30,870 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-03-03 17:09:31,081 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-03-03 17:09:31,228 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-03-03 17:09:31,364 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-03-03 17:09:31,502 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-03-03 17:09:31,638 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-03-03 17:09:31,783 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-03-03 17:09:31,950 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-03-03 17:09:32,081 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-03-03 17:09:32,225 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-03-03 17:09:32,377 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-03-03 17:09:32,527 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-03-03 17:09:32,729 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-03-03 17:09:32,952 - [test_withdraw.py-->line:138] - INFO: 用例：登录成功，执行未通过
2020-03-03 17:09:33,198 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-整数，执行未通过
2020-03-03 17:09:33,454 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-1位小数，执行未通过
2020-03-03 17:09:33,705 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-2位小数，执行未通过
2020-03-03 17:09:33,951 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-50万，执行未通过
2020-03-03 17:09:34,082 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为空，执行未通过
2020-03-03 17:09:34,218 - [test_withdraw.py-->line:138] - INFO: 用例：会员id不存在，执行未通过
2020-03-03 17:09:34,361 - [test_withdraw.py-->line:133] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-03 17:09:34,361 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:09:34,500 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为小数，执行未通过
2020-03-03 17:09:34,645 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为0，执行未通过
2020-03-03 17:09:34,645 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:09:34,791 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为负数，执行未通过
2020-03-03 17:09:34,791 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 17:09:34,959 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为空，执行未通过
2020-03-03 17:09:34,960 - [test_withdraw.py-->line:134] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-03-03 17:09:35,107 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-03-03 17:09:35,107 - [test_withdraw.py-->line:134] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-03 17:09:35,243 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-03-03 17:09:35,244 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 17:09:35,389 - [test_withdraw.py-->line:138] - INFO: 用例：提现金额-非数字，执行未通过
2020-03-03 17:10:58,976 - [test_add.py-->line:76] - INFO: 用例：加标成功，执行未通过
2020-03-03 17:10:59,125 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-03-03 17:10:59,275 - [test_add.py-->line:76] - INFO: 用例：加标失败—标题为空，执行未通过
2020-03-03 17:10:59,402 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为空，执行未通过
2020-03-03 17:10:59,529 - [test_add.py-->line:76] - INFO: 用例：加标失败—年利率为空，执行未通过
2020-03-03 17:10:59,673 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限为空，执行未通过
2020-03-03 17:10:59,812 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限类型为空，执行未通过
2020-03-03 17:10:59,954 - [test_add.py-->line:76] - INFO: 用例：加标失败—竞标天数为空，执行未通过
2020-03-03 17:11:00,084 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id不是当前登录用户，执行未通过
2020-03-03 17:11:00,216 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为负数，执行未通过
2020-03-03 17:11:00,382 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为小数，执行未通过
2020-03-03 17:11:00,674 - [test_adiut.py-->line:120] - INFO: 用例：审核通过，执行未通过
2020-03-03 17:11:00,907 - [test_adiut.py-->line:120] - INFO: 用例：审核不通过，执行未通过
2020-03-03 17:11:01,076 - [test_adiut.py-->line:120] - INFO: 用例：项目不待审核状态，执行未通过
2020-03-03 17:11:01,242 - [test_adiut.py-->line:120] - INFO: 用例：参数approved_or_not为空，执行未通过
2020-03-03 17:11:01,425 - [test_adiut.py-->line:120] - INFO: 用例：项目id为空，执行未通过
2020-03-03 17:11:01,589 - [test_adiut.py-->line:120] - INFO: 用例：项目id不存在，执行未通过
2020-03-03 17:11:01,772 - [test_info.py-->line:79] - INFO: 用例：正常获取用户信息，执行未通过
2020-03-03 17:11:01,906 - [test_info.py-->line:79] - INFO: 用例：不存在的用户id，执行未通过
2020-03-03 17:11:02,062 - [test_invest.py-->line:89] - INFO: 用例：管理员正常登录，执行未通过
2020-03-03 17:11:02,211 - [test_invest.py-->line:89] - INFO: 用例：管理员加标，执行未通过
2020-03-03 17:11:02,344 - [test_invest.py-->line:89] - INFO: 用例：管理员审核，执行未通过
2020-03-03 17:11:02,486 - [test_invest.py-->line:89] - INFO: 用例：投资人正常登录，执行未通过
2020-03-03 17:11:02,631 - [test_invest.py-->line:89] - INFO: 用例：投资人正常投资，执行未通过
2020-03-03 17:11:02,757 - [test_invest.py-->line:89] - INFO: 用例：投资人id为空，执行未通过
2020-03-03 17:11:02,891 - [test_invest.py-->line:89] - INFO: 用例：标id为空，执行未通过
2020-03-03 17:11:03,057 - [test_invest.py-->line:89] - INFO: 用例：投资金额为空，执行未通过
2020-03-03 17:11:03,193 - [test_invest.py-->line:89] - INFO: 用例：投资金额大于项目可投金额，执行未通过
2020-03-03 17:11:03,371 - [test_invest.py-->line:89] - INFO: 用例：投资金额等于项目可投金额，执行未通过
2020-03-03 17:11:03,544 - [test_loans.py-->line:57] - INFO: 用例：获取成功:不填参数，执行未通过
2020-03-03 17:11:03,681 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面参数，执行未通过
2020-03-03 17:11:03,813 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面内容数，执行未通过
2020-03-03 17:11:03,961 - [test_loans.py-->line:57] - INFO: 用例：获取成功:都填参数，执行未通过
2020-03-03 17:11:04,275 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-整数，执行未通过
2020-03-03 17:11:04,541 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-1位小数，执行未通过
2020-03-03 17:11:04,816 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-2位小数，执行未通过
2020-03-03 17:11:05,103 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-50万，执行未通过
2020-03-03 17:11:05,229 - [test_rechage.py-->line:100] - INFO: 用例：会员id为空，执行未通过
2020-03-03 17:11:05,360 - [test_rechage.py-->line:100] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-03-03 17:11:05,518 - [test_rechage.py-->line:95] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-03 17:11:05,519 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:11:05,657 - [test_rechage.py-->line:100] - INFO: 用例：会员id为小数，执行未通过
2020-03-03 17:11:05,791 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为0，执行未通过
2020-03-03 17:11:05,791 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:11:05,934 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为负数，执行未通过
2020-03-03 17:11:05,934 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 17:11:06,097 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为空，执行未通过
2020-03-03 17:11:06,097 - [test_rechage.py-->line:96] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 17:11:06,236 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-03-03 17:11:06,236 - [test_rechage.py-->line:96] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-03 17:11:06,368 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-03-03 17:11:06,368 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 17:11:06,503 - [test_rechage.py-->line:100] - INFO: 用例：充值金额-非数字，执行未通过
2020-03-03 17:11:06,666 - [test_register.py-->line:97] - ERROR: 用例：登录成功，执行未通过
2020-03-03 17:11:06,667 - [test_register.py-->line:98] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-03 17:11:06,808 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-03-03 17:11:06,809 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 17:11:06,936 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-03-03 17:11:06,936 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 17:11:07,090 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-03-03 17:11:07,228 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-03-03 17:11:07,361 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-03-03 17:11:07,603 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-03-03 17:11:07,821 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-03-03 17:11:07,954 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-03-03 17:11:08,088 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-03-03 17:11:08,222 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-03-03 17:11:08,357 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-03-03 17:11:08,509 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-03-03 17:11:08,686 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-03-03 17:11:08,841 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-03-03 17:11:08,976 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-03-03 17:11:09,110 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-03-03 17:11:09,248 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-03-03 17:11:09,464 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-03-03 17:11:09,705 - [test_withdraw.py-->line:138] - INFO: 用例：登录成功，执行未通过
2020-03-03 17:11:09,978 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-整数，执行未通过
2020-03-03 17:11:10,230 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-1位小数，执行未通过
2020-03-03 17:11:10,503 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-2位小数，执行未通过
2020-03-03 17:11:10,747 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-50万，执行未通过
2020-03-03 17:11:10,898 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为空，执行未通过
2020-03-03 17:11:11,036 - [test_withdraw.py-->line:138] - INFO: 用例：会员id不存在，执行未通过
2020-03-03 17:11:11,193 - [test_withdraw.py-->line:133] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-03 17:11:11,193 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:11:11,342 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为小数，执行未通过
2020-03-03 17:11:11,496 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为0，执行未通过
2020-03-03 17:11:11,496 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:11:11,679 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为负数，执行未通过
2020-03-03 17:11:11,680 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 17:11:11,815 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为空，执行未通过
2020-03-03 17:11:11,815 - [test_withdraw.py-->line:134] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-03-03 17:11:11,966 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-03-03 17:11:11,966 - [test_withdraw.py-->line:134] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-03 17:11:12,118 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-03-03 17:11:12,118 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 17:11:12,266 - [test_withdraw.py-->line:138] - INFO: 用例：提现金额-非数字，执行未通过
2020-03-03 17:12:46,662 - [test_add.py-->line:76] - INFO: 用例：加标成功，执行未通过
2020-03-03 17:12:46,796 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-03-03 17:12:46,945 - [test_add.py-->line:76] - INFO: 用例：加标失败—标题为空，执行未通过
2020-03-03 17:12:47,080 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为空，执行未通过
2020-03-03 17:12:47,211 - [test_add.py-->line:76] - INFO: 用例：加标失败—年利率为空，执行未通过
2020-03-03 17:12:47,346 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限为空，执行未通过
2020-03-03 17:12:47,478 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限类型为空，执行未通过
2020-03-03 17:12:47,621 - [test_add.py-->line:76] - INFO: 用例：加标失败—竞标天数为空，执行未通过
2020-03-03 17:12:47,755 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id不是当前登录用户，执行未通过
2020-03-03 17:12:47,915 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为负数，执行未通过
2020-03-03 17:12:48,072 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为小数，执行未通过
2020-03-03 17:12:48,366 - [test_adiut.py-->line:120] - INFO: 用例：审核通过，执行未通过
2020-03-03 17:12:48,591 - [test_adiut.py-->line:120] - INFO: 用例：审核不通过，执行未通过
2020-03-03 17:12:48,777 - [test_adiut.py-->line:120] - INFO: 用例：项目不待审核状态，执行未通过
2020-03-03 17:12:48,948 - [test_adiut.py-->line:120] - INFO: 用例：参数approved_or_not为空，执行未通过
2020-03-03 17:12:49,119 - [test_adiut.py-->line:120] - INFO: 用例：项目id为空，执行未通过
2020-03-03 17:12:49,292 - [test_adiut.py-->line:120] - INFO: 用例：项目id不存在，执行未通过
2020-03-03 17:12:49,482 - [test_info.py-->line:79] - INFO: 用例：正常获取用户信息，执行未通过
2020-03-03 17:12:49,613 - [test_info.py-->line:79] - INFO: 用例：不存在的用户id，执行未通过
2020-03-03 17:12:49,770 - [test_invest.py-->line:89] - INFO: 用例：管理员正常登录，执行未通过
2020-03-03 17:12:49,910 - [test_invest.py-->line:89] - INFO: 用例：管理员加标，执行未通过
2020-03-03 17:12:50,041 - [test_invest.py-->line:89] - INFO: 用例：管理员审核，执行未通过
2020-03-03 17:12:50,179 - [test_invest.py-->line:89] - INFO: 用例：投资人正常登录，执行未通过
2020-03-03 17:12:50,326 - [test_invest.py-->line:89] - INFO: 用例：投资人正常投资，执行未通过
2020-03-03 17:12:50,470 - [test_invest.py-->line:89] - INFO: 用例：投资人id为空，执行未通过
2020-03-03 17:12:50,594 - [test_invest.py-->line:89] - INFO: 用例：标id为空，执行未通过
2020-03-03 17:12:50,726 - [test_invest.py-->line:89] - INFO: 用例：投资金额为空，执行未通过
2020-03-03 17:12:50,899 - [test_invest.py-->line:89] - INFO: 用例：投资金额大于项目可投金额，执行未通过
2020-03-03 17:12:51,083 - [test_invest.py-->line:89] - INFO: 用例：投资金额等于项目可投金额，执行未通过
2020-03-03 17:12:51,275 - [test_loans.py-->line:57] - INFO: 用例：获取成功:不填参数，执行未通过
2020-03-03 17:12:51,431 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面参数，执行未通过
2020-03-03 17:12:51,568 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面内容数，执行未通过
2020-03-03 17:12:51,709 - [test_loans.py-->line:57] - INFO: 用例：获取成功:都填参数，执行未通过
2020-03-03 17:12:52,019 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-整数，执行未通过
2020-03-03 17:12:52,285 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-1位小数，执行未通过
2020-03-03 17:12:52,534 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-2位小数，执行未通过
2020-03-03 17:12:52,793 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-50万，执行未通过
2020-03-03 17:12:52,925 - [test_rechage.py-->line:100] - INFO: 用例：会员id为空，执行未通过
2020-03-03 17:12:53,062 - [test_rechage.py-->line:100] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-03-03 17:12:53,211 - [test_rechage.py-->line:95] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-03 17:12:53,211 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:12:53,358 - [test_rechage.py-->line:100] - INFO: 用例：会员id为小数，执行未通过
2020-03-03 17:12:53,502 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为0，执行未通过
2020-03-03 17:12:53,502 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:12:53,647 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为负数，执行未通过
2020-03-03 17:12:53,647 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 17:12:53,810 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为空，执行未通过
2020-03-03 17:12:53,810 - [test_rechage.py-->line:96] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 17:12:53,959 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-03-03 17:12:53,960 - [test_rechage.py-->line:96] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-03 17:12:54,095 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-03-03 17:12:54,095 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 17:12:54,236 - [test_rechage.py-->line:100] - INFO: 用例：充值金额-非数字，执行未通过
2020-03-03 17:12:54,392 - [test_register.py-->line:97] - ERROR: 用例：登录成功，执行未通过
2020-03-03 17:12:54,392 - [test_register.py-->line:98] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-03 17:12:54,534 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-03-03 17:12:54,534 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 17:12:54,663 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-03-03 17:12:54,663 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 17:12:54,813 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-03-03 17:12:54,947 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-03-03 17:12:55,076 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-03-03 17:12:55,309 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-03-03 17:12:55,513 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-03-03 17:12:55,647 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-03-03 17:12:55,795 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-03-03 17:12:55,944 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-03-03 17:12:56,092 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-03-03 17:12:56,234 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-03-03 17:12:56,403 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-03-03 17:12:56,537 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-03-03 17:12:56,681 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-03-03 17:12:56,819 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-03-03 17:12:56,979 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-03-03 17:12:57,179 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-03-03 17:12:57,395 - [test_update.py-->line:76] - ERROR: 用例：正常修改昵称—用户名长度10位，执行未通过
2020-03-03 17:12:57,395 - [test_update.py-->line:77] - ERROR: 0 != 1004
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_update.py", line 70, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1004
2020-03-03 17:12:57,547 - [test_update.py-->line:76] - ERROR: 用例：用户id为空，执行未通过
2020-03-03 17:12:57,547 - [test_update.py-->line:77] - ERROR: 1 != 1004
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_update.py", line 70, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1004
2020-03-03 17:12:57,688 - [test_update.py-->line:76] - ERROR: 用例：修改的用户名为空，执行未通过
2020-03-03 17:12:57,688 - [test_update.py-->line:77] - ERROR: 1 != 1004
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_update.py", line 70, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1004
2020-03-03 17:12:57,836 - [test_update.py-->line:76] - ERROR: 用例：用户名长度11位，执行未通过
2020-03-03 17:12:57,836 - [test_update.py-->line:77] - ERROR: 1001 != 1004
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_update.py", line 70, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1001 != 1004
2020-03-03 17:12:57,975 - [test_update.py-->line:76] - ERROR: 用例：用户id非数字类型，执行未通过
2020-03-03 17:12:57,975 - [test_update.py-->line:77] - ERROR: 1001 != 1004
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_update.py", line 70, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1001 != 1004
2020-03-03 17:12:58,160 - [test_withdraw.py-->line:138] - INFO: 用例：登录成功，执行未通过
2020-03-03 17:12:58,460 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-整数，执行未通过
2020-03-03 17:12:58,734 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-1位小数，执行未通过
2020-03-03 17:12:59,008 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-2位小数，执行未通过
2020-03-03 17:12:59,280 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-50万，执行未通过
2020-03-03 17:12:59,414 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为空，执行未通过
2020-03-03 17:12:59,581 - [test_withdraw.py-->line:138] - INFO: 用例：会员id不存在，执行未通过
2020-03-03 17:12:59,750 - [test_withdraw.py-->line:133] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-03 17:12:59,750 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:12:59,895 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为小数，执行未通过
2020-03-03 17:13:00,046 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为0，执行未通过
2020-03-03 17:13:00,046 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:13:00,199 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为负数，执行未通过
2020-03-03 17:13:00,200 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 17:13:00,335 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为空，执行未通过
2020-03-03 17:13:00,335 - [test_withdraw.py-->line:134] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-03-03 17:13:00,489 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-03-03 17:13:00,489 - [test_withdraw.py-->line:134] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-03 17:13:00,629 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-03-03 17:13:00,629 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 17:13:00,777 - [test_withdraw.py-->line:138] - INFO: 用例：提现金额-非数字，执行未通过
2020-03-03 17:18:20,877 - [test_add.py-->line:76] - INFO: 用例：加标成功，执行未通过
2020-03-03 17:18:21,032 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-03-03 17:18:21,158 - [test_add.py-->line:76] - INFO: 用例：加标失败—标题为空，执行未通过
2020-03-03 17:18:21,305 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为空，执行未通过
2020-03-03 17:18:21,433 - [test_add.py-->line:76] - INFO: 用例：加标失败—年利率为空，执行未通过
2020-03-03 17:18:21,560 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限为空，执行未通过
2020-03-03 17:18:21,689 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限类型为空，执行未通过
2020-03-03 17:18:21,823 - [test_add.py-->line:76] - INFO: 用例：加标失败—竞标天数为空，执行未通过
2020-03-03 17:18:21,953 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id不是当前登录用户，执行未通过
2020-03-03 17:18:22,088 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为负数，执行未通过
2020-03-03 17:18:22,243 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为小数，执行未通过
2020-03-03 17:18:22,536 - [test_adiut.py-->line:120] - INFO: 用例：审核通过，执行未通过
2020-03-03 17:18:22,763 - [test_adiut.py-->line:120] - INFO: 用例：审核不通过，执行未通过
2020-03-03 17:18:22,932 - [test_adiut.py-->line:120] - INFO: 用例：项目不待审核状态，执行未通过
2020-03-03 17:18:23,100 - [test_adiut.py-->line:120] - INFO: 用例：参数approved_or_not为空，执行未通过
2020-03-03 17:18:23,267 - [test_adiut.py-->line:120] - INFO: 用例：项目id为空，执行未通过
2020-03-03 17:18:23,439 - [test_adiut.py-->line:120] - INFO: 用例：项目id不存在，执行未通过
2020-03-03 17:18:23,637 - [test_info.py-->line:79] - INFO: 用例：正常获取用户信息，执行未通过
2020-03-03 17:18:23,771 - [test_info.py-->line:79] - INFO: 用例：不存在的用户id，执行未通过
2020-03-03 17:18:23,980 - [test_invest.py-->line:89] - INFO: 用例：管理员正常登录，执行未通过
2020-03-03 17:18:24,120 - [test_invest.py-->line:89] - INFO: 用例：管理员加标，执行未通过
2020-03-03 17:18:24,272 - [test_invest.py-->line:89] - INFO: 用例：管理员审核，执行未通过
2020-03-03 17:18:24,436 - [test_invest.py-->line:89] - INFO: 用例：投资人正常登录，执行未通过
2020-03-03 17:18:24,606 - [test_invest.py-->line:89] - INFO: 用例：投资人正常投资，执行未通过
2020-03-03 17:18:24,749 - [test_invest.py-->line:89] - INFO: 用例：投资人id为空，执行未通过
2020-03-03 17:18:24,895 - [test_invest.py-->line:89] - INFO: 用例：标id为空，执行未通过
2020-03-03 17:18:25,034 - [test_invest.py-->line:89] - INFO: 用例：投资金额为空，执行未通过
2020-03-03 17:18:25,209 - [test_invest.py-->line:89] - INFO: 用例：投资金额大于项目可投金额，执行未通过
2020-03-03 17:18:25,376 - [test_invest.py-->line:89] - INFO: 用例：投资金额等于项目可投金额，执行未通过
2020-03-03 17:18:25,554 - [test_loans.py-->line:57] - INFO: 用例：获取成功:不填参数，执行未通过
2020-03-03 17:18:25,714 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面参数，执行未通过
2020-03-03 17:18:25,904 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面内容数，执行未通过
2020-03-03 17:18:26,056 - [test_loans.py-->line:57] - INFO: 用例：获取成功:都填参数，执行未通过
2020-03-03 17:18:26,412 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-整数，执行未通过
2020-03-03 17:18:26,664 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-1位小数，执行未通过
2020-03-03 17:18:26,912 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-2位小数，执行未通过
2020-03-03 17:18:27,168 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-50万，执行未通过
2020-03-03 17:18:27,304 - [test_rechage.py-->line:100] - INFO: 用例：会员id为空，执行未通过
2020-03-03 17:18:27,454 - [test_rechage.py-->line:100] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-03-03 17:18:27,658 - [test_rechage.py-->line:95] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-03 17:18:27,658 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:18:27,806 - [test_rechage.py-->line:100] - INFO: 用例：会员id为小数，执行未通过
2020-03-03 17:18:27,974 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为0，执行未通过
2020-03-03 17:18:27,974 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:18:28,114 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为负数，执行未通过
2020-03-03 17:18:28,114 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 17:18:28,290 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为空，执行未通过
2020-03-03 17:18:28,290 - [test_rechage.py-->line:96] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 17:18:28,432 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-03-03 17:18:28,432 - [test_rechage.py-->line:96] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-03 17:18:28,570 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-03-03 17:18:28,570 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 17:18:28,708 - [test_rechage.py-->line:100] - INFO: 用例：充值金额-非数字，执行未通过
2020-03-03 17:18:28,867 - [test_register.py-->line:97] - ERROR: 用例：登录成功，执行未通过
2020-03-03 17:18:28,867 - [test_register.py-->line:98] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-03 17:18:29,012 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-03-03 17:18:29,012 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 17:18:29,151 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-03-03 17:18:29,151 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 17:18:29,298 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-03-03 17:18:29,449 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-03-03 17:18:29,576 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-03-03 17:18:29,829 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-03-03 17:18:30,069 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-03-03 17:18:30,208 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-03-03 17:18:30,355 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-03-03 17:18:30,489 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-03-03 17:18:30,625 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-03-03 17:18:30,790 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-03-03 17:18:30,980 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-03-03 17:18:31,113 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-03-03 17:18:31,253 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-03-03 17:18:31,389 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-03-03 17:18:31,523 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-03-03 17:18:31,758 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-03-03 17:18:31,941 - [test_update.py-->line:77] - ERROR: 用例：正常修改昵称—用户名长度10位，执行未通过
2020-03-03 17:18:31,941 - [test_update.py-->line:78] - ERROR: 0 != 1004
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_update.py", line 71, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1004
2020-03-03 17:18:32,081 - [test_update.py-->line:77] - ERROR: 用例：用户id为空，执行未通过
2020-03-03 17:18:32,082 - [test_update.py-->line:78] - ERROR: 1 != 1004
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_update.py", line 71, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1004
2020-03-03 17:18:32,216 - [test_update.py-->line:77] - ERROR: 用例：修改的用户名为空，执行未通过
2020-03-03 17:18:32,216 - [test_update.py-->line:78] - ERROR: 1 != 1004
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_update.py", line 71, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1004
2020-03-03 17:18:32,357 - [test_update.py-->line:77] - ERROR: 用例：用户名长度11位，执行未通过
2020-03-03 17:18:32,357 - [test_update.py-->line:78] - ERROR: 1001 != 1004
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_update.py", line 71, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1001 != 1004
2020-03-03 17:18:32,495 - [test_update.py-->line:77] - ERROR: 用例：用户id非数字类型，执行未通过
2020-03-03 17:18:32,495 - [test_update.py-->line:78] - ERROR: 1001 != 1004
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_update.py", line 71, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1001 != 1004
2020-03-03 17:18:32,672 - [test_withdraw.py-->line:138] - INFO: 用例：登录成功，执行未通过
2020-03-03 17:18:32,911 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-整数，执行未通过
2020-03-03 17:18:33,155 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-1位小数，执行未通过
2020-03-03 17:18:33,410 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-2位小数，执行未通过
2020-03-03 17:18:33,659 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-50万，执行未通过
2020-03-03 17:18:33,793 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为空，执行未通过
2020-03-03 17:18:33,961 - [test_withdraw.py-->line:138] - INFO: 用例：会员id不存在，执行未通过
2020-03-03 17:18:34,106 - [test_withdraw.py-->line:133] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-03 17:18:34,106 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:18:34,245 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为小数，执行未通过
2020-03-03 17:18:34,389 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为0，执行未通过
2020-03-03 17:18:34,389 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:18:34,528 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为负数，执行未通过
2020-03-03 17:18:34,528 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 17:18:34,666 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为空，执行未通过
2020-03-03 17:18:34,666 - [test_withdraw.py-->line:134] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-03-03 17:18:34,804 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-03-03 17:18:34,804 - [test_withdraw.py-->line:134] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-03 17:18:34,936 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-03-03 17:18:34,936 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 17:18:35,087 - [test_withdraw.py-->line:138] - INFO: 用例：提现金额-非数字，执行未通过
2020-03-03 17:27:05,541 - [test_add.py-->line:76] - INFO: 用例：加标成功，执行未通过
2020-03-03 17:27:05,684 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-03-03 17:27:05,813 - [test_add.py-->line:76] - INFO: 用例：加标失败—标题为空，执行未通过
2020-03-03 17:27:05,953 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为空，执行未通过
2020-03-03 17:27:06,122 - [test_add.py-->line:76] - INFO: 用例：加标失败—年利率为空，执行未通过
2020-03-03 17:27:06,272 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限为空，执行未通过
2020-03-03 17:27:06,414 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限类型为空，执行未通过
2020-03-03 17:27:06,566 - [test_add.py-->line:76] - INFO: 用例：加标失败—竞标天数为空，执行未通过
2020-03-03 17:27:06,705 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id不是当前登录用户，执行未通过
2020-03-03 17:27:06,856 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为负数，执行未通过
2020-03-03 17:27:07,015 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为小数，执行未通过
2020-03-03 17:27:07,277 - [test_adiut.py-->line:120] - INFO: 用例：审核通过，执行未通过
2020-03-03 17:27:07,483 - [test_adiut.py-->line:120] - INFO: 用例：审核不通过，执行未通过
2020-03-03 17:27:07,650 - [test_adiut.py-->line:120] - INFO: 用例：项目不待审核状态，执行未通过
2020-03-03 17:27:07,827 - [test_adiut.py-->line:120] - INFO: 用例：参数approved_or_not为空，执行未通过
2020-03-03 17:27:08,015 - [test_adiut.py-->line:120] - INFO: 用例：项目id为空，执行未通过
2020-03-03 17:27:08,181 - [test_adiut.py-->line:120] - INFO: 用例：项目id不存在，执行未通过
2020-03-03 17:27:08,361 - [test_info.py-->line:79] - INFO: 用例：正常获取用户信息，执行未通过
2020-03-03 17:27:08,493 - [test_info.py-->line:79] - INFO: 用例：不存在的用户id，执行未通过
2020-03-03 17:27:08,665 - [test_invest.py-->line:89] - INFO: 用例：管理员正常登录，执行未通过
2020-03-03 17:27:08,816 - [test_invest.py-->line:89] - INFO: 用例：管理员加标，执行未通过
2020-03-03 17:27:09,161 - [test_invest.py-->line:89] - INFO: 用例：管理员审核，执行未通过
2020-03-03 17:27:09,304 - [test_invest.py-->line:89] - INFO: 用例：投资人正常登录，执行未通过
2020-03-03 17:27:09,452 - [test_invest.py-->line:89] - INFO: 用例：投资人正常投资，执行未通过
2020-03-03 17:27:09,594 - [test_invest.py-->line:89] - INFO: 用例：投资人id为空，执行未通过
2020-03-03 17:27:09,726 - [test_invest.py-->line:89] - INFO: 用例：标id为空，执行未通过
2020-03-03 17:27:09,889 - [test_invest.py-->line:89] - INFO: 用例：投资金额为空，执行未通过
2020-03-03 17:27:10,024 - [test_invest.py-->line:89] - INFO: 用例：投资金额大于项目可投金额，执行未通过
2020-03-03 17:27:10,184 - [test_invest.py-->line:89] - INFO: 用例：投资金额等于项目可投金额，执行未通过
2020-03-03 17:27:10,341 - [test_loans.py-->line:57] - INFO: 用例：获取成功:不填参数，执行未通过
2020-03-03 17:27:10,474 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面参数，执行未通过
2020-03-03 17:27:10,609 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面内容数，执行未通过
2020-03-03 17:27:10,739 - [test_loans.py-->line:57] - INFO: 用例：获取成功:都填参数，执行未通过
2020-03-03 17:27:11,086 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-整数，执行未通过
2020-03-03 17:27:11,356 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-1位小数，执行未通过
2020-03-03 17:27:11,631 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-2位小数，执行未通过
2020-03-03 17:27:11,903 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-50万，执行未通过
2020-03-03 17:27:12,035 - [test_rechage.py-->line:100] - INFO: 用例：会员id为空，执行未通过
2020-03-03 17:27:12,177 - [test_rechage.py-->line:100] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-03-03 17:27:12,322 - [test_rechage.py-->line:95] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-03 17:27:12,322 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:27:12,473 - [test_rechage.py-->line:100] - INFO: 用例：会员id为小数，执行未通过
2020-03-03 17:27:12,633 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为0，执行未通过
2020-03-03 17:27:12,633 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:27:12,770 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为负数，执行未通过
2020-03-03 17:27:12,770 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 17:27:12,940 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为空，执行未通过
2020-03-03 17:27:12,940 - [test_rechage.py-->line:96] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 17:27:13,085 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-03-03 17:27:13,085 - [test_rechage.py-->line:96] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-03 17:27:13,234 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-03-03 17:27:13,234 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 17:27:13,370 - [test_rechage.py-->line:100] - INFO: 用例：充值金额-非数字，执行未通过
2020-03-03 17:27:13,783 - [test_register.py-->line:97] - ERROR: 用例：登录成功，执行未通过
2020-03-03 17:27:13,783 - [test_register.py-->line:98] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-03 17:27:13,917 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-03-03 17:27:13,917 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 17:27:14,069 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-03-03 17:27:14,069 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 17:27:14,225 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-03-03 17:27:14,392 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-03-03 17:27:14,537 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-03-03 17:27:14,782 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-03-03 17:27:14,993 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-03-03 17:27:15,137 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-03-03 17:27:15,273 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-03-03 17:27:15,415 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-03-03 17:27:15,572 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-03-03 17:27:15,717 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-03-03 17:27:15,888 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-03-03 17:27:16,046 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-03-03 17:27:16,190 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-03-03 17:27:16,322 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-03-03 17:27:16,460 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-03-03 17:27:16,664 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-03-03 17:27:16,877 - [test_update.py-->line:77] - ERROR: 用例：正常修改昵称—用户名长度10位，执行未通过
2020-03-03 17:27:16,877 - [test_update.py-->line:78] - ERROR: 0 != 1004
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_update.py", line 71, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1004
2020-03-03 17:27:17,016 - [test_update.py-->line:77] - ERROR: 用例：用户id为空，执行未通过
2020-03-03 17:27:17,016 - [test_update.py-->line:78] - ERROR: 1 != 1004
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_update.py", line 71, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1004
2020-03-03 17:27:17,162 - [test_update.py-->line:77] - ERROR: 用例：修改的用户名为空，执行未通过
2020-03-03 17:27:17,162 - [test_update.py-->line:78] - ERROR: 1 != 1004
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_update.py", line 71, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 1004
2020-03-03 17:27:17,315 - [test_update.py-->line:77] - ERROR: 用例：用户名长度11位，执行未通过
2020-03-03 17:27:17,315 - [test_update.py-->line:78] - ERROR: 1001 != 1004
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_update.py", line 71, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1001 != 1004
2020-03-03 17:27:17,460 - [test_update.py-->line:77] - ERROR: 用例：用户id非数字类型，执行未通过
2020-03-03 17:27:17,460 - [test_update.py-->line:78] - ERROR: 1001 != 1004
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_update.py", line 71, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1001 != 1004
2020-03-03 17:27:17,614 - [test_withdraw.py-->line:138] - INFO: 用例：登录成功，执行未通过
2020-03-03 17:27:17,859 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-整数，执行未通过
2020-03-03 17:27:18,115 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-1位小数，执行未通过
2020-03-03 17:27:18,366 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-2位小数，执行未通过
2020-03-03 17:27:18,630 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-50万，执行未通过
2020-03-03 17:27:18,801 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为空，执行未通过
2020-03-03 17:27:18,931 - [test_withdraw.py-->line:138] - INFO: 用例：会员id不存在，执行未通过
2020-03-03 17:27:19,098 - [test_withdraw.py-->line:133] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-03 17:27:19,098 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:27:19,241 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为小数，执行未通过
2020-03-03 17:27:19,380 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为0，执行未通过
2020-03-03 17:27:19,380 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:27:19,517 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为负数，执行未通过
2020-03-03 17:27:19,517 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 17:27:19,660 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为空，执行未通过
2020-03-03 17:27:19,660 - [test_withdraw.py-->line:134] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-03-03 17:27:19,792 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-03-03 17:27:19,792 - [test_withdraw.py-->line:134] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-03 17:27:19,924 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-03-03 17:27:19,924 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 17:27:20,068 - [test_withdraw.py-->line:138] - INFO: 用例：提现金额-非数字，执行未通过
2020-03-03 17:28:29,371 - [test_add.py-->line:76] - INFO: 用例：加标成功，执行未通过
2020-03-03 17:28:29,508 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-03-03 17:28:29,649 - [test_add.py-->line:76] - INFO: 用例：加标失败—标题为空，执行未通过
2020-03-03 17:28:29,789 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为空，执行未通过
2020-03-03 17:28:29,931 - [test_add.py-->line:76] - INFO: 用例：加标失败—年利率为空，执行未通过
2020-03-03 17:28:30,070 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限为空，执行未通过
2020-03-03 17:28:30,215 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限类型为空，执行未通过
2020-03-03 17:28:30,352 - [test_add.py-->line:76] - INFO: 用例：加标失败—竞标天数为空，执行未通过
2020-03-03 17:28:30,495 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id不是当前登录用户，执行未通过
2020-03-03 17:28:30,682 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为负数，执行未通过
2020-03-03 17:28:30,840 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为小数，执行未通过
2020-03-03 17:28:31,142 - [test_adiut.py-->line:120] - INFO: 用例：审核通过，执行未通过
2020-03-03 17:28:31,385 - [test_adiut.py-->line:120] - INFO: 用例：审核不通过，执行未通过
2020-03-03 17:28:31,573 - [test_adiut.py-->line:120] - INFO: 用例：项目不待审核状态，执行未通过
2020-03-03 17:28:31,744 - [test_adiut.py-->line:120] - INFO: 用例：参数approved_or_not为空，执行未通过
2020-03-03 17:28:31,933 - [test_adiut.py-->line:120] - INFO: 用例：项目id为空，执行未通过
2020-03-03 17:28:32,112 - [test_adiut.py-->line:120] - INFO: 用例：项目id不存在，执行未通过
2020-03-03 17:28:32,300 - [test_info.py-->line:79] - INFO: 用例：正常获取用户信息，执行未通过
2020-03-03 17:28:32,450 - [test_info.py-->line:79] - INFO: 用例：不存在的用户id，执行未通过
2020-03-03 17:28:32,609 - [test_invest.py-->line:89] - INFO: 用例：管理员正常登录，执行未通过
2020-03-03 17:28:32,747 - [test_invest.py-->line:89] - INFO: 用例：管理员加标，执行未通过
2020-03-03 17:28:32,884 - [test_invest.py-->line:89] - INFO: 用例：管理员审核，执行未通过
2020-03-03 17:28:33,024 - [test_invest.py-->line:89] - INFO: 用例：投资人正常登录，执行未通过
2020-03-03 17:28:33,181 - [test_invest.py-->line:89] - INFO: 用例：投资人正常投资，执行未通过
2020-03-03 17:28:33,311 - [test_invest.py-->line:89] - INFO: 用例：投资人id为空，执行未通过
2020-03-03 17:28:33,440 - [test_invest.py-->line:89] - INFO: 用例：标id为空，执行未通过
2020-03-03 17:28:33,602 - [test_invest.py-->line:89] - INFO: 用例：投资金额为空，执行未通过
2020-03-03 17:28:33,734 - [test_invest.py-->line:89] - INFO: 用例：投资金额大于项目可投金额，执行未通过
2020-03-03 17:28:33,908 - [test_invest.py-->line:89] - INFO: 用例：投资金额等于项目可投金额，执行未通过
2020-03-03 17:28:34,076 - [test_loans.py-->line:57] - INFO: 用例：获取成功:不填参数，执行未通过
2020-03-03 17:28:34,217 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面参数，执行未通过
2020-03-03 17:28:34,352 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面内容数，执行未通过
2020-03-03 17:28:34,491 - [test_loans.py-->line:57] - INFO: 用例：获取成功:都填参数，执行未通过
2020-03-03 17:28:34,779 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-整数，执行未通过
2020-03-03 17:28:35,027 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-1位小数，执行未通过
2020-03-03 17:28:35,263 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-2位小数，执行未通过
2020-03-03 17:28:35,494 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-50万，执行未通过
2020-03-03 17:28:35,624 - [test_rechage.py-->line:100] - INFO: 用例：会员id为空，执行未通过
2020-03-03 17:28:35,770 - [test_rechage.py-->line:100] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-03-03 17:28:35,929 - [test_rechage.py-->line:95] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-03 17:28:35,929 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:28:36,069 - [test_rechage.py-->line:100] - INFO: 用例：会员id为小数，执行未通过
2020-03-03 17:28:36,207 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为0，执行未通过
2020-03-03 17:28:36,207 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:28:36,352 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为负数，执行未通过
2020-03-03 17:28:36,352 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 17:28:36,517 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为空，执行未通过
2020-03-03 17:28:36,517 - [test_rechage.py-->line:96] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 17:28:36,653 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-03-03 17:28:36,653 - [test_rechage.py-->line:96] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-03 17:28:36,784 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-03-03 17:28:36,784 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-03 17:28:36,916 - [test_rechage.py-->line:100] - INFO: 用例：充值金额-非数字，执行未通过
2020-03-03 17:28:37,069 - [test_register.py-->line:97] - ERROR: 用例：登录成功，执行未通过
2020-03-03 17:28:37,069 - [test_register.py-->line:98] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-03 17:28:37,208 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-03-03 17:28:37,208 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 17:28:37,338 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-03-03 17:28:37,338 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-03 17:28:37,502 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-03-03 17:28:37,645 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-03-03 17:28:37,787 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-03-03 17:28:38,027 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-03-03 17:28:38,253 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-03-03 17:28:38,392 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-03-03 17:28:38,531 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-03-03 17:28:38,665 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-03-03 17:28:38,801 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-03-03 17:28:38,949 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-03-03 17:28:39,118 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-03-03 17:28:39,253 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-03-03 17:28:39,403 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-03-03 17:28:39,538 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-03-03 17:28:39,677 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-03-03 17:28:39,901 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-03-03 17:28:40,080 - [test_update.py-->line:82] - INFO: 用例：正常修改昵称—用户名长度10位，执行未通过
2020-03-03 17:28:40,216 - [test_update.py-->line:77] - ERROR: 用例：修改的用户名为空，执行未通过
2020-03-03 17:28:40,216 - [test_update.py-->line:78] - ERROR: '用户不能为空' != '用户名为空'
- 用户不能为空
?   ^^
+ 用户名为空
?   ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_update.py", line 72, in test_update
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '用户不能为空' != '用户名为空'
- 用户不能为空
?   ^^
+ 用户名为空
?   ^

2020-03-03 17:28:40,347 - [test_update.py-->line:77] - ERROR: 用例：用户名长度11位，执行未通过
2020-03-03 17:28:40,347 - [test_update.py-->line:78] - ERROR: 1001 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_update.py", line 71, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1001 != 2
2020-03-03 17:28:40,508 - [test_update.py-->line:77] - ERROR: 用例：用户id非数字类型，执行未通过
2020-03-03 17:28:40,508 - [test_update.py-->line:78] - ERROR: 1001 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_update.py", line 71, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1001 != 0
2020-03-03 17:28:40,702 - [test_withdraw.py-->line:138] - INFO: 用例：登录成功，执行未通过
2020-03-03 17:28:40,956 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-整数，执行未通过
2020-03-03 17:28:41,206 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-1位小数，执行未通过
2020-03-03 17:28:41,465 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-2位小数，执行未通过
2020-03-03 17:28:41,712 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-50万，执行未通过
2020-03-03 17:28:41,849 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为空，执行未通过
2020-03-03 17:28:42,017 - [test_withdraw.py-->line:138] - INFO: 用例：会员id不存在，执行未通过
2020-03-03 17:28:42,162 - [test_withdraw.py-->line:133] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-03 17:28:42,162 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:28:42,314 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为小数，执行未通过
2020-03-03 17:28:42,458 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为0，执行未通过
2020-03-03 17:28:42,458 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-03 17:28:42,609 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为负数，执行未通过
2020-03-03 17:28:42,609 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 17:28:42,755 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为空，执行未通过
2020-03-03 17:28:42,755 - [test_withdraw.py-->line:134] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-03-03 17:28:42,905 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-03-03 17:28:42,905 - [test_withdraw.py-->line:134] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-03 17:28:43,044 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-03-03 17:28:43,044 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-03 17:28:43,202 - [test_withdraw.py-->line:138] - INFO: 用例：提现金额-非数字，执行未通过
2020-03-03 17:47:08,813 - [test_main_stream.py-->line:86] - ERROR: 用例：管理员注册，执行未通过
2020-03-03 17:47:08,813 - [test_main_stream.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_main_stream.py", line 80, in test_main_stream
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-03 17:47:08,978 - [test_main_stream.py-->line:86] - ERROR: 用例：用户注册，执行未通过
2020-03-03 17:47:08,978 - [test_main_stream.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_main_stream.py", line 80, in test_main_stream
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-03 17:48:07,087 - [test_main_stream.py-->line:88] - ERROR: 用例：管理员注册，执行未通过
2020-03-03 17:48:07,087 - [test_main_stream.py-->line:89] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_main_stream.py", line 82, in test_main_stream
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-03 17:48:07,260 - [test_main_stream.py-->line:88] - ERROR: 用例：用户注册，执行未通过
2020-03-03 17:48:07,260 - [test_main_stream.py-->line:89] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_main_stream.py", line 82, in test_main_stream
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-03 17:49:12,695 - [test_main_stream.py-->line:88] - ERROR: 用例：管理员注册，执行未通过
2020-03-03 17:49:12,695 - [test_main_stream.py-->line:89] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_main_stream.py", line 82, in test_main_stream
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-03 17:49:12,845 - [test_main_stream.py-->line:88] - ERROR: 用例：用户注册，执行未通过
2020-03-03 17:49:12,845 - [test_main_stream.py-->line:89] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_main_stream.py", line 82, in test_main_stream
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-03 17:49:59,223 - [test_main_stream.py-->line:89] - ERROR: 用例：管理员注册，执行未通过
2020-03-03 17:49:59,223 - [test_main_stream.py-->line:90] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_main_stream.py", line 83, in test_main_stream
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-03 17:49:59,381 - [test_main_stream.py-->line:89] - ERROR: 用例：用户注册，执行未通过
2020-03-03 17:49:59,381 - [test_main_stream.py-->line:90] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_main_stream.py", line 83, in test_main_stream
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-03-03 17:52:46,543 - [test_main_stream.py-->line:94] - INFO: 用例：管理员注册，执行未通过
2020-03-03 17:52:46,703 - [test_main_stream.py-->line:94] - INFO: 用例：用户注册，执行未通过
2020-03-03 17:59:05,524 - [test_main_stream.py-->line:94] - INFO: 用例：管理员注册，执行未通过
2020-03-03 17:59:05,685 - [test_main_stream.py-->line:94] - INFO: 用例：管理员正常登录，执行未通过
2020-03-03 17:59:05,848 - [test_main_stream.py-->line:94] - INFO: 用例：管理员加标，执行未通过
2020-03-03 17:59:05,990 - [test_main_stream.py-->line:94] - INFO: 用例：管理员审核，执行未通过
2020-03-03 17:59:06,144 - [test_main_stream.py-->line:94] - INFO: 用例：用户注册，执行未通过
2020-03-03 17:59:06,299 - [test_main_stream.py-->line:94] - INFO: 用例：投资人正常登录，执行未通过
2020-03-03 17:59:06,437 - [test_main_stream.py-->line:89] - ERROR: 用例：获取用户信息，执行未通过
2020-03-03 17:59:06,437 - [test_main_stream.py-->line:90] - ERROR: 0 != 1004
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_main_stream.py", line 83, in test_main_stream
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1004
2020-03-03 17:59:06,582 - [test_main_stream.py-->line:94] - INFO: 用例：更改昵称，执行未通过
2020-03-03 17:59:06,743 - [test_main_stream.py-->line:94] - INFO: 用例：充值，执行未通过
2020-03-03 17:59:06,893 - [test_main_stream.py-->line:94] - INFO: 用例：投资人正常投资，执行未通过
2020-03-03 17:59:07,047 - [test_main_stream.py-->line:94] - INFO: 用例：取现，执行未通过
2020-03-03 17:59:07,190 - [test_main_stream.py-->line:94] - INFO: 用例：获取项目列表，执行未通过
2020-03-03 18:00:10,656 - [test_main_stream.py-->line:94] - INFO: 用例：管理员注册，执行未通过
2020-03-03 18:00:10,813 - [test_main_stream.py-->line:94] - INFO: 用例：管理员正常登录，执行未通过
2020-03-03 18:00:10,950 - [test_main_stream.py-->line:94] - INFO: 用例：管理员加标，执行未通过
2020-03-03 18:00:11,089 - [test_main_stream.py-->line:94] - INFO: 用例：管理员审核，执行未通过
2020-03-03 18:00:11,238 - [test_main_stream.py-->line:94] - INFO: 用例：用户注册，执行未通过
2020-03-03 18:00:11,382 - [test_main_stream.py-->line:94] - INFO: 用例：投资人正常登录，执行未通过
2020-03-03 18:00:11,524 - [test_main_stream.py-->line:94] - INFO: 用例：获取用户信息，执行未通过
2020-03-03 18:00:11,681 - [test_main_stream.py-->line:94] - INFO: 用例：更改昵称，执行未通过
2020-03-03 18:00:11,823 - [test_main_stream.py-->line:94] - INFO: 用例：充值，执行未通过
2020-03-03 18:00:11,980 - [test_main_stream.py-->line:94] - INFO: 用例：投资人正常投资，执行未通过
2020-03-03 18:00:12,130 - [test_main_stream.py-->line:94] - INFO: 用例：取现，执行未通过
2020-03-03 18:00:12,315 - [test_main_stream.py-->line:94] - INFO: 用例：获取项目列表，执行未通过
2020-03-04 10:32:35,246 - [test_main_stream.py-->line:94] - INFO: 用例：管理员注册，执行未通过
2020-03-04 10:32:35,443 - [test_main_stream.py-->line:94] - INFO: 用例：管理员正常登录，执行未通过
2020-03-04 10:32:35,625 - [test_main_stream.py-->line:94] - INFO: 用例：管理员加标，执行未通过
2020-03-04 10:32:35,833 - [test_main_stream.py-->line:94] - INFO: 用例：管理员审核，执行未通过
2020-03-04 10:32:36,044 - [test_main_stream.py-->line:94] - INFO: 用例：用户注册，执行未通过
2020-03-04 10:32:36,241 - [test_main_stream.py-->line:94] - INFO: 用例：投资人正常登录，执行未通过
2020-03-04 10:32:36,450 - [test_main_stream.py-->line:94] - INFO: 用例：获取用户信息，执行未通过
2020-03-04 10:32:36,660 - [test_main_stream.py-->line:94] - INFO: 用例：更改昵称，执行未通过
2020-03-04 10:32:36,866 - [test_main_stream.py-->line:94] - INFO: 用例：充值，执行未通过
2020-03-04 10:32:37,081 - [test_main_stream.py-->line:94] - INFO: 用例：投资人正常投资，执行未通过
2020-03-04 10:32:37,271 - [test_main_stream.py-->line:94] - INFO: 用例：取现，执行未通过
2020-03-04 10:32:37,430 - [test_main_stream.py-->line:94] - INFO: 用例：获取项目列表，执行未通过
2020-03-04 21:02:01,422 - [test_main_stream.py-->line:92] - INFO: 用例：管理员注册，执行未通过
2020-03-04 21:02:01,866 - [test_main_stream.py-->line:92] - INFO: 用例：管理员正常登录，执行未通过
2020-03-04 21:02:02,282 - [test_main_stream.py-->line:92] - INFO: 用例：管理员加标，执行未通过
2020-03-04 21:02:02,481 - [test_main_stream.py-->line:92] - INFO: 用例：管理员审核，执行未通过
2020-03-04 21:02:02,708 - [test_main_stream.py-->line:92] - INFO: 用例：用户注册，执行未通过
2020-03-04 21:02:02,928 - [test_main_stream.py-->line:92] - INFO: 用例：投资人正常登录，执行未通过
2020-03-04 21:02:03,136 - [test_main_stream.py-->line:92] - INFO: 用例：获取用户信息，执行未通过
2020-03-04 21:02:03,397 - [test_main_stream.py-->line:92] - INFO: 用例：更改昵称，执行未通过
2020-03-04 21:02:03,629 - [test_main_stream.py-->line:92] - INFO: 用例：充值，执行未通过
2020-03-04 21:02:04,056 - [test_main_stream.py-->line:92] - INFO: 用例：投资人正常投资，执行未通过
2020-03-04 21:02:04,293 - [test_main_stream.py-->line:92] - INFO: 用例：取现，执行未通过
2020-03-04 21:02:04,532 - [test_main_stream.py-->line:92] - INFO: 用例：获取项目列表，执行未通过
2020-03-04 22:06:27,228 - [test_add.py-->line:76] - INFO: 用例：加标成功，执行未通过
2020-03-04 22:06:27,450 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-03-04 22:06:27,653 - [test_add.py-->line:76] - INFO: 用例：加标失败—标题为空，执行未通过
2020-03-04 22:06:27,865 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为空，执行未通过
2020-03-04 22:06:28,093 - [test_add.py-->line:76] - INFO: 用例：加标失败—年利率为空，执行未通过
2020-03-04 22:06:28,297 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限为空，执行未通过
2020-03-04 22:06:28,562 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限类型为空，执行未通过
2020-03-04 22:06:28,777 - [test_add.py-->line:76] - INFO: 用例：加标失败—竞标天数为空，执行未通过
2020-03-04 22:06:29,003 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id不是当前登录用户，执行未通过
2020-03-04 22:06:29,291 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为负数，执行未通过
2020-03-04 22:06:29,519 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为小数，执行未通过
2020-03-04 22:06:30,111 - [test_adiut.py-->line:120] - INFO: 用例：审核通过，执行未通过
2020-03-04 22:06:30,486 - [test_adiut.py-->line:120] - INFO: 用例：审核不通过，执行未通过
2020-03-04 22:06:30,771 - [test_adiut.py-->line:120] - INFO: 用例：项目不待审核状态，执行未通过
2020-03-04 22:06:31,071 - [test_adiut.py-->line:120] - INFO: 用例：参数approved_or_not为空，执行未通过
2020-03-04 22:06:31,323 - [test_adiut.py-->line:120] - INFO: 用例：项目id为空，执行未通过
2020-03-04 22:06:31,587 - [test_adiut.py-->line:120] - INFO: 用例：项目id不存在，执行未通过
2020-03-04 22:06:31,903 - [test_info.py-->line:79] - INFO: 用例：正常获取用户信息，执行未通过
2020-03-04 22:06:32,128 - [test_info.py-->line:79] - INFO: 用例：不存在的用户id，执行未通过
2020-03-04 22:06:32,371 - [test_invest.py-->line:89] - INFO: 用例：管理员正常登录，执行未通过
2020-03-04 22:06:32,642 - [test_invest.py-->line:89] - INFO: 用例：管理员加标，执行未通过
2020-03-04 22:06:33,067 - [test_invest.py-->line:89] - INFO: 用例：管理员审核，执行未通过
2020-03-04 22:06:33,286 - [test_invest.py-->line:89] - INFO: 用例：投资人正常登录，执行未通过
2020-03-04 22:06:33,518 - [test_invest.py-->line:89] - INFO: 用例：投资人正常投资，执行未通过
2020-03-04 22:06:33,731 - [test_invest.py-->line:89] - INFO: 用例：投资人id为空，执行未通过
2020-03-04 22:06:34,029 - [test_invest.py-->line:89] - INFO: 用例：标id为空，执行未通过
2020-03-04 22:06:34,244 - [test_invest.py-->line:89] - INFO: 用例：投资金额为空，执行未通过
2020-03-04 22:06:34,490 - [test_invest.py-->line:89] - INFO: 用例：投资金额大于项目可投金额，执行未通过
2020-03-04 22:06:34,745 - [test_invest.py-->line:89] - INFO: 用例：投资金额等于项目可投金额，执行未通过
2020-03-04 22:06:35,003 - [test_loans.py-->line:57] - INFO: 用例：获取成功:不填参数，执行未通过
2020-03-04 22:06:35,221 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面参数，执行未通过
2020-03-04 22:06:35,437 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面内容数，执行未通过
2020-03-04 22:06:36,098 - [test_loans.py-->line:57] - INFO: 用例：获取成功:都填参数，执行未通过
2020-03-04 22:06:36,396 - [test_main_stream.py-->line:92] - INFO: 用例：管理员注册，执行未通过
2020-03-04 22:06:36,625 - [test_main_stream.py-->line:92] - INFO: 用例：管理员正常登录，执行未通过
2020-03-04 22:06:36,845 - [test_main_stream.py-->line:92] - INFO: 用例：管理员加标，执行未通过
2020-03-04 22:06:37,067 - [test_main_stream.py-->line:92] - INFO: 用例：管理员审核，执行未通过
2020-03-04 22:06:37,302 - [test_main_stream.py-->line:92] - INFO: 用例：用户注册，执行未通过
2020-03-04 22:06:37,550 - [test_main_stream.py-->line:92] - INFO: 用例：投资人正常登录，执行未通过
2020-03-04 22:06:37,755 - [test_main_stream.py-->line:92] - INFO: 用例：获取用户信息，执行未通过
2020-03-04 22:06:37,995 - [test_main_stream.py-->line:92] - INFO: 用例：更改昵称，执行未通过
2020-03-04 22:06:38,226 - [test_main_stream.py-->line:92] - INFO: 用例：充值，执行未通过
2020-03-04 22:06:38,558 - [test_main_stream.py-->line:92] - INFO: 用例：投资人正常投资，执行未通过
2020-03-04 22:06:38,812 - [test_main_stream.py-->line:92] - INFO: 用例：取现，执行未通过
2020-03-04 22:06:39,328 - [test_main_stream.py-->line:92] - INFO: 用例：获取项目列表，执行未通过
2020-03-04 22:06:40,148 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-整数，执行未通过
2020-03-04 22:06:40,665 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-1位小数，执行未通过
2020-03-04 22:06:41,191 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-2位小数，执行未通过
2020-03-04 22:06:41,718 - [test_rechage.py-->line:100] - INFO: 用例：充值成功-50万，执行未通过
2020-03-04 22:06:41,948 - [test_rechage.py-->line:100] - INFO: 用例：会员id为空，执行未通过
2020-03-04 22:06:42,168 - [test_rechage.py-->line:100] - INFO: 用例：id不是当前登录的用户，执行未通过
2020-03-04 22:06:42,408 - [test_rechage.py-->line:95] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-04 22:06:42,410 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 22:06:42,623 - [test_rechage.py-->line:100] - INFO: 用例：会员id为小数，执行未通过
2020-03-04 22:06:42,919 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为0，执行未通过
2020-03-04 22:06:42,919 - [test_rechage.py-->line:96] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 22:06:43,182 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为负数，执行未通过
2020-03-04 22:06:43,183 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 22:06:43,453 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额为空，执行未通过
2020-03-04 22:06:43,453 - [test_rechage.py-->line:96] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 86, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 22:06:43,701 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-3位小数，执行未通过
2020-03-04 22:06:43,702 - [test_rechage.py-->line:96] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-04 22:06:43,962 - [test_rechage.py-->line:95] - ERROR: 用例：充值金额-大于50万，执行未通过
2020-03-04 22:06:43,963 - [test_rechage.py-->line:96] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_rechage.py", line 87, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-03-04 22:06:44,322 - [test_rechage.py-->line:100] - INFO: 用例：充值金额-非数字，执行未通过
2020-03-04 22:06:44,605 - [test_register.py-->line:97] - ERROR: 用例：登录成功，执行未通过
2020-03-04 22:06:44,606 - [test_register.py-->line:98] - ERROR: 0 != 1001
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1001
2020-03-04 22:06:44,832 - [test_register.py-->line:97] - ERROR: 用例：手机号为空，执行未通过
2020-03-04 22:06:44,832 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 22:06:45,086 - [test_register.py-->line:97] - ERROR: 用例：密码为空，执行未通过
2020-03-04 22:06:45,087 - [test_register.py-->line:98] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_register.py", line 93, in test_login
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-03-04 22:06:45,338 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-03-04 22:06:45,584 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-03-04 22:06:45,806 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-03-04 22:06:46,159 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-03-04 22:06:46,471 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-03-04 22:06:46,691 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-03-04 22:06:46,906 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-03-04 22:06:47,124 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-03-04 22:06:47,329 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-03-04 22:06:47,562 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-03-04 22:06:47,790 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-03-04 22:06:48,025 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-03-04 22:06:48,278 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-03-04 22:06:48,570 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-03-04 22:06:49,096 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-03-04 22:06:49,428 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-03-04 22:06:49,731 - [test_update.py-->line:82] - INFO: 用例：正常修改昵称—用户名长度10位，执行未通过
2020-03-04 22:06:49,953 - [test_update.py-->line:77] - ERROR: 用例：修改的用户名为空，执行未通过
2020-03-04 22:06:49,953 - [test_update.py-->line:78] - ERROR: '用户不能为空' != '用户名为空'
- 用户不能为空
?   ^^
+ 用户名为空
?   ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_update.py", line 72, in test_update
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '用户不能为空' != '用户名为空'
- 用户不能为空
?   ^^
+ 用户名为空
?   ^

2020-03-04 22:06:50,169 - [test_update.py-->line:77] - ERROR: 用例：用户名长度11位，执行未通过
2020-03-04 22:06:50,169 - [test_update.py-->line:78] - ERROR: 1001 != 2
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_update.py", line 71, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1001 != 2
2020-03-04 22:06:50,431 - [test_update.py-->line:77] - ERROR: 用例：用户id非数字类型，执行未通过
2020-03-04 22:06:50,431 - [test_update.py-->line:78] - ERROR: 1001 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_update.py", line 71, in test_update
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1001 != 0
2020-03-04 22:06:50,926 - [test_withdraw.py-->line:138] - INFO: 用例：登录成功，执行未通过
2020-03-04 22:06:51,487 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-整数，执行未通过
2020-03-04 22:06:51,849 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-1位小数，执行未通过
2020-03-04 22:06:52,224 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-2位小数，执行未通过
2020-03-04 22:06:52,589 - [test_withdraw.py-->line:138] - INFO: 用例：提现成功-50万，执行未通过
2020-03-04 22:06:52,799 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为空，执行未通过
2020-03-04 22:06:53,004 - [test_withdraw.py-->line:138] - INFO: 用例：会员id不存在，执行未通过
2020-03-04 22:06:53,212 - [test_withdraw.py-->line:133] - ERROR: 用例：会员id为字符串，执行未通过
2020-03-04 22:06:53,214 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 22:06:53,437 - [test_withdraw.py-->line:138] - INFO: 用例：会员id为小数，执行未通过
2020-03-04 22:06:53,695 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为0，执行未通过
2020-03-04 22:06:53,696 - [test_withdraw.py-->line:134] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 122, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-03-04 22:06:54,034 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为负数，执行未通过
2020-03-04 22:06:54,034 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 22:06:54,251 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额为空，执行未通过
2020-03-04 22:06:54,251 - [test_withdraw.py-->line:134] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-03-04 22:06:54,510 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-3位小数，执行未通过
2020-03-04 22:06:54,510 - [test_withdraw.py-->line:134] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-03-04 22:06:54,763 - [test_withdraw.py-->line:133] - ERROR: 用例：提现金额-大于50万，执行未通过
2020-03-04 22:06:54,763 - [test_withdraw.py-->line:134] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_withdraw.py", line 123, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-03-04 22:06:55,062 - [test_withdraw.py-->line:138] - INFO: 用例：提现金额-非数字，执行未通过
2020-03-05 10:49:34,588 - [test_invest.py-->line:130] - INFO: 用例：管理员正常登录，执行未通过
2020-03-05 10:49:34,757 - [test_invest.py-->line:130] - INFO: 用例：管理员加标，执行未通过
2020-03-05 10:49:34,929 - [test_invest.py-->line:130] - INFO: 用例：管理员审核，执行未通过
2020-03-05 10:49:35,131 - [test_invest.py-->line:130] - INFO: 用例：投资人正常登录，执行未通过
2020-03-05 10:49:35,576 - [test_invest.py-->line:130] - INFO: 用例：投资人id为空，执行未通过
2020-03-05 10:49:35,726 - [test_invest.py-->line:130] - INFO: 用例：标id为空，执行未通过
2020-03-05 10:49:35,876 - [test_invest.py-->line:130] - INFO: 用例：投资金额为空，执行未通过
2020-03-05 10:49:36,028 - [test_invest.py-->line:130] - INFO: 用例：投资金额大于项目可投金额，执行未通过
2020-03-05 10:49:56,118 - [test_invest.py-->line:130] - INFO: 用例：管理员正常登录，执行未通过
2020-03-05 10:49:56,270 - [test_invest.py-->line:130] - INFO: 用例：管理员加标，执行未通过
2020-03-05 10:49:56,410 - [test_invest.py-->line:130] - INFO: 用例：管理员审核，执行未通过
2020-03-05 10:49:56,551 - [test_invest.py-->line:130] - INFO: 用例：投资人正常登录，执行未通过
2020-03-05 10:49:57,182 - [test_invest.py-->line:130] - INFO: 用例：投资人id为空，执行未通过
2020-03-05 10:49:57,343 - [test_invest.py-->line:130] - INFO: 用例：标id为空，执行未通过
2020-03-05 10:49:57,477 - [test_invest.py-->line:130] - INFO: 用例：投资金额为空，执行未通过
2020-03-05 10:49:57,612 - [test_invest.py-->line:130] - INFO: 用例：投资金额大于项目可投金额，执行未通过
2020-03-05 10:51:10,448 - [test_invest.py-->line:130] - INFO: 用例：管理员正常登录，执行未通过
2020-03-05 10:51:10,673 - [test_invest.py-->line:130] - INFO: 用例：管理员加标，执行未通过
2020-03-05 10:51:10,866 - [test_invest.py-->line:130] - INFO: 用例：管理员审核，执行未通过
2020-03-05 10:51:11,073 - [test_invest.py-->line:130] - INFO: 用例：投资人正常登录，执行未通过
2020-03-05 10:51:12,196 - [test_invest.py-->line:125] - ERROR: 用例：投资人正常投资，执行未通过
2020-03-05 10:51:12,196 - [test_invest.py-->line:126] - ERROR:  :: Decimal('-300.00') != Decimal('300')
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('-300.00') != Decimal('300')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_invest.py", line 104, in test_login
    self.assertEqual(end_amount - start_amount, Decimal(str(data["amount"])))
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: Decimal('-300.00') != Decimal('300')
2020-03-05 10:51:12,399 - [test_invest.py-->line:130] - INFO: 用例：投资人id为空，执行未通过
2020-03-05 10:51:12,546 - [test_invest.py-->line:130] - INFO: 用例：标id为空，执行未通过
2020-03-05 10:51:12,687 - [test_invest.py-->line:130] - INFO: 用例：投资金额为空，执行未通过
2020-03-05 10:51:12,843 - [test_invest.py-->line:130] - INFO: 用例：投资金额大于项目可投金额，执行未通过
2020-03-05 10:51:13,691 - [test_invest.py-->line:125] - ERROR: 用例：投资刚好满标：投资金额等于项目可投金额，执行未通过
2020-03-05 10:51:13,691 - [test_invest.py-->line:126] - ERROR:  :: Decimal('-3700.00') != Decimal('3700')
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('-3700.00') != Decimal('3700')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py26_project\py26_api_test\testcases\test_invest.py", line 104, in test_login
    self.assertEqual(end_amount - start_amount, Decimal(str(data["amount"])))
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: Decimal('-3700.00') != Decimal('3700')
2020-03-05 10:51:54,465 - [test_invest.py-->line:130] - INFO: 用例：管理员正常登录，执行未通过
2020-03-05 10:51:54,706 - [test_invest.py-->line:130] - INFO: 用例：管理员加标，执行未通过
2020-03-05 10:51:54,845 - [test_invest.py-->line:130] - INFO: 用例：管理员审核，执行未通过
2020-03-05 10:51:54,990 - [test_invest.py-->line:130] - INFO: 用例：投资人正常登录，执行未通过
2020-03-05 10:51:56,497 - [test_invest.py-->line:130] - INFO: 用例：投资人id为空，执行未通过
2020-03-05 10:51:56,632 - [test_invest.py-->line:130] - INFO: 用例：标id为空，执行未通过
2020-03-05 10:51:56,844 - [test_invest.py-->line:130] - INFO: 用例：投资金额为空，执行未通过
2020-03-05 10:51:57,047 - [test_invest.py-->line:130] - INFO: 用例：投资金额大于项目可投金额，执行未通过
2020-03-05 10:52:20,383 - [test_invest.py-->line:130] - INFO: 用例：管理员正常登录，执行未通过
2020-03-05 10:52:20,538 - [test_invest.py-->line:130] - INFO: 用例：管理员加标，执行未通过
2020-03-05 10:52:20,679 - [test_invest.py-->line:130] - INFO: 用例：管理员审核，执行未通过
2020-03-05 10:52:20,827 - [test_invest.py-->line:130] - INFO: 用例：投资人正常登录，执行未通过
2020-03-05 10:52:22,483 - [test_invest.py-->line:130] - INFO: 用例：投资人id为空，执行未通过
2020-03-05 10:52:22,637 - [test_invest.py-->line:130] - INFO: 用例：标id为空，执行未通过
2020-03-05 10:52:22,768 - [test_invest.py-->line:130] - INFO: 用例：投资金额为空，执行未通过
2020-03-05 10:52:22,917 - [test_invest.py-->line:130] - INFO: 用例：投资金额大于项目可投金额，执行未通过
2020-03-05 10:52:37,578 - [test_invest.py-->line:130] - INFO: 用例：管理员正常登录，执行未通过
2020-03-05 10:52:37,733 - [test_invest.py-->line:130] - INFO: 用例：管理员加标，执行未通过
2020-03-05 10:52:37,870 - [test_invest.py-->line:130] - INFO: 用例：管理员审核，执行未通过
2020-03-05 10:52:38,015 - [test_invest.py-->line:130] - INFO: 用例：投资人正常登录，执行未通过
2020-03-05 10:52:38,968 - [test_invest.py-->line:130] - INFO: 用例：投资人正常投资，执行未通过
2020-03-05 10:52:39,111 - [test_invest.py-->line:130] - INFO: 用例：投资人id为空，执行未通过
2020-03-05 10:52:39,241 - [test_invest.py-->line:130] - INFO: 用例：标id为空，执行未通过
2020-03-05 10:52:39,394 - [test_invest.py-->line:130] - INFO: 用例：投资金额为空，执行未通过
2020-03-05 10:52:39,539 - [test_invest.py-->line:130] - INFO: 用例：投资金额大于项目可投金额，执行未通过
2020-03-05 10:53:04,823 - [test_invest.py-->line:130] - INFO: 用例：管理员正常登录，执行未通过
2020-03-05 10:53:04,991 - [test_invest.py-->line:130] - INFO: 用例：管理员加标，执行未通过
2020-03-05 10:53:05,135 - [test_invest.py-->line:130] - INFO: 用例：管理员审核，执行未通过
2020-03-05 10:53:05,308 - [test_invest.py-->line:130] - INFO: 用例：投资人正常登录，执行未通过
2020-03-05 10:53:08,018 - [test_invest.py-->line:130] - INFO: 用例：投资人正常投资，执行未通过
2020-03-05 10:53:08,162 - [test_invest.py-->line:130] - INFO: 用例：投资人id为空，执行未通过
2020-03-05 10:53:08,309 - [test_invest.py-->line:130] - INFO: 用例：标id为空，执行未通过
2020-03-05 10:53:08,459 - [test_invest.py-->line:130] - INFO: 用例：投资金额为空，执行未通过
2020-03-05 10:53:08,600 - [test_invest.py-->line:130] - INFO: 用例：投资金额大于项目可投金额，执行未通过
2020-03-05 10:53:10,001 - [test_invest.py-->line:130] - INFO: 用例：投资刚好满标：投资金额等于项目可投金额，执行未通过
2020-08-21 15:12:07,478 - [test_add.py-->line:76] - INFO: 用例：加标成功，执行未通过
2020-08-21 15:12:07,656 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-08-21 15:12:07,813 - [test_add.py-->line:76] - INFO: 用例：加标失败—标题为空，执行未通过
2020-08-21 15:12:07,966 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为空，执行未通过
2020-08-21 15:12:08,126 - [test_add.py-->line:76] - INFO: 用例：加标失败—年利率为空，执行未通过
2020-08-21 15:12:08,291 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限为空，执行未通过
2020-08-21 15:12:08,470 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限类型为空，执行未通过
2020-08-21 15:12:08,625 - [test_add.py-->line:76] - INFO: 用例：加标失败—竞标天数为空，执行未通过
2020-08-21 15:12:08,789 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id不是当前登录用户，执行未通过
2020-08-21 15:12:08,955 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为负数，执行未通过
2020-08-21 15:12:09,126 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为小数，执行未通过
2020-08-21 15:12:09,485 - [test_adiut.py-->line:120] - INFO: 用例：审核通过，执行未通过
2020-08-21 15:12:09,778 - [test_adiut.py-->line:120] - INFO: 用例：审核不通过，执行未通过
2020-08-21 15:12:09,980 - [test_adiut.py-->line:120] - INFO: 用例：项目不待审核状态，执行未通过
2020-08-21 15:12:10,188 - [test_adiut.py-->line:120] - INFO: 用例：参数approved_or_not为空，执行未通过
2020-08-21 15:12:10,403 - [test_adiut.py-->line:120] - INFO: 用例：项目id为空，执行未通过
2020-08-21 15:12:10,599 - [test_adiut.py-->line:120] - INFO: 用例：项目id不存在，执行未通过
2020-08-21 15:12:10,978 - [test_invest.py-->line:130] - INFO: 用例：管理员正常登录，执行未通过
2020-08-21 15:12:11,172 - [test_invest.py-->line:130] - INFO: 用例：管理员加标，执行未通过
2020-08-21 15:12:11,332 - [test_invest.py-->line:130] - INFO: 用例：管理员审核，执行未通过
2020-08-21 15:12:12,342 - [test_invest.py-->line:130] - INFO: 用例：投资人正常投资，执行未通过
2020-08-21 15:12:12,512 - [test_invest.py-->line:130] - INFO: 用例：投资人id为空，执行未通过
2020-08-21 15:12:12,692 - [test_invest.py-->line:130] - INFO: 用例：标id为空，执行未通过
2020-08-21 15:12:12,862 - [test_invest.py-->line:130] - INFO: 用例：投资金额为空，执行未通过
2020-08-21 15:12:13,039 - [test_invest.py-->line:130] - INFO: 用例：投资金额大于项目可投金额，执行未通过
2020-08-21 15:12:13,987 - [test_invest.py-->line:130] - INFO: 用例：投资刚好满标：投资金额等于项目可投金额，执行未通过
2020-08-21 15:12:14,189 - [test_loans.py-->line:57] - INFO: 用例：获取成功:不填参数，执行未通过
2020-08-21 15:12:14,360 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面参数，执行未通过
2020-08-21 15:12:14,522 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面内容数，执行未通过
2020-08-21 15:12:14,724 - [test_loans.py-->line:57] - INFO: 用例：获取成功:都填参数，执行未通过
2020-08-21 15:12:15,053 - [test_main_stream.py-->line:92] - INFO: 用例：管理员注册，执行未通过
2020-08-21 15:12:15,300 - [test_main_stream.py-->line:92] - INFO: 用例：管理员正常登录，执行未通过
2020-08-21 15:12:15,471 - [test_main_stream.py-->line:92] - INFO: 用例：管理员加标，执行未通过
2020-08-21 15:12:15,635 - [test_main_stream.py-->line:92] - INFO: 用例：管理员审核，执行未通过
2020-08-21 15:12:15,858 - [test_main_stream.py-->line:92] - INFO: 用例：用户注册，执行未通过
2020-08-21 15:12:16,076 - [test_main_stream.py-->line:92] - INFO: 用例：投资人正常登录，执行未通过
2020-08-21 15:12:16,235 - [test_main_stream.py-->line:92] - INFO: 用例：获取用户信息，执行未通过
2020-08-21 15:12:16,402 - [test_main_stream.py-->line:92] - INFO: 用例：更改昵称，执行未通过
2020-08-21 15:12:16,732 - [test_main_stream.py-->line:92] - INFO: 用例：充值，执行未通过
2020-08-21 15:12:16,911 - [test_main_stream.py-->line:92] - INFO: 用例：投资人正常投资，执行未通过
2020-08-21 15:12:17,086 - [test_main_stream.py-->line:92] - INFO: 用例：取现，执行未通过
2020-08-21 15:12:17,258 - [test_main_stream.py-->line:92] - INFO: 用例：获取项目列表，执行未通过
2020-08-21 15:12:17,781 - [test_register.py-->line:102] - INFO: 用例：登录成功，执行未通过
2020-08-21 15:12:17,941 - [test_register.py-->line:102] - INFO: 用例：手机号为空，执行未通过
2020-08-21 15:12:18,103 - [test_register.py-->line:102] - INFO: 用例：密码为空，执行未通过
2020-08-21 15:12:18,400 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-08-21 15:12:18,640 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-08-21 15:12:18,791 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-08-21 15:12:19,249 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-08-21 15:12:19,608 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-08-21 15:12:19,765 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-08-21 15:12:19,925 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-08-21 15:12:20,077 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-08-21 15:12:20,236 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-08-21 15:12:20,483 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-08-21 15:12:20,644 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-08-21 15:12:20,805 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-08-21 15:12:20,992 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-08-21 15:12:21,161 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-08-21 15:12:21,317 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-08-21 15:12:21,687 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-08-21 15:25:09,548 - [test_add.py-->line:76] - INFO: 用例：加标成功，执行未通过
2020-08-21 15:25:09,705 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-08-21 15:25:09,860 - [test_add.py-->line:76] - INFO: 用例：加标失败—标题为空，执行未通过
2020-08-21 15:25:10,018 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为空，执行未通过
2020-08-21 15:25:10,169 - [test_add.py-->line:76] - INFO: 用例：加标失败—年利率为空，执行未通过
2020-08-21 15:25:10,318 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限为空，执行未通过
2020-08-21 15:25:10,533 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限类型为空，执行未通过
2020-08-21 15:25:10,684 - [test_add.py-->line:76] - INFO: 用例：加标失败—竞标天数为空，执行未通过
2020-08-21 15:25:10,876 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id不是当前登录用户，执行未通过
2020-08-21 15:25:11,022 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为负数，执行未通过
2020-08-21 15:25:11,190 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为小数，执行未通过
2020-08-21 15:25:11,563 - [test_adiut.py-->line:120] - INFO: 用例：审核通过，执行未通过
2020-08-21 15:25:11,850 - [test_adiut.py-->line:120] - INFO: 用例：审核不通过，执行未通过
2020-08-21 15:25:12,215 - [test_adiut.py-->line:120] - INFO: 用例：项目不待审核状态，执行未通过
2020-08-21 15:25:12,414 - [test_adiut.py-->line:120] - INFO: 用例：参数approved_or_not为空，执行未通过
2020-08-21 15:25:12,736 - [test_adiut.py-->line:120] - INFO: 用例：项目id为空，执行未通过
2020-08-21 15:25:12,959 - [test_adiut.py-->line:120] - INFO: 用例：项目id不存在，执行未通过
2020-08-21 15:25:13,525 - [test_invest.py-->line:130] - INFO: 用例：管理员正常登录，执行未通过
2020-08-21 15:25:13,746 - [test_invest.py-->line:130] - INFO: 用例：管理员加标，执行未通过
2020-08-21 15:25:13,923 - [test_invest.py-->line:130] - INFO: 用例：管理员审核，执行未通过
2020-08-21 15:25:14,657 - [test_invest.py-->line:130] - INFO: 用例：投资人正常投资，执行未通过
2020-08-21 15:25:14,818 - [test_invest.py-->line:130] - INFO: 用例：投资人id为空，执行未通过
2020-08-21 15:25:15,076 - [test_invest.py-->line:130] - INFO: 用例：标id为空，执行未通过
2020-08-21 15:25:15,268 - [test_invest.py-->line:130] - INFO: 用例：投资金额为空，执行未通过
2020-08-21 15:25:15,442 - [test_invest.py-->line:130] - INFO: 用例：投资金额大于项目可投金额，执行未通过
2020-08-21 15:25:16,409 - [test_invest.py-->line:130] - INFO: 用例：投资刚好满标：投资金额等于项目可投金额，执行未通过
2020-08-21 15:25:16,934 - [test_loans.py-->line:57] - INFO: 用例：获取成功:不填参数，执行未通过
2020-08-21 15:25:17,139 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面参数，执行未通过
2020-08-21 15:25:17,363 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面内容数，执行未通过
2020-08-21 15:25:17,552 - [test_loans.py-->line:57] - INFO: 用例：获取成功:都填参数，执行未通过
2020-08-21 15:25:17,867 - [test_main_stream.py-->line:92] - INFO: 用例：管理员注册，执行未通过
2020-08-21 15:25:18,104 - [test_main_stream.py-->line:92] - INFO: 用例：管理员正常登录，执行未通过
2020-08-21 15:25:18,290 - [test_main_stream.py-->line:92] - INFO: 用例：管理员加标，执行未通过
2020-08-21 15:25:18,495 - [test_main_stream.py-->line:92] - INFO: 用例：管理员审核，执行未通过
2020-08-21 15:25:18,725 - [test_main_stream.py-->line:92] - INFO: 用例：用户注册，执行未通过
2020-08-21 15:25:18,947 - [test_main_stream.py-->line:92] - INFO: 用例：投资人正常登录，执行未通过
2020-08-21 15:25:19,110 - [test_main_stream.py-->line:92] - INFO: 用例：获取用户信息，执行未通过
2020-08-21 15:25:19,282 - [test_main_stream.py-->line:92] - INFO: 用例：更改昵称，执行未通过
2020-08-21 15:25:19,439 - [test_main_stream.py-->line:92] - INFO: 用例：充值，执行未通过
2020-08-21 15:25:19,649 - [test_main_stream.py-->line:92] - INFO: 用例：投资人正常投资，执行未通过
2020-08-21 15:25:19,847 - [test_main_stream.py-->line:92] - INFO: 用例：取现，执行未通过
2020-08-21 15:25:20,049 - [test_main_stream.py-->line:92] - INFO: 用例：获取项目列表，执行未通过
2020-08-21 15:25:20,559 - [test_register.py-->line:102] - INFO: 用例：登录成功，执行未通过
2020-08-21 15:25:20,796 - [test_register.py-->line:102] - INFO: 用例：手机号为空，执行未通过
2020-08-21 15:25:20,972 - [test_register.py-->line:102] - INFO: 用例：密码为空，执行未通过
2020-08-21 15:25:21,210 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-08-21 15:25:21,471 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-08-21 15:25:21,663 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-08-21 15:25:22,081 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-08-21 15:25:22,449 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-08-21 15:25:22,620 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-08-21 15:25:22,800 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-08-21 15:25:22,968 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-08-21 15:25:23,137 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-08-21 15:25:23,413 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-08-21 15:25:23,590 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-08-21 15:25:23,810 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-08-21 15:25:24,023 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-08-21 15:25:24,276 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-08-21 15:25:24,445 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-08-21 15:25:25,047 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-08-24 14:46:01,737 - [test_add.py-->line:76] - INFO: 用例：加标成功，执行未通过
2020-08-24 14:46:01,947 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-08-24 14:46:02,136 - [test_add.py-->line:76] - INFO: 用例：加标失败—标题为空，执行未通过
2020-08-24 14:46:02,311 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为空，执行未通过
2020-08-24 14:46:02,480 - [test_add.py-->line:76] - INFO: 用例：加标失败—年利率为空，执行未通过
2020-08-24 14:46:02,643 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限为空，执行未通过
2020-08-24 14:46:02,850 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限类型为空，执行未通过
2020-08-24 14:46:03,003 - [test_add.py-->line:76] - INFO: 用例：加标失败—竞标天数为空，执行未通过
2020-08-24 14:46:03,181 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id不是当前登录用户，执行未通过
2020-08-24 14:46:03,346 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为负数，执行未通过
2020-08-24 14:46:03,508 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为小数，执行未通过
2020-08-24 14:46:03,915 - [test_adiut.py-->line:120] - INFO: 用例：审核通过，执行未通过
2020-08-24 14:46:04,215 - [test_adiut.py-->line:120] - INFO: 用例：审核不通过，执行未通过
2020-08-24 14:46:04,444 - [test_adiut.py-->line:120] - INFO: 用例：项目不待审核状态，执行未通过
2020-08-24 14:46:04,653 - [test_adiut.py-->line:120] - INFO: 用例：参数approved_or_not为空，执行未通过
2020-08-24 14:46:04,863 - [test_adiut.py-->line:120] - INFO: 用例：项目id为空，执行未通过
2020-08-24 14:46:05,071 - [test_adiut.py-->line:120] - INFO: 用例：项目id不存在，执行未通过
2020-08-24 14:46:05,426 - [test_invest.py-->line:130] - INFO: 用例：管理员正常登录，执行未通过
2020-08-24 14:46:05,636 - [test_invest.py-->line:130] - INFO: 用例：管理员加标，执行未通过
2020-08-24 14:46:05,802 - [test_invest.py-->line:130] - INFO: 用例：管理员审核，执行未通过
2020-08-24 14:46:06,633 - [test_invest.py-->line:130] - INFO: 用例：投资人正常投资，执行未通过
2020-08-24 14:46:06,786 - [test_invest.py-->line:130] - INFO: 用例：投资人id为空，执行未通过
2020-08-24 14:46:06,951 - [test_invest.py-->line:130] - INFO: 用例：标id为空，执行未通过
2020-08-24 14:46:07,102 - [test_invest.py-->line:130] - INFO: 用例：投资金额为空，执行未通过
2020-08-24 14:46:07,260 - [test_invest.py-->line:130] - INFO: 用例：投资金额大于项目可投金额，执行未通过
2020-08-24 14:46:08,312 - [test_invest.py-->line:130] - INFO: 用例：投资刚好满标：投资金额等于项目可投金额，执行未通过
2020-08-24 14:46:08,565 - [test_loans.py-->line:57] - INFO: 用例：获取成功:不填参数，执行未通过
2020-08-24 14:46:08,747 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面参数，执行未通过
2020-08-24 14:46:08,915 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面内容数，执行未通过
2020-08-24 14:46:09,087 - [test_loans.py-->line:57] - INFO: 用例：获取成功:都填参数，执行未通过
2020-08-24 14:46:09,424 - [test_main_stream.py-->line:92] - INFO: 用例：管理员注册，执行未通过
2020-08-24 14:46:09,682 - [test_main_stream.py-->line:92] - INFO: 用例：管理员正常登录，执行未通过
2020-08-24 14:46:09,858 - [test_main_stream.py-->line:92] - INFO: 用例：管理员加标，执行未通过
2020-08-24 14:46:10,030 - [test_main_stream.py-->line:92] - INFO: 用例：管理员审核，执行未通过
2020-08-24 14:46:10,281 - [test_main_stream.py-->line:92] - INFO: 用例：用户注册，执行未通过
2020-08-24 14:46:10,514 - [test_main_stream.py-->line:92] - INFO: 用例：投资人正常登录，执行未通过
2020-08-24 14:46:10,668 - [test_main_stream.py-->line:92] - INFO: 用例：获取用户信息，执行未通过
2020-08-24 14:46:10,859 - [test_main_stream.py-->line:92] - INFO: 用例：更改昵称，执行未通过
2020-08-24 14:46:11,029 - [test_main_stream.py-->line:92] - INFO: 用例：充值，执行未通过
2020-08-24 14:46:11,206 - [test_main_stream.py-->line:92] - INFO: 用例：投资人正常投资，执行未通过
2020-08-24 14:46:11,382 - [test_main_stream.py-->line:92] - INFO: 用例：取现，执行未通过
2020-08-24 14:46:11,562 - [test_main_stream.py-->line:92] - INFO: 用例：获取项目列表，执行未通过
2020-08-24 14:46:12,114 - [test_register.py-->line:102] - INFO: 用例：登录成功，执行未通过
2020-08-24 14:46:12,276 - [test_register.py-->line:102] - INFO: 用例：手机号为空，执行未通过
2020-08-24 14:46:12,431 - [test_register.py-->line:102] - INFO: 用例：密码为空，执行未通过
2020-08-24 14:46:12,673 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-08-24 14:46:12,910 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-08-24 14:46:13,084 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-08-24 14:46:13,509 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-08-24 14:46:13,918 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-08-24 14:46:14,134 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-08-24 14:46:14,307 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-08-24 14:46:14,477 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-08-24 14:46:14,649 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-08-24 14:46:14,958 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-08-24 14:46:15,146 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-08-24 14:46:15,314 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-08-24 14:46:15,483 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-08-24 14:46:15,662 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-08-24 14:46:15,838 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-08-24 14:46:16,264 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
2020-08-24 14:46:23,092 - [test_add.py-->line:76] - INFO: 用例：加标成功，执行未通过
2020-08-24 14:46:23,245 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id为空，执行未通过
2020-08-24 14:46:23,397 - [test_add.py-->line:76] - INFO: 用例：加标失败—标题为空，执行未通过
2020-08-24 14:46:23,548 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为空，执行未通过
2020-08-24 14:46:23,703 - [test_add.py-->line:76] - INFO: 用例：加标失败—年利率为空，执行未通过
2020-08-24 14:46:23,864 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限为空，执行未通过
2020-08-24 14:46:24,050 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款期限类型为空，执行未通过
2020-08-24 14:46:24,222 - [test_add.py-->line:76] - INFO: 用例：加标失败—竞标天数为空，执行未通过
2020-08-24 14:46:24,440 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款人id不是当前登录用户，执行未通过
2020-08-24 14:46:24,620 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为负数，执行未通过
2020-08-24 14:46:24,780 - [test_add.py-->line:76] - INFO: 用例：加标失败—借款金额为小数，执行未通过
2020-08-24 14:46:25,158 - [test_adiut.py-->line:120] - INFO: 用例：审核通过，执行未通过
2020-08-24 14:46:25,453 - [test_adiut.py-->line:120] - INFO: 用例：审核不通过，执行未通过
2020-08-24 14:46:25,660 - [test_adiut.py-->line:120] - INFO: 用例：项目不待审核状态，执行未通过
2020-08-24 14:46:25,865 - [test_adiut.py-->line:120] - INFO: 用例：参数approved_or_not为空，执行未通过
2020-08-24 14:46:26,073 - [test_adiut.py-->line:120] - INFO: 用例：项目id为空，执行未通过
2020-08-24 14:46:26,272 - [test_adiut.py-->line:120] - INFO: 用例：项目id不存在，执行未通过
2020-08-24 14:46:26,627 - [test_invest.py-->line:130] - INFO: 用例：管理员正常登录，执行未通过
2020-08-24 14:46:26,832 - [test_invest.py-->line:130] - INFO: 用例：管理员加标，执行未通过
2020-08-24 14:46:27,003 - [test_invest.py-->line:130] - INFO: 用例：管理员审核，执行未通过
2020-08-24 14:46:27,810 - [test_invest.py-->line:130] - INFO: 用例：投资人正常投资，执行未通过
2020-08-24 14:46:28,046 - [test_invest.py-->line:130] - INFO: 用例：投资人id为空，执行未通过
2020-08-24 14:46:28,212 - [test_invest.py-->line:130] - INFO: 用例：标id为空，执行未通过
2020-08-24 14:46:28,418 - [test_invest.py-->line:130] - INFO: 用例：投资金额为空，执行未通过
2020-08-24 14:46:28,582 - [test_invest.py-->line:130] - INFO: 用例：投资金额大于项目可投金额，执行未通过
2020-08-24 14:46:29,567 - [test_invest.py-->line:130] - INFO: 用例：投资刚好满标：投资金额等于项目可投金额，执行未通过
2020-08-24 14:46:29,849 - [test_loans.py-->line:57] - INFO: 用例：获取成功:不填参数，执行未通过
2020-08-24 14:46:30,052 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面参数，执行未通过
2020-08-24 14:46:30,230 - [test_loans.py-->line:57] - INFO: 用例：获取成功:只填页面内容数，执行未通过
2020-08-24 14:46:30,443 - [test_loans.py-->line:57] - INFO: 用例：获取成功:都填参数，执行未通过
2020-08-24 14:46:30,815 - [test_main_stream.py-->line:92] - INFO: 用例：管理员注册，执行未通过
2020-08-24 14:46:31,051 - [test_main_stream.py-->line:92] - INFO: 用例：管理员正常登录，执行未通过
2020-08-24 14:46:31,238 - [test_main_stream.py-->line:92] - INFO: 用例：管理员加标，执行未通过
2020-08-24 14:46:31,412 - [test_main_stream.py-->line:92] - INFO: 用例：管理员审核，执行未通过
2020-08-24 14:46:31,678 - [test_main_stream.py-->line:92] - INFO: 用例：用户注册，执行未通过
2020-08-24 14:46:31,912 - [test_main_stream.py-->line:92] - INFO: 用例：投资人正常登录，执行未通过
2020-08-24 14:46:32,083 - [test_main_stream.py-->line:92] - INFO: 用例：获取用户信息，执行未通过
2020-08-24 14:46:32,254 - [test_main_stream.py-->line:92] - INFO: 用例：更改昵称，执行未通过
2020-08-24 14:46:32,491 - [test_main_stream.py-->line:92] - INFO: 用例：充值，执行未通过
2020-08-24 14:46:32,712 - [test_main_stream.py-->line:92] - INFO: 用例：投资人正常投资，执行未通过
2020-08-24 14:46:32,897 - [test_main_stream.py-->line:92] - INFO: 用例：取现，执行未通过
2020-08-24 14:46:33,074 - [test_main_stream.py-->line:92] - INFO: 用例：获取项目列表，执行未通过
2020-08-24 14:46:33,570 - [test_register.py-->line:102] - INFO: 用例：登录成功，执行未通过
2020-08-24 14:46:33,728 - [test_register.py-->line:102] - INFO: 用例：手机号为空，执行未通过
2020-08-24 14:46:33,889 - [test_register.py-->line:102] - INFO: 用例：密码为空，执行未通过
2020-08-24 14:46:34,124 - [test_register.py-->line:102] - INFO: 用例：手机号未注册，执行未通过
2020-08-24 14:46:34,363 - [test_register.py-->line:102] - INFO: 用例：密码错误，执行未通过
2020-08-24 14:46:34,545 - [test_register.py-->line:102] - INFO: 用例：手机号格式错误，执行未通过
2020-08-24 14:46:34,999 - [test_register.py-->line:63] - INFO: 用例：注册成功-带注册名，执行未通过
2020-08-24 14:46:35,456 - [test_register.py-->line:63] - INFO: 用例：成功-不带用户名，执行未通过
2020-08-24 14:46:35,628 - [test_register.py-->line:63] - INFO: 用例：不输入手机号，执行未通过
2020-08-24 14:46:35,795 - [test_register.py-->line:63] - INFO: 用例：手机号长度10位，执行未通过
2020-08-24 14:46:35,965 - [test_register.py-->line:63] - INFO: 用例：手机号长度12位，执行未通过
2020-08-24 14:46:36,132 - [test_register.py-->line:63] - INFO: 用例：手机号含有非法字符，执行未通过
2020-08-24 14:46:36,463 - [test_register.py-->line:63] - INFO: 用例：已注册过的手机号，执行未通过
2020-08-24 14:46:36,628 - [test_register.py-->line:63] - INFO: 用例：密码7位，执行未通过
2020-08-24 14:46:36,788 - [test_register.py-->line:63] - INFO: 用例：密码17位，执行未通过
2020-08-24 14:46:36,946 - [test_register.py-->line:63] - INFO: 用例：不输入密码，执行未通过
2020-08-24 14:46:37,122 - [test_register.py-->line:63] - INFO: 用例：注册名11位，执行未通过
2020-08-24 14:46:37,312 - [test_register.py-->line:63] - INFO: 用例：类型输入非0，1内容，执行未通过
2020-08-24 14:46:37,738 - [test_register.py-->line:63] - INFO: 用例：不输入类型，执行未通过
